:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the CubeMap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CubeMap:

CubeMap
=======

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

CubeMap 是一种 6 面 3D 纹理。

描述
----

通常用于伪造反射的 6 面 3D 纹理。它可用于使对象看起来好像在反射其周围环境。这通常比其他反射方法提供更好的性能。

属性
----

+--------------------------------------+----------------------------------------------------------------------------+---------+
| :ref:`int<class_int>`                | :ref:`flags<class_CubeMap_property_flags>`                                 | ``7``   |
+--------------------------------------+----------------------------------------------------------------------------+---------+
| :ref:`float<class_float>`            | :ref:`lossy_storage_quality<class_CubeMap_property_lossy_storage_quality>` | ``0.7`` |
+--------------------------------------+----------------------------------------------------------------------------+---------+
| :ref:`Storage<enum_CubeMap_Storage>` | :ref:`storage_mode<class_CubeMap_property_storage_mode>`                   | ``0``   |
+--------------------------------------+----------------------------------------------------------------------------+---------+

方法
----

+---------------------------+---------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`     | :ref:`get_height<class_CubeMap_method_get_height>` **(** **)** |const|                                                          |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>` | :ref:`get_side<class_CubeMap_method_get_side>` **(** :ref:`Side<enum_CubeMap_Side>` side **)** |const|                          |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`     | :ref:`get_width<class_CubeMap_method_get_width>` **(** **)** |const|                                                            |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_side<class_CubeMap_method_set_side>` **(** :ref:`Side<enum_CubeMap_Side>` side, :ref:`Image<class_Image>` image **)** |
+---------------------------+---------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_CubeMap_Storage:

.. _class_CubeMap_constant_STORAGE_RAW:

.. _class_CubeMap_constant_STORAGE_COMPRESS_LOSSY:

.. _class_CubeMap_constant_STORAGE_COMPRESS_LOSSLESS:

enum **Storage**:

- **STORAGE_RAW** = **0** --- 存储\ ``CubeMap``\ 而不进行任何压缩。

- **STORAGE_COMPRESS_LOSSY** = **1** --- 以降低图像质量的强压缩方式存储 ``CubeMap``\ 。

- **STORAGE_COMPRESS_LOSSLESS** = **2** --- 以不降低图像质量的适度压缩方式存储 ``CubeMap``\ 。

----

.. _enum_CubeMap_Side:

.. _class_CubeMap_constant_SIDE_LEFT:

.. _class_CubeMap_constant_SIDE_RIGHT:

.. _class_CubeMap_constant_SIDE_BOTTOM:

.. _class_CubeMap_constant_SIDE_TOP:

.. _class_CubeMap_constant_SIDE_FRONT:

.. _class_CubeMap_constant_SIDE_BACK:

enum **Side**:

- **SIDE_LEFT** = **0** --- ``CubeMap`` 左面的标识符。

- **SIDE_RIGHT** = **1** --- ``CubeMap`` 右面的标识符。

- **SIDE_BOTTOM** = **2** --- ``CubeMap`` 底面的标识符。

- **SIDE_TOP** = **3** --- ``CubeMap`` 顶面的标识符。

- **SIDE_FRONT** = **4** --- ``CubeMap`` 正面的标识符。

- **SIDE_BACK** = **5** --- ``CubeMap`` 背面的标识符。

----

.. _enum_CubeMap_Flags:

.. _class_CubeMap_constant_FLAG_MIPMAPS:

.. _class_CubeMap_constant_FLAG_REPEAT:

.. _class_CubeMap_constant_FLAG_FILTER:

.. _class_CubeMap_constant_FLAGS_DEFAULT:

enum **Flags**:

- **FLAG_MIPMAPS** = **1** --- 生成 mipmap 多级渐远纹理，以实现纹理的平滑缩放。

- **FLAG_REPEAT** = **2** --- 重复（而不是限制到边缘）。

- **FLAG_FILTER** = **4** --- 打开放大滤镜，使纹理平滑放大。

- **FLAGS_DEFAULT** = **7** --- 默认标志。启用生成 mipmap、重复和滤镜。

属性说明
--------

.. _class_CubeMap_property_flags:

- :ref:`int<class_int>` **flags**

+-----------+------------------+
| *Default* | ``7``            |
+-----------+------------------+
| *Setter*  | set_flags(value) |
+-----------+------------------+
| *Getter*  | get_flags()      |
+-----------+------------------+

``CubeMap`` 的渲染标志。有关详细信息，请参阅 :ref:`Flags<enum_CubeMap_Flags>` 常量。

----

.. _class_CubeMap_property_lossy_storage_quality:

- :ref:`float<class_float>` **lossy_storage_quality**

+-----------+----------------------------------+
| *Default* | ``0.7``                          |
+-----------+----------------------------------+
| *Setter*  | set_lossy_storage_quality(value) |
+-----------+----------------------------------+
| *Getter*  | get_lossy_storage_quality()      |
+-----------+----------------------------------+

如果存储模式设置为 :ref:`STORAGE_COMPRESS_LOSSY<class_CubeMap_constant_STORAGE_COMPRESS_LOSSY>`\ ，则 ``CubeMap`` 为有损存储质量。

----

.. _class_CubeMap_property_storage_mode:

- :ref:`Storage<enum_CubeMap_Storage>` **storage_mode**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_storage(value) |
+-----------+--------------------+
| *Getter*  | get_storage()      |
+-----------+--------------------+

``CubeMap`` 的存储模式。参阅 :ref:`Storage<enum_CubeMap_Storage>` 常量。

方法说明
--------

.. _class_CubeMap_method_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** |const|

返回\ ``CubeMap``\ 的高度。

----

.. _class_CubeMap_method_get_side:

- :ref:`Image<class_Image>` **get_side** **(** :ref:`Side<enum_CubeMap_Side>` side **)** |const|

使用 :ref:`Side<enum_CubeMap_Side>` 边常数之一返回 ``CubeMap`` 的一个侧面图像 :ref:`Image<class_Image>`\ 。

----

.. _class_CubeMap_method_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** |const|

返回\ ``CubeMap``\ 的宽度。

----

.. _class_CubeMap_method_set_side:

- void **set_side** **(** :ref:`Side<enum_CubeMap_Side>` side, :ref:`Image<class_Image>` image **)**

为 ``CubeMap`` 的一个边设置图像 :ref:`Image<class_Image>`\ ，使用枚举边 :ref:`Side<enum_CubeMap_Side>`\ 常数之一。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
