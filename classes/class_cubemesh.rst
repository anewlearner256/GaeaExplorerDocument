:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the CubeMesh.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CubeMesh:

CubeMesh
========

**Inherits:** :ref:`PrimitiveMesh<class_PrimitiveMesh>` **<** :ref:`Mesh<class_Mesh>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

生成轴对齐的立方体 :ref:`PrimitiveMesh<class_PrimitiveMesh>`\ 。

描述
----

生成轴对齐的立方体 :ref:`PrimitiveMesh<class_PrimitiveMesh>`\ 。

这个立方体的UV布局是以3×2的方式排列的，可以对每个面单独进行纹理处理。要在所有的面上应用相同的纹理，将材质的UV属性改为 ``Vector3(3, 2, 1)``\ 。

\ **注意：**\ 当使用一个大的纹理 ``CubeMesh``\ 时（例如作为地板），你可能会遇到UV抖动的问题，这取决于相机的角度。为了解决这个问题，增加细分深度 :ref:`subdivide_depth<class_CubeMesh_property_subdivide_depth>`\ 、\ :ref:`subdivide_height<class_CubeMesh_property_subdivide_height>` 细分高度和细分宽带 :ref:`subdivide_width<class_CubeMesh_property_subdivide_width>`\ ，直到你不再注意到UV抖动。

属性
----

+-------------------------------+-------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`size<class_CubeMesh_property_size>`                         | ``Vector3( 2, 2, 2 )`` |
+-------------------------------+-------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`         | :ref:`subdivide_depth<class_CubeMesh_property_subdivide_depth>`   | ``0``                  |
+-------------------------------+-------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`         | :ref:`subdivide_height<class_CubeMesh_property_subdivide_height>` | ``0``                  |
+-------------------------------+-------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`         | :ref:`subdivide_width<class_CubeMesh_property_subdivide_width>`   | ``0``                  |
+-------------------------------+-------------------------------------------------------------------+------------------------+

属性说明
--------

.. _class_CubeMesh_property_size:

- :ref:`Vector3<class_Vector3>` **size**

+-----------+------------------------+
| *Default* | ``Vector3( 2, 2, 2 )`` |
+-----------+------------------------+
| *Setter*  | set_size(value)        |
+-----------+------------------------+
| *Getter*  | get_size()             |
+-----------+------------------------+

长方体网格的大小。

----

.. _class_CubeMesh_property_subdivide_depth:

- :ref:`int<class_int>` **subdivide_depth**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_subdivide_depth(value) |
+-----------+----------------------------+
| *Getter*  | get_subdivide_depth()      |
+-----------+----------------------------+

沿 Z 轴插入的额外边缘环的数量。

----

.. _class_CubeMesh_property_subdivide_height:

- :ref:`int<class_int>` **subdivide_height**

+-----------+-----------------------------+
| *Default* | ``0``                       |
+-----------+-----------------------------+
| *Setter*  | set_subdivide_height(value) |
+-----------+-----------------------------+
| *Getter*  | get_subdivide_height()      |
+-----------+-----------------------------+

沿 Y 轴插入的额外边缘环的数量。

----

.. _class_CubeMesh_property_subdivide_width:

- :ref:`int<class_int>` **subdivide_width**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_subdivide_width(value) |
+-----------+----------------------------+
| *Getter*  | get_subdivide_width()      |
+-----------+----------------------------+

沿 X 轴插入的额外边缘环的数量。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
