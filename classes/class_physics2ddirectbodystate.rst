:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Physics2DDirectBodyState.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Physics2DDirectBodyState:

Physics2DDirectBodyState
========================

**Inherits:** :ref:`Object<class_Object>`

直接访问 :ref:`Physics2DServer<class_Physics2DServer>` 中物理物体对象。

描述
----

提供对 :ref:`Physics2DServer<class_Physics2DServer>` 中物理物体的直接访问，允许安全更改物理属性。该对象通过刚体/角色物体的直接状态回调传递，从而直接改变该物体的状态。参见 :ref:`RigidBody2D._integrate_forces<class_RigidBody2D_method__integrate_forces>`\ 。

教程
----

- :doc:`Physics introduction <../tutorials/physics/physics_introduction>`

- :doc:`Ray-casting <../tutorials/physics/ray-casting>`

属性
----

+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`angular_velocity<class_Physics2DDirectBodyState_property_angular_velocity>`     |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`inverse_inertia<class_Physics2DDirectBodyState_property_inverse_inertia>`       |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`inverse_mass<class_Physics2DDirectBodyState_property_inverse_mass>`             |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`linear_velocity<class_Physics2DDirectBodyState_property_linear_velocity>`       |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`sleeping<class_Physics2DDirectBodyState_property_sleeping>`                     |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`step<class_Physics2DDirectBodyState_property_step>`                             |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`total_angular_damp<class_Physics2DDirectBodyState_property_total_angular_damp>` |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`total_gravity<class_Physics2DDirectBodyState_property_total_gravity>`           |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`total_linear_damp<class_Physics2DDirectBodyState_property_total_linear_damp>`   |
+---------------------------------------+---------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`transform<class_Physics2DDirectBodyState_property_transform>`                   |
+---------------------------------------+---------------------------------------------------------------------------------------+

方法
----

+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`add_central_force<class_Physics2DDirectBodyState_method_add_central_force>` **(** :ref:`Vector2<class_Vector2>` force **)**                                                       |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`add_force<class_Physics2DDirectBodyState_method_add_force>` **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` force **)**                                 |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`add_torque<class_Physics2DDirectBodyState_method_add_torque>` **(** :ref:`float<class_float>` torque **)**                                                                        |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`apply_central_impulse<class_Physics2DDirectBodyState_method_apply_central_impulse>` **(** :ref:`Vector2<class_Vector2>` impulse **)**                                             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`apply_impulse<class_Physics2DDirectBodyState_method_apply_impulse>` **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` impulse **)**                       |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`apply_torque_impulse<class_Physics2DDirectBodyState_method_apply_torque_impulse>` **(** :ref:`float<class_float>` impulse **)**                                                   |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`get_contact_collider<class_Physics2DDirectBodyState_method_get_contact_collider>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                           |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_collider_id<class_Physics2DDirectBodyState_method_get_contact_collider_id>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                     |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>`                                       | :ref:`get_contact_collider_object<class_Physics2DDirectBodyState_method_get_contact_collider_object>` **(** :ref:`int<class_int>` contact_idx **)** |const|                             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_collider_position<class_Physics2DDirectBodyState_method_get_contact_collider_position>` **(** :ref:`int<class_int>` contact_idx **)** |const|                         |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_collider_shape<class_Physics2DDirectBodyState_method_get_contact_collider_shape>` **(** :ref:`int<class_int>` contact_idx **)** |const|                               |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                                     | :ref:`get_contact_collider_shape_metadata<class_Physics2DDirectBodyState_method_get_contact_collider_shape_metadata>` **(** :ref:`int<class_int>` contact_idx **)** |const|             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_collider_velocity_at_position<class_Physics2DDirectBodyState_method_get_contact_collider_velocity_at_position>` **(** :ref:`int<class_int>` contact_idx **)** |const| |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_count<class_Physics2DDirectBodyState_method_get_contact_count>` **(** **)** |const|                                                                                   |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_local_normal<class_Physics2DDirectBodyState_method_get_contact_local_normal>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                   |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_contact_local_position<class_Physics2DDirectBodyState_method_get_contact_local_position>` **(** :ref:`int<class_int>` contact_idx **)** |const|                               |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_contact_local_shape<class_Physics2DDirectBodyState_method_get_contact_local_shape>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                     |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Physics2DDirectSpaceState<class_Physics2DDirectSpaceState>` | :ref:`get_space_state<class_Physics2DDirectBodyState_method_get_space_state>` **(** **)**                                                                                               |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`get_velocity_at_local_position<class_Physics2DDirectBodyState_method_get_velocity_at_local_position>` **(** :ref:`Vector2<class_Vector2>` local_position **)** |const|            |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`integrate_forces<class_Physics2DDirectBodyState_method_integrate_forces>` **(** **)**                                                                                             |
+-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Physics2DDirectBodyState_property_angular_velocity:

- :ref:`float<class_float>` **angular_velocity**

+----------+-----------------------------+
| *Setter* | set_angular_velocity(value) |
+----------+-----------------------------+
| *Getter* | get_angular_velocity()      |
+----------+-----------------------------+

物体的旋转速度，单位为\ *弧度*\ 每秒。

----

.. _class_Physics2DDirectBodyState_property_inverse_inertia:

- :ref:`float<class_float>` **inverse_inertia**

+----------+-----------------------+
| *Getter* | get_inverse_inertia() |
+----------+-----------------------+

物体惯性的倒数。

----

.. _class_Physics2DDirectBodyState_property_inverse_mass:

- :ref:`float<class_float>` **inverse_mass**

+----------+--------------------+
| *Getter* | get_inverse_mass() |
+----------+--------------------+

物体质量的倒数。

----

.. _class_Physics2DDirectBodyState_property_linear_velocity:

- :ref:`Vector2<class_Vector2>` **linear_velocity**

+----------+----------------------------+
| *Setter* | set_linear_velocity(value) |
+----------+----------------------------+
| *Getter* | get_linear_velocity()      |
+----------+----------------------------+

物体的线性速度，单位为像素每秒。

----

.. _class_Physics2DDirectBodyState_property_sleeping:

- :ref:`bool<class_bool>` **sleeping**

+----------+------------------------+
| *Setter* | set_sleep_state(value) |
+----------+------------------------+
| *Getter* | is_sleeping()          |
+----------+------------------------+

如果\ ``true``\ ，则该物体当前处于睡眠状态(不活动)。

----

.. _class_Physics2DDirectBodyState_property_step:

- :ref:`float<class_float>` **step**

+----------+------------+
| *Getter* | get_step() |
+----------+------------+

用于模拟的时间步长(delta)。

----

.. _class_Physics2DDirectBodyState_property_total_angular_damp:

- :ref:`float<class_float>` **total_angular_damp**

+----------+--------------------------+
| *Getter* | get_total_angular_damp() |
+----------+--------------------------+

物体停止转动的速度，如果没有任何其他力使它运动。

----

.. _class_Physics2DDirectBodyState_property_total_gravity:

- :ref:`Vector2<class_Vector2>` **total_gravity**

+----------+---------------------+
| *Getter* | get_total_gravity() |
+----------+---------------------+

这个物体上的总重力向量。

----

.. _class_Physics2DDirectBodyState_property_total_linear_damp:

- :ref:`float<class_float>` **total_linear_damp**

+----------+-------------------------+
| *Getter* | get_total_linear_damp() |
+----------+-------------------------+

物体停止运动的速率，如果没有任何其他力使它运动。

----

.. _class_Physics2DDirectBodyState_property_transform:

- :ref:`Transform2D<class_Transform2D>` **transform**

+----------+----------------------+
| *Setter* | set_transform(value) |
+----------+----------------------+
| *Getter* | get_transform()      |
+----------+----------------------+

物体的变换矩阵。

方法说明
--------

.. _class_Physics2DDirectBodyState_method_add_central_force:

- void **add_central_force** **(** :ref:`Vector2<class_Vector2>` force **)**

增加一个恒定的方向力，而不影响旋转。

----

.. _class_Physics2DDirectBodyState_method_add_force:

- void **add_force** **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` force **)**

向实体添加有作用点的力。力和相对于主体原点的偏移都在全局坐标中。

----

.. _class_Physics2DDirectBodyState_method_add_torque:

- void **add_torque** **(** :ref:`float<class_float>` torque **)**

添加恒定的旋转力。

----

.. _class_Physics2DDirectBodyState_method_apply_central_impulse:

- void **apply_central_impulse** **(** :ref:`Vector2<class_Vector2>` impulse **)**

在不影响旋转的情况下施加一个方向性的冲量。

----

.. _class_Physics2DDirectBodyState_method_apply_impulse:

- void **apply_impulse** **(** :ref:`Vector2<class_Vector2>` offset, :ref:`Vector2<class_Vector2>` impulse **)**

向物体施加有作用点的冲量。冲量是独立于时间的！每一帧施加一个冲量将导致一个与帧率相关的力。出于这个原因，它应该只用于模拟一次性的影响（否则使用“_force”函数）。偏移量使用了全局坐标系的旋转，但是以物体的原点为中心。

----

.. _class_Physics2DDirectBodyState_method_apply_torque_impulse:

- void **apply_torque_impulse** **(** :ref:`float<class_float>` impulse **)**

对物体施加旋转冲量。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider:

- :ref:`RID<class_RID>` **get_contact_collider** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体的\ :ref:`RID<class_RID>`\ 。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_id:

- :ref:`int<class_int>` **get_contact_collider_id** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体的对象id。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_object:

- :ref:`Object<class_Object>` **get_contact_collider_object** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体对象。这取决于它是如何创建的（如果是被作为场景节点创建的，那么将返回场景节点）。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_position:

- :ref:`Vector2<class_Vector2>` **get_contact_collider_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体中的接触位置。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_shape:

- :ref:`int<class_int>` **get_contact_collider_shape** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体的形状索引。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_shape_metadata:

- :ref:`Variant<class_Variant>` **get_contact_collider_shape_metadata** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞形状的元数据。这个元数据不同于\ :ref:`Object.get_meta<class_Object_method_get_meta>`\ ，是用\ :ref:`Physics2DServer.shape_set_data<class_Physics2DServer_method_shape_set_data>`\ 设置的。

----

.. _class_Physics2DDirectBodyState_method_get_contact_collider_velocity_at_position:

- :ref:`Vector2<class_Vector2>` **get_contact_collider_velocity_at_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体接触点处的线速度向量。

----

.. _class_Physics2DDirectBodyState_method_get_contact_count:

- :ref:`int<class_int>` **get_contact_count** **(** **)** |const|

返回此物体与其他物体的接触次数。

\ **注意：**\ 默认情况下，除非物体被设为监视接触者，否则返回0。参阅 :ref:`RigidBody2D.contact_monitor<class_RigidBody2D_property_contact_monitor>`\ 。

----

.. _class_Physics2DDirectBodyState_method_get_contact_local_normal:

- :ref:`Vector2<class_Vector2>` **get_contact_local_normal** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回接触点处的局部法线。

----

.. _class_Physics2DDirectBodyState_method_get_contact_local_position:

- :ref:`Vector2<class_Vector2>` **get_contact_local_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回接触点的局部坐标系下的位置。

----

.. _class_Physics2DDirectBodyState_method_get_contact_local_shape:

- :ref:`int<class_int>` **get_contact_local_shape** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞的局部坐标系下的形状索引。

----

.. _class_Physics2DDirectBodyState_method_get_space_state:

- :ref:`Physics2DDirectSpaceState<class_Physics2DDirectSpaceState>` **get_space_state** **(** **)**

返回空间的当前状态，这对查询很有用。

----

.. _class_Physics2DDirectBodyState_method_get_velocity_at_local_position:

- :ref:`Vector2<class_Vector2>` **get_velocity_at_local_position** **(** :ref:`Vector2<class_Vector2>` local_position **)** |const|

返回给定相对位置的物体速度，包括平移和旋转。

----

.. _class_Physics2DDirectBodyState_method_integrate_forces:

- void **integrate_forces** **(** **)**

调用内置的力集成代码。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
