:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the CSGPolygon.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CSGPolygon:

CSGPolygon
==========

**Inherits:** :ref:`CSGPrimitive<class_CSGPrimitive>` **<** :ref:`CSGShape<class_CSGShape>` **<** :ref:`GeometryInstance<class_GeometryInstance>` **<** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

拉伸2D多边形形状以创建3D网格。

描述
----

挤出一组 2D 点以快速创建各种 3D 网格。

属性
----

+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`float<class_float>`                                 | :ref:`depth<class_CSGPolygon_property_depth>`                             | ``1.0``                                        |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`Material<class_Material>`                           | :ref:`material<class_CSGPolygon_property_material>`                       |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`Mode<enum_CSGPolygon_Mode>`                         | :ref:`mode<class_CSGPolygon_property_mode>`                               | ``0``                                          |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`bool<class_bool>`                                   | :ref:`path_continuous_u<class_CSGPolygon_property_path_continuous_u>`     |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`float<class_float>`                                 | :ref:`path_interval<class_CSGPolygon_property_path_interval>`             |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`PathIntervalType<enum_CSGPolygon_PathIntervalType>` | :ref:`path_interval_type<class_CSGPolygon_property_path_interval_type>`   |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`bool<class_bool>`                                   | :ref:`path_joined<class_CSGPolygon_property_path_joined>`                 |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`bool<class_bool>`                                   | :ref:`path_local<class_CSGPolygon_property_path_local>`                   |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`NodePath<class_NodePath>`                           | :ref:`path_node<class_CSGPolygon_property_path_node>`                     |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`PathRotation<enum_CSGPolygon_PathRotation>`         | :ref:`path_rotation<class_CSGPolygon_property_path_rotation>`             |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`float<class_float>`                                 | :ref:`path_simplify_angle<class_CSGPolygon_property_path_simplify_angle>` |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`float<class_float>`                                 | :ref:`path_u_distance<class_CSGPolygon_property_path_u_distance>`         |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>`           | :ref:`polygon<class_CSGPolygon_property_polygon>`                         | ``PoolVector2Array( 0, 0, 0, 1, 1, 1, 1, 0 )`` |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`bool<class_bool>`                                   | :ref:`smooth_faces<class_CSGPolygon_property_smooth_faces>`               | ``false``                                      |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`float<class_float>`                                 | :ref:`spin_degrees<class_CSGPolygon_property_spin_degrees>`               |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+
| :ref:`int<class_int>`                                     | :ref:`spin_sides<class_CSGPolygon_property_spin_sides>`                   |                                                |
+-----------------------------------------------------------+---------------------------------------------------------------------------+------------------------------------------------+

枚举
----

.. _enum_CSGPolygon_Mode:

.. _class_CSGPolygon_constant_MODE_DEPTH:

.. _class_CSGPolygon_constant_MODE_SPIN:

.. _class_CSGPolygon_constant_MODE_PATH:

enum **Mode**:

- **MODE_DEPTH** = **0** --- :ref:`polygon<class_CSGPolygon_property_polygon>` 形状沿负 Z 轴挤出。

- **MODE_SPIN** = **1** --- :ref:`polygon<class_CSGPolygon_property_polygon>`\ 形状通过围绕Y轴旋转来挤出。

- **MODE_PATH** = **2** --- :ref:`polygon<class_CSGPolygon_property_polygon>` 形状沿 :ref:`path_node<class_CSGPolygon_property_path_node>` 中指定的 :ref:`Path<class_Path>` 挤出。

----

.. _enum_CSGPolygon_PathRotation:

.. _class_CSGPolygon_constant_PATH_ROTATION_POLYGON:

.. _class_CSGPolygon_constant_PATH_ROTATION_PATH:

.. _class_CSGPolygon_constant_PATH_ROTATION_PATH_FOLLOW:

enum **PathRotation**:

- **PATH_ROTATION_POLYGON** = **0** --- :ref:`polygon<class_CSGPolygon_property_polygon>` 多边形的形状不会被旋转。

\ **注意：**\ 要求路径的Z坐标不断减少，以确保可行的形状。

- **PATH_ROTATION_PATH** = **1** --- :ref:`polygon<class_CSGPolygon_property_polygon>` 多边形的形状沿路径旋转，但不绕路径轴旋转。

\ **注意：** 需要路径的 Z 坐标不断减小以确保可行的形状。

- **PATH_ROTATION_PATH_FOLLOW** = **2** --- :ref:`polygon<class_CSGPolygon_property_polygon>` 多边形的形状跟随路径及其围绕路径轴的旋转。

----

.. _enum_CSGPolygon_PathIntervalType:

.. _class_CSGPolygon_constant_PATH_INTERVAL_DISTANCE:

.. _class_CSGPolygon_constant_PATH_INTERVAL_SUBDIVIDE:

enum **PathIntervalType**:

- **PATH_INTERVAL_DISTANCE** = **0** --- 当 :ref:`mode<class_CSGPolygon_property_mode>` 被设置为路径\ :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>` 时，\ :ref:`path_interval<class_CSGPolygon_property_path_interval>` 将决定路径的每个间隔将被挤出的距离，单位为米。

- **PATH_INTERVAL_SUBDIVIDE** = **1** --- 当 :ref:`mode<class_CSGPolygon_property_mode>` 被设置为路径 :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>`\ 时，\ :ref:`path_interval<class_CSGPolygon_property_path_interval>` 将沿着路径细分多边形。

属性说明
--------

.. _class_CSGPolygon_property_depth:

- :ref:`float<class_float>` **depth**

+-----------+------------------+
| *Default* | ``1.0``          |
+-----------+------------------+
| *Setter*  | set_depth(value) |
+-----------+------------------+
| *Getter*  | get_depth()      |
+-----------+------------------+

当\ :ref:`mode<class_CSGPolygon_property_mode>`\ 为\ :ref:`MODE_DEPTH<class_CSGPolygon_constant_MODE_DEPTH>`\ 时，挤出的深度。

----

.. _class_CSGPolygon_property_material:

- :ref:`Material<class_Material>` **material**

+----------+---------------------+
| *Setter* | set_material(value) |
+----------+---------------------+
| *Getter* | get_material()      |
+----------+---------------------+

用于生成的网格的材质。UV将材质的上半部分映射到挤出的形状，即U沿挤出物的长度，V围绕 :ref:`polygon<class_CSGPolygon_property_polygon>`\ 的轮廓，左下角的四分之一映射到前端面，右下角的四分之一映射到后端面。

----

.. _class_CSGPolygon_property_mode:

- :ref:`Mode<enum_CSGPolygon_Mode>` **mode**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_mode(value) |
+-----------+-----------------+
| *Getter*  | get_mode()      |
+-----------+-----------------+

用于挤出 :ref:`polygon<class_CSGPolygon_property_polygon>` 的 :ref:`mode<class_CSGPolygon_property_mode>` 。

----

.. _class_CSGPolygon_property_path_continuous_u:

- :ref:`bool<class_bool>` **path_continuous_u**

+----------+------------------------------+
| *Setter* | set_path_continuous_u(value) |
+----------+------------------------------+
| *Getter* | is_path_continuous_u()       |
+----------+------------------------------+

当 :ref:`mode<class_CSGPolygon_property_mode>` 为\ :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>`\ 时，默认情况下， :ref:`material<class_CSGPolygon_property_material>`\ 的上半部分会沿着挤出形状的整个长度被拉伸。如果\ ``false``\ ，挤出的每一步都会重复材质的上半部分。

----

.. _class_CSGPolygon_property_path_interval:

- :ref:`float<class_float>` **path_interval**

+----------+--------------------------+
| *Setter* | set_path_interval(value) |
+----------+--------------------------+
| *Getter* | get_path_interval()      |
+----------+--------------------------+

当\ :ref:`mode<class_CSGPolygon_property_mode>` 为\ :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>`\ 时，路径间隔或路径点比例挤出。

----

.. _class_CSGPolygon_property_path_interval_type:

- :ref:`PathIntervalType<enum_CSGPolygon_PathIntervalType>` **path_interval_type**

+----------+-------------------------------+
| *Setter* | set_path_interval_type(value) |
+----------+-------------------------------+
| *Getter* | get_path_interval_type()      |
+----------+-------------------------------+

当 :ref:`mode<class_CSGPolygon_property_mode>` 为 :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>` 时，这将确定间隔是按距离（\ :ref:`PATH_INTERVAL_DISTANCE<class_CSGPolygon_constant_PATH_INTERVAL_DISTANCE>`\ ）还是细分分数（\ :ref:`PATH_INTERVAL_SUBDIVIDE<class_CSGPolygon_constant_PATH_INTERVAL_SUBDIVIDE>`\ ）。

----

.. _class_CSGPolygon_property_path_joined:

- :ref:`bool<class_bool>` **path_joined**

+----------+------------------------+
| *Setter* | set_path_joined(value) |
+----------+------------------------+
| *Getter* | is_path_joined()       |
+----------+------------------------+

当 :ref:`mode<class_CSGPolygon_property_mode>` 为 :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>` 时，如果 ``true`` 路径的两端会被连接起来，在路径的最后一个点和第一个点之间添加挤出。

----

.. _class_CSGPolygon_property_path_local:

- :ref:`bool<class_bool>` **path_local**

+----------+-----------------------+
| *Setter* | set_path_local(value) |
+----------+-----------------------+
| *Getter* | is_path_local()       |
+----------+-----------------------+

当\ :ref:`mode<class_CSGPolygon_property_mode>`\ 为\ :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>`\ 时，如果\ ``true``\ ，则使用\ ``CSGPolygon``\ 的\ :ref:`Transform<class_Transform>`\ 作为挤出的起点，而不是\ :ref:`path_node<class_CSGPolygon_property_path_node>`\ 的\ :ref:`Transform<class_Transform>`\ 。

----

.. _class_CSGPolygon_property_path_node:

- :ref:`NodePath<class_NodePath>` **path_node**

+----------+----------------------+
| *Setter* | set_path_node(value) |
+----------+----------------------+
| *Getter* | get_path_node()      |
+----------+----------------------+

:ref:`mode<class_CSGPolygon_property_mode>` 为\ :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>`\ 时，用于挤出 :ref:`polygon<class_CSGPolygon_property_polygon>` 的 :ref:`Path<class_Path>` 对象的坐标。

----

.. _class_CSGPolygon_property_path_rotation:

- :ref:`PathRotation<enum_CSGPolygon_PathRotation>` **path_rotation**

+----------+--------------------------+
| *Setter* | set_path_rotation(value) |
+----------+--------------------------+
| *Getter* | get_path_rotation()      |
+----------+--------------------------+

当 :ref:`mode<class_CSGPolygon_property_mode>` 为 :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>` 时，\ :ref:`PathRotation<enum_CSGPolygon_PathRotation>` 方法用于在挤出时旋转\ :ref:`polygon<class_CSGPolygon_property_polygon>`\ 。

----

.. _class_CSGPolygon_property_path_simplify_angle:

- :ref:`float<class_float>` **path_simplify_angle**

+----------+--------------------------------+
| *Setter* | set_path_simplify_angle(value) |
+----------+--------------------------------+
| *Getter* | get_path_simplify_angle()      |
+----------+--------------------------------+

当 :ref:`mode<class_CSGPolygon_property_mode>` 为 :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>` 时，小于此角度的挤出将合并在一起以减少多边形数量。

----

.. _class_CSGPolygon_property_path_u_distance:

- :ref:`float<class_float>` **path_u_distance**

+----------+----------------------------+
| *Setter* | set_path_u_distance(value) |
+----------+----------------------------+
| *Getter* | get_path_u_distance()      |
+----------+----------------------------+

当\ :ref:`mode<class_CSGPolygon_property_mode>` 为\ :ref:`MODE_PATH<class_CSGPolygon_constant_MODE_PATH>` 时，这是纹理坐标沿着路径的距离，以米为单位，将进行平铺。当设置为0时，纹理坐标将与几何图形完全匹配，没有平铺。

----

.. _class_CSGPolygon_property_polygon:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **polygon**

+-----------+------------------------------------------------+
| *Default* | ``PoolVector2Array( 0, 0, 0, 1, 1, 1, 1, 0 )`` |
+-----------+------------------------------------------------+
| *Setter*  | set_polygon(value)                             |
+-----------+------------------------------------------------+
| *Getter*  | get_polygon()                                  |
+-----------+------------------------------------------------+

定义挤出的二维多边形的点数组。

----

.. _class_CSGPolygon_property_smooth_faces:

- :ref:`bool<class_bool>` **smooth_faces**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_smooth_faces(value) |
+-----------+-------------------------+
| *Getter*  | get_smooth_faces()      |
+-----------+-------------------------+

如果\ ``true``\ ，则对挤出应用平滑着色。

----

.. _class_CSGPolygon_property_spin_degrees:

- :ref:`float<class_float>` **spin_degrees**

+----------+-------------------------+
| *Setter* | set_spin_degrees(value) |
+----------+-------------------------+
| *Getter* | get_spin_degrees()      |
+----------+-------------------------+

当\ :ref:`mode<class_CSGPolygon_property_mode>`\ 为\ :ref:`MODE_SPIN<class_CSGPolygon_constant_MODE_SPIN>`\ ，\ :ref:`polygon<class_CSGPolygon_property_polygon>`\ 在挤出时旋转的总度数。

----

.. _class_CSGPolygon_property_spin_sides:

- :ref:`int<class_int>` **spin_sides**

+----------+-----------------------+
| *Setter* | set_spin_sides(value) |
+----------+-----------------------+
| *Getter* | get_spin_sides()      |
+----------+-----------------------+

:ref:`mode<class_CSGPolygon_property_mode>` 为 :ref:`MODE_SPIN<class_CSGPolygon_constant_MODE_SPIN>` 时，挤出的次数。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
