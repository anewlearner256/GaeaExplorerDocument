:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the VisibilityEnabler.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisibilityEnabler:

VisibilityEnabler
=================

**Inherits:** :ref:`VisibilityNotifier<class_VisibilityNotifier>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

只在大约可见时启用某些节点。

描述
----

当 :ref:`RigidBody<class_RigidBody>` 和 :ref:`AnimationPlayer<class_AnimationPlayer>` 节点不可见时，VisibilityEnabler 将禁用它们。它只会影响与 VisibilityEnabler 本身相同场景中的其他节点。

如果你只是想接收通知，请使用 :ref:`VisibilityNotifier<class_VisibilityNotifier>` 代替。

\ **注意：**\ VisibilityEnabler 由于性能原因使用了一个近似的启发式方法。它不会考虑墙和其他遮挡物（除非你使用了 :ref:`Portal<class_Portal>`\ ）。启发式这一实现细节，在未来的版本中可能会改变。如果你需要精确的可见性检查，请使用另一种方法，例如添加一个 :ref:`Area<class_Area>` 节点作为 :ref:`Camera<class_Camera>` 节点的子节点和/或 :ref:`Vector3.dot<class_Vector3_method_dot>`\ 。

\ **注意：**\ VisibilityEnabler 不会影响场景初始化后添加的节点。

属性
----

+-------------------------+----------------------------------------------------------------------------+----------+
| :ref:`bool<class_bool>` | :ref:`freeze_bodies<class_VisibilityEnabler_property_freeze_bodies>`       | ``true`` |
+-------------------------+----------------------------------------------------------------------------+----------+
| :ref:`bool<class_bool>` | :ref:`pause_animations<class_VisibilityEnabler_property_pause_animations>` | ``true`` |
+-------------------------+----------------------------------------------------------------------------+----------+

方法
----

+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_enabler_enabled<class_VisibilityEnabler_method_is_enabler_enabled>` **(** :ref:`Enabler<enum_VisibilityEnabler_Enabler>` enabler **)** |const|            |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_enabler<class_VisibilityEnabler_method_set_enabler>` **(** :ref:`Enabler<enum_VisibilityEnabler_Enabler>` enabler, :ref:`bool<class_bool>` enabled **)** |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_VisibilityEnabler_Enabler:

.. _class_VisibilityEnabler_constant_ENABLER_PAUSE_ANIMATIONS:

.. _class_VisibilityEnabler_constant_ENABLER_FREEZE_BODIES:

.. _class_VisibilityEnabler_constant_ENABLER_MAX:

enum **Enabler**:

- **ENABLER_PAUSE_ANIMATIONS** = **0** --- 这个启用程序将暂停\ :ref:`AnimationPlayer<class_AnimationPlayer>`\ 节点。

- **ENABLER_FREEZE_BODIES** = **1** --- 这个启用程序将冻结\ :ref:`RigidBody<class_RigidBody>`\ 节点。

- **ENABLER_MAX** = **2** --- 表示\ :ref:`Enabler<enum_VisibilityEnabler_Enabler>`\ 枚举的大小。

属性说明
--------

.. _class_VisibilityEnabler_property_freeze_bodies:

- :ref:`bool<class_bool>` **freeze_bodies**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

如果\ ``true``\ ，\ :ref:`RigidBody<class_RigidBody>`\ 节点将被暂停。

----

.. _class_VisibilityEnabler_property_pause_animations:

- :ref:`bool<class_bool>` **pause_animations**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_enabler(value)   |
+-----------+----------------------+
| *Getter*  | is_enabler_enabled() |
+-----------+----------------------+

如果\ ``true``\ ，\ :ref:`AnimationPlayer<class_AnimationPlayer>`\ 节点将被暂停。

方法说明
--------

.. _class_VisibilityEnabler_method_is_enabler_enabled:

- :ref:`bool<class_bool>` **is_enabler_enabled** **(** :ref:`Enabler<enum_VisibilityEnabler_Enabler>` enabler **)** |const|

返回由给定的 :ref:`Enabler<enum_VisibilityEnabler_Enabler>` 常量标识的启用程序是否处于活动状态。

----

.. _class_VisibilityEnabler_method_set_enabler:

- void **set_enabler** **(** :ref:`Enabler<enum_VisibilityEnabler_Enabler>` enabler, :ref:`bool<class_bool>` enabled **)**

设置由给定的\ :ref:`Enabler<enum_VisibilityEnabler_Enabler>`\ 常量识别的启用程序的活动状态。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
