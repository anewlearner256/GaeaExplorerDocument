:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Light2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Light2D:

Light2D
=======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

在2D环境中投射光线。

描述
----

在2D环境中投射光线。光线由一张纹理（通常是灰度）、一种颜色、一个能量值、一种模式（参阅常数）以及其他各种参数（与范围和阴影有关）来定义。

\ **注意：** Light2D也可以作为一个遮罩使用。

教程
----

- :doc:`../tutorials/2d/2d_lights_and_shadows`

属性
----

+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                      | :ref:`color<class_Light2D_property_color>`                                   | ``Color( 1, 1, 1, 1 )`` |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                        | :ref:`editor_only<class_Light2D_property_editor_only>`                       | ``false``               |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                        | :ref:`enabled<class_Light2D_property_enabled>`                               | ``true``                |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                      | :ref:`energy<class_Light2D_property_energy>`                                 | ``1.0``                 |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Mode<enum_Light2D_Mode>`                 | :ref:`mode<class_Light2D_property_mode>`                                     | ``0``                   |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                  | :ref:`offset<class_Light2D_property_offset>`                                 | ``Vector2( 0, 0 )``     |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                      | :ref:`range_height<class_Light2D_property_range_height>`                     | ``0.0``                 |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`range_item_cull_mask<class_Light2D_property_range_item_cull_mask>`     | ``1``                   |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`range_layer_max<class_Light2D_property_range_layer_max>`               | ``0``                   |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`range_layer_min<class_Light2D_property_range_layer_min>`               | ``0``                   |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`range_z_max<class_Light2D_property_range_z_max>`                       | ``1024``                |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`range_z_min<class_Light2D_property_range_z_min>`                       | ``-1024``               |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`shadow_buffer_size<class_Light2D_property_shadow_buffer_size>`         | ``2048``                |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                      | :ref:`shadow_color<class_Light2D_property_shadow_color>`                     | ``Color( 0, 0, 0, 0 )`` |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                        | :ref:`shadow_enabled<class_Light2D_property_shadow_enabled>`                 | ``false``               |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`ShadowFilter<enum_Light2D_ShadowFilter>` | :ref:`shadow_filter<class_Light2D_property_shadow_filter>`                   | ``0``                   |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                      | :ref:`shadow_filter_smooth<class_Light2D_property_shadow_filter_smooth>`     | ``0.0``                 |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                      | :ref:`shadow_gradient_length<class_Light2D_property_shadow_gradient_length>` | ``0.0``                 |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                          | :ref:`shadow_item_cull_mask<class_Light2D_property_shadow_item_cull_mask>`   | ``1``                   |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                  | :ref:`texture<class_Light2D_property_texture>`                               |                         |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                      | :ref:`texture_scale<class_Light2D_property_texture_scale>`                   | ``1.0``                 |
+------------------------------------------------+------------------------------------------------------------------------------+-------------------------+

枚举
----

.. _enum_Light2D_Mode:

.. _class_Light2D_constant_MODE_ADD:

.. _class_Light2D_constant_MODE_SUB:

.. _class_Light2D_constant_MODE_MIX:

.. _class_Light2D_constant_MODE_MASK:

enum **Mode**:

- **MODE_ADD** = **0** --- 将 Light2D 对应的像素值与其下方的像素值相加。这是灯的常见行为。

- **MODE_SUB** = **1** --- 将Light2D对应的像素值减去其下方的像素值，产生反光效果。

- **MODE_MIX** = **2** --- 通过线性插值将Light2D对应的像素值与其下方的像素值混合。

- **MODE_MASK** = **3** --- Light2D的光线纹理被用作遮罩，根据光线遮罩纹理的每个像素的值，隐藏或显示屏幕下方的部分。

----

.. _enum_Light2D_ShadowFilter:

.. _class_Light2D_constant_SHADOW_FILTER_NONE:

.. _class_Light2D_constant_SHADOW_FILTER_PCF3:

.. _class_Light2D_constant_SHADOW_FILTER_PCF5:

.. _class_Light2D_constant_SHADOW_FILTER_PCF7:

.. _class_Light2D_constant_SHADOW_FILTER_PCF9:

.. _class_Light2D_constant_SHADOW_FILTER_PCF13:

enum **ShadowFilter**:

- **SHADOW_FILTER_NONE** = **0** --- 没有过滤器适用于阴影贴图。参阅\ :ref:`shadow_filter<class_Light2D_property_shadow_filter>`\ 。

- **SHADOW_FILTER_PCF3** = **1** --- 百分比接近过滤（3个样本）适用于阴影贴图。参阅\ :ref:`shadow_filter<class_Light2D_property_shadow_filter>`\ 。

- **SHADOW_FILTER_PCF5** = **2** --- 百分比接近过滤（5个样本）适用于阴影贴图。参阅\ :ref:`shadow_filter<class_Light2D_property_shadow_filter>`\ 。

- **SHADOW_FILTER_PCF7** = **3** --- 百分比接近过滤（7个样本）适用于阴影贴图。参阅\ :ref:`shadow_filter<class_Light2D_property_shadow_filter>`\ 。

- **SHADOW_FILTER_PCF9** = **4** --- 百分比接近过滤（9个样本）适用于阴影贴图。参阅\ :ref:`shadow_filter<class_Light2D_property_shadow_filter>`\ 。

- **SHADOW_FILTER_PCF13** = **5** --- 百分比接近过滤（13个样本）适用于阴影贴图。参阅\ :ref:`shadow_filter<class_Light2D_property_shadow_filter>`\ 。

属性说明
--------

.. _class_Light2D_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_color(value)        |
+-----------+-------------------------+
| *Getter*  | get_color()             |
+-----------+-------------------------+

Light2D光的颜色 :ref:`Color<class_Color>`\ 。

----

.. _class_Light2D_property_editor_only:

- :ref:`bool<class_bool>` **editor_only**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_editor_only(value) |
+-----------+------------------------+
| *Getter*  | is_editor_only()       |
+-----------+------------------------+

如果\ ``true``\ ，Light2D将只在编辑场景时出现。

----

.. _class_Light2D_property_enabled:

- :ref:`bool<class_bool>` **enabled**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_enabled(value) |
+-----------+--------------------+
| *Getter*  | is_enabled()       |
+-----------+--------------------+

如果 ``true``\ ，Light2D 会发光。

----

.. _class_Light2D_property_energy:

- :ref:`float<class_float>` **energy**

+-----------+-------------------+
| *Default* | ``1.0``           |
+-----------+-------------------+
| *Setter*  | set_energy(value) |
+-----------+-------------------+
| *Getter*  | get_energy()      |
+-----------+-------------------+

Light2D的能量值。该值越大，光线就越强。

----

.. _class_Light2D_property_mode:

- :ref:`Mode<enum_Light2D_Mode>` **mode**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_mode(value) |
+-----------+-----------------+
| *Getter*  | get_mode()      |
+-----------+-----------------+

Light2D的模式。参阅\ :ref:`Mode<enum_Light2D_Mode>`\ 常数的值。

----

.. _class_Light2D_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------------+
| *Default* | ``Vector2( 0, 0 )``       |
+-----------+---------------------------+
| *Setter*  | set_texture_offset(value) |
+-----------+---------------------------+
| *Getter*  | get_texture_offset()      |
+-----------+---------------------------+

Light2D 的 ``texture`` 的偏移量。

----

.. _class_Light2D_property_range_height:

- :ref:`float<class_float>` **range_height**

+-----------+-------------------+
| *Default* | ``0.0``           |
+-----------+-------------------+
| *Setter*  | set_height(value) |
+-----------+-------------------+
| *Getter*  | get_height()      |
+-----------+-------------------+

Light2D的高度。与2D法线贴图(normal mapping)一起使用。

----

.. _class_Light2D_property_range_item_cull_mask:

- :ref:`int<class_int>` **range_item_cull_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_item_cull_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_item_cull_mask()      |
+-----------+---------------------------+

图层遮罩。只有具有匹配遮罩的对象才会受到Light2D的影响。

----

.. _class_Light2D_property_range_layer_max:

- :ref:`int<class_int>` **range_layer_max**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_layer_range_max(value) |
+-----------+----------------------------+
| *Getter*  | get_layer_range_max()      |
+-----------+----------------------------+

受Light2D影响的对象的最大层数值。

----

.. _class_Light2D_property_range_layer_min:

- :ref:`int<class_int>` **range_layer_min**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_layer_range_min(value) |
+-----------+----------------------------+
| *Getter*  | get_layer_range_min()      |
+-----------+----------------------------+

受 Light2D 影响的对象的最小层数值。

----

.. _class_Light2D_property_range_z_max:

- :ref:`int<class_int>` **range_z_max**

+-----------+------------------------+
| *Default* | ``1024``               |
+-----------+------------------------+
| *Setter*  | set_z_range_max(value) |
+-----------+------------------------+
| *Getter*  | get_z_range_max()      |
+-----------+------------------------+

受Light2D影响的物体的最大\ ``z``\ 值。

----

.. _class_Light2D_property_range_z_min:

- :ref:`int<class_int>` **range_z_min**

+-----------+------------------------+
| *Default* | ``-1024``              |
+-----------+------------------------+
| *Setter*  | set_z_range_min(value) |
+-----------+------------------------+
| *Getter*  | get_z_range_min()      |
+-----------+------------------------+

受Light2D影响的物体的最小\ ``z``\ 值。

----

.. _class_Light2D_property_shadow_buffer_size:

- :ref:`int<class_int>` **shadow_buffer_size**

+-----------+-------------------------------+
| *Default* | ``2048``                      |
+-----------+-------------------------------+
| *Setter*  | set_shadow_buffer_size(value) |
+-----------+-------------------------------+
| *Getter*  | get_shadow_buffer_size()      |
+-----------+-------------------------------+

阴影缓冲区大小。

----

.. _class_Light2D_property_shadow_color:

- :ref:`Color<class_Color>` **shadow_color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 0 )`` |
+-----------+-------------------------+
| *Setter*  | set_shadow_color(value) |
+-----------+-------------------------+
| *Getter*  | get_shadow_color()      |
+-----------+-------------------------+

Light2D投下的影子的颜色\ :ref:`Color<class_Color>`\ 。

----

.. _class_Light2D_property_shadow_enabled:

- :ref:`bool<class_bool>` **shadow_enabled**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_shadow_enabled(value) |
+-----------+---------------------------+
| *Getter*  | is_shadow_enabled()       |
+-----------+---------------------------+

如果\ ``true``\ ，Light2D将投下阴影。

----

.. _class_Light2D_property_shadow_filter:

- :ref:`ShadowFilter<enum_Light2D_ShadowFilter>` **shadow_filter**

+-----------+--------------------------+
| *Default* | ``0``                    |
+-----------+--------------------------+
| *Setter*  | set_shadow_filter(value) |
+-----------+--------------------------+
| *Getter*  | get_shadow_filter()      |
+-----------+--------------------------+

阴影过滤器类型。相关可能的值，参阅\ :ref:`ShadowFilter<enum_Light2D_ShadowFilter>` 阴影过滤器。

----

.. _class_Light2D_property_shadow_filter_smooth:

- :ref:`float<class_float>` **shadow_filter_smooth**

+-----------+--------------------------+
| *Default* | ``0.0``                  |
+-----------+--------------------------+
| *Setter*  | set_shadow_smooth(value) |
+-----------+--------------------------+
| *Getter*  | get_shadow_smooth()      |
+-----------+--------------------------+

阴影的平滑值。

----

.. _class_Light2D_property_shadow_gradient_length:

- :ref:`float<class_float>` **shadow_gradient_length**

+-----------+-----------------------------------+
| *Default* | ``0.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_shadow_gradient_length(value) |
+-----------+-----------------------------------+
| *Getter*  | get_shadow_gradient_length()      |
+-----------+-----------------------------------+

平滑阴影渐变长度。

----

.. _class_Light2D_property_shadow_item_cull_mask:

- :ref:`int<class_int>` **shadow_item_cull_mask**

+-----------+----------------------------------+
| *Default* | ``1``                            |
+-----------+----------------------------------+
| *Setter*  | set_item_shadow_cull_mask(value) |
+-----------+----------------------------------+
| *Getter*  | get_item_shadow_cull_mask()      |
+-----------+----------------------------------+

阴影遮罩。与\ :ref:`LightOccluder2D<class_LightOccluder2D>`\ 一起使用来投射阴影。只有具有匹配的光线遮罩的遮挡物才会投射阴影。

----

.. _class_Light2D_property_texture:

- :ref:`Texture<class_Texture>` **texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用于Light2D外观的\ :ref:`Texture<class_Texture>`\ 。

----

.. _class_Light2D_property_texture_scale:

- :ref:`float<class_float>` **texture_scale**

+-----------+--------------------------+
| *Default* | ``1.0``                  |
+-----------+--------------------------+
| *Setter*  | set_texture_scale(value) |
+-----------+--------------------------+
| *Getter*  | get_texture_scale()      |
+-----------+--------------------------+

``texture`` 的缩放系数。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
