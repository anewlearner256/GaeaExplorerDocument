:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Texture.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Texture:

Texture
=======

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`AnimatedTexture<class_AnimatedTexture>`, :ref:`AtlasTexture<class_AtlasTexture>`, :ref:`CameraTexture<class_CameraTexture>`, :ref:`CurveTexture<class_CurveTexture>`, :ref:`ExternalTexture<class_ExternalTexture>`, :ref:`GradientTexture<class_GradientTexture>`, :ref:`ImageTexture<class_ImageTexture>`, :ref:`LargeTexture<class_LargeTexture>`, :ref:`MeshTexture<class_MeshTexture>`, :ref:`NoiseTexture<class_NoiseTexture>`, :ref:`ProxyTexture<class_ProxyTexture>`, :ref:`StreamTexture<class_StreamTexture>`, :ref:`ViewportTexture<class_ViewportTexture>`

用于 2D 和 3D 的纹理。

描述
----

纹理的原理是在视频硬件中注册图像，然后就可以在 3D 模型、2D 精灵 :ref:`Sprite<class_Sprite>`\ 、GUI 控件 :ref:`Control<class_Control>` 中使用。

纹理通常是通过从文件中加载来创建的。请参阅 :ref:`@GDScript.load<class_@GDScript_method_load>`\ 。

\ ``Texture`` 是一些其他资源的基类，无法直接使用。

\ **注意：**\ 由于图形硬件的限制，最大的纹理尺寸是 16384×16384 像素。较大的纹理可能无法导入。

属性
----

+-----------------------+--------------------------------------------+-------+
| :ref:`int<class_int>` | :ref:`flags<class_Texture_property_flags>` | ``4`` |
+-----------------------+--------------------------------------------+-------+

方法
----

+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`draw<class_Texture_method_draw>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Vector2<class_Vector2>` position, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null **)** |const|                                                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`draw_rect<class_Texture_method_draw_rect>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Rect2<class_Rect2>` rect, :ref:`bool<class_bool>` tile, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null **)** |const|                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`draw_rect_region<class_Texture_method_draw_rect_region>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Rect2<class_Rect2>` rect, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` clip_uv=true **)** |const| |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>`     | :ref:`get_data<class_Texture_method_get_data>` **(** **)** |const|                                                                                                                                                                                                                                                                                                             |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_height<class_Texture_method_get_height>` **(** **)** |const|                                                                                                                                                                                                                                                                                                         |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_size<class_Texture_method_get_size>` **(** **)** |const|                                                                                                                                                                                                                                                                                                             |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_width<class_Texture_method_get_width>` **(** **)** |const|                                                                                                                                                                                                                                                                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`has_alpha<class_Texture_method_has_alpha>` **(** **)** |const|                                                                                                                                                                                                                                                                                                           |
+-------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_Texture_Flags:

.. _class_Texture_constant_FLAGS_DEFAULT:

.. _class_Texture_constant_FLAG_MIPMAPS:

.. _class_Texture_constant_FLAG_REPEAT:

.. _class_Texture_constant_FLAG_FILTER:

.. _class_Texture_constant_FLAG_ANISOTROPIC_FILTER:

.. _class_Texture_constant_FLAG_CONVERT_TO_LINEAR:

.. _class_Texture_constant_FLAG_MIRRORED_REPEAT:

.. _class_Texture_constant_FLAG_VIDEO_SURFACE:

enum **Flags**:

- **FLAGS_DEFAULT** = **7** --- 默认的标志。\ :ref:`FLAG_MIPMAPS<class_Texture_constant_FLAG_MIPMAPS>`\ 、\ :ref:`FLAG_REPEAT<class_Texture_constant_FLAG_REPEAT>` 和 :ref:`FLAG_FILTER<class_Texture_constant_FLAG_FILTER>` 均被启用。

- **FLAG_MIPMAPS** = **1** --- 生成多级渐远纹理，它是同一纹理的较小版本，在放大时使用，保持长宽比。

- **FLAG_REPEAT** = **2** --- 重复纹理（而不是限制到边）。

\ **注意：**\ 使用 :ref:`AtlasTexture<class_AtlasTexture>` 时忽略，因为它们不支持重复。

- **FLAG_FILTER** = **4** --- 使用放大过滤器，以实现纹理的平滑放大。

- **FLAG_ANISOTROPIC_FILTER** = **8** --- 使用各向异性的多级渐远纹理过滤。生成具有不同长宽比的同一纹理的较小版本。

当从斜角观看时，这会产生更好看的纹理。

- **FLAG_CONVERT_TO_LINEAR** = **16** --- 将纹理转换为 sRGB 颜色空间。

- **FLAG_MIRRORED_REPEAT** = **32** --- 重复纹理的交替部分，并对其进行镜像。

\ **注意：**\ 在使用 :ref:`AtlasTexture<class_AtlasTexture>` 时被忽略，因为它们不支持重复。

- **FLAG_VIDEO_SURFACE** = **2048** --- 纹理是视频表面。

属性说明
--------

.. _class_Texture_property_flags:

- :ref:`int<class_int>` **flags**

+-----------+------------------+
| *Default* | ``4``            |
+-----------+------------------+
| *Setter*  | set_flags(value) |
+-----------+------------------+
| *Getter*  | get_flags()      |
+-----------+------------------+

纹理的 :ref:`Flags<enum_Texture_Flags>`\ 。\ :ref:`Flags<enum_Texture_Flags>` 用于设置 ``Texture`` 的各种属性。

方法说明
--------

.. _class_Texture_method_draw:

- void **draw** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Vector2<class_Vector2>` position, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null **)** |const|

在指定的位置\ ``position``\ 使用\ :ref:`VisualServer<class_VisualServer>`\ API的\ :ref:`CanvasItem<class_CanvasItem>`\ 来绘制纹理。相当于\ :ref:`VisualServer.canvas_item_add_texture_rect<class_VisualServer_method_canvas_item_add_texture_rect>`\ ，在位置\ ``position``\ 有一个矩形，尺寸为这个\ ``Texture``\ 。

----

.. _class_Texture_method_draw_rect:

- void **draw_rect** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Rect2<class_Rect2>` rect, :ref:`bool<class_bool>` tile, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null **)** |const|

使用 :ref:`VisualServer<class_VisualServer>` API 的 :ref:`CanvasItem<class_CanvasItem>` 来绘制纹理。相当于方法 :ref:`VisualServer.canvas_item_add_texture_rect<class_VisualServer_method_canvas_item_add_texture_rect>`\ 。

----

.. _class_Texture_method_draw_rect_region:

- void **draw_rect_region** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Rect2<class_Rect2>` rect, :ref:`Rect2<class_Rect2>` src_rect, :ref:`Color<class_Color>` modulate=Color( 1, 1, 1, 1 ), :ref:`bool<class_bool>` transpose=false, :ref:`Texture<class_Texture>` normal_map=null, :ref:`bool<class_bool>` clip_uv=true **)** |const|

使用 :ref:`VisualServer<class_VisualServer>` API 的 :ref:`CanvasItem<class_CanvasItem>` 来绘制纹理的一个部分。相当于方法 :ref:`VisualServer.canvas_item_add_texture_rect_region<class_VisualServer_method_canvas_item_add_texture_rect_region>`\ 。

----

.. _class_Texture_method_get_data:

- :ref:`Image<class_Image>` **get_data** **(** **)** |const|

返回一个 :ref:`Image<class_Image>`\ ，它是此 ``Texture`` 中数据的副本。 :ref:`Image<class_Image>` 图像可以直接访问和操作。

----

.. _class_Texture_method_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** |const|

返回纹理高度。

----

.. _class_Texture_method_get_size:

- :ref:`Vector2<class_Vector2>` **get_size** **(** **)** |const|

返回纹理尺寸。

----

.. _class_Texture_method_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** |const|

返回纹理宽度。

----

.. _class_Texture_method_has_alpha:

- :ref:`bool<class_bool>` **has_alpha** **(** **)** |const|

如果这个 ``Texture`` 有 Alpha 通道，则返回 ``true``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
