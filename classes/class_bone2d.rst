:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Bone2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Bone2D:

Bone2D
======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

与 :ref:`Skeleton2D<class_Skeleton2D>` 一起使用的关节，用于控制其他节点并使其具有动画效果。

描述
----

使用绑定到 :ref:`Skeleton2D<class_Skeleton2D>` 的 ``Bone2D`` 的层次结构来控制，并对其他 :ref:`Node2D<class_Node2D>` 节点进行动画。

您可以使用 ``Bone2D`` 和 ``Skeleton2D`` 节点对使用 Polygon 2D UV 编辑器创建的 2D 网格进行动画制作。

每个骨骼都有一个 :ref:`rest<class_Bone2D_property_rest>` 变换，你可以用 :ref:`apply_rest<class_Bone2D_method_apply_rest>` 来重置。这些放松姿势是相对于骨的父节点而言的。

如果在编辑器中，你可以使用菜单选项设置整个骨架的放松姿势，从代码中，你需要遍历骨骼来设置它们各自的放松姿势。

属性
----

+---------------------------------------+-------------------------------------------------------------+-------------------------------------+
| :ref:`float<class_float>`             | :ref:`default_length<class_Bone2D_property_default_length>` | ``16.0``                            |
+---------------------------------------+-------------------------------------------------------------+-------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`rest<class_Bone2D_property_rest>`                     | ``Transform2D( 0, 0, 0, 0, 0, 0 )`` |
+---------------------------------------+-------------------------------------------------------------+-------------------------------------+

方法
----

+---------------------------------------+---------------------------------------------------------------------------------------------+
| void                                  | :ref:`apply_rest<class_Bone2D_method_apply_rest>` **(** **)**                               |
+---------------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                 | :ref:`get_index_in_skeleton<class_Bone2D_method_get_index_in_skeleton>` **(** **)** |const| |
+---------------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_skeleton_rest<class_Bone2D_method_get_skeleton_rest>` **(** **)** |const|         |
+---------------------------------------+---------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Bone2D_property_default_length:

- :ref:`float<class_float>` **default_length**

+-----------+---------------------------+
| *Default* | ``16.0``                  |
+-----------+---------------------------+
| *Setter*  | set_default_length(value) |
+-----------+---------------------------+
| *Getter*  | get_default_length()      |
+-----------+---------------------------+

在编辑器的视窗中绘制的骨骼的长度，单位为像素。

----

.. _class_Bone2D_property_rest:

- :ref:`Transform2D<class_Transform2D>` **rest**

+-----------+-------------------------------------+
| *Default* | ``Transform2D( 0, 0, 0, 0, 0, 0 )`` |
+-----------+-------------------------------------+
| *Setter*  | set_rest(value)                     |
+-----------+-------------------------------------+
| *Getter*  | get_rest()                          |
+-----------+-------------------------------------+

骨骼的静止变换。您可以使用\ :ref:`apply_rest<class_Bone2D_method_apply_rest>`\ 将节点的变换重置为这个值。

方法说明
--------

.. _class_Bone2D_method_apply_rest:

- void **apply_rest** **(** **)**

将节点当前的变换存储在\ :ref:`rest<class_Bone2D_property_rest>`\ 中。

----

.. _class_Bone2D_method_get_index_in_skeleton:

- :ref:`int<class_int>` **get_index_in_skeleton** **(** **)** |const|

返回节点的索引，作为整个骨架的一部分。参阅\ :ref:`Skeleton2D<class_Skeleton2D>`\ 。

----

.. _class_Bone2D_method_get_skeleton_rest:

- :ref:`Transform2D<class_Transform2D>` **get_skeleton_rest** **(** **)** |const|

如果节点没有父节点，返回节点的 :ref:`rest<class_Bone2D_property_rest>` ``Transform2D``\ ，或者返回它相对于父节点的放松姿势。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
