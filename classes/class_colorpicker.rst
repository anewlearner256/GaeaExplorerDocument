:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the ColorPicker.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ColorPicker:

ColorPicker
===========

**Inherits:** :ref:`BoxContainer<class_BoxContainer>` **<** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

选色器控制。

描述
----

显示一个取色器部件。可以从RGB/RGBA彩色空间内选取一个颜色。

\ **注意：**\ 这个控件就是取色器本身。如果你需要一个能够弹出一个\ ``ColorPicker``\ 窗口的按钮，你可以使用一个\ :ref:`ColorPickerButton<class_ColorPickerButton>`\ 来代替它。

教程
----

- `Tween Demo <https://godotengine.org/asset-library/asset/146>`__

属性
----

+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>` | :ref:`color<class_ColorPicker_property_color>`                     | ``Color( 1, 1, 1, 1 )`` |
+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`   | :ref:`deferred_mode<class_ColorPicker_property_deferred_mode>`     | ``false``               |
+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`   | :ref:`edit_alpha<class_ColorPicker_property_edit_alpha>`           | ``true``                |
+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`   | :ref:`hsv_mode<class_ColorPicker_property_hsv_mode>`               | ``false``               |
+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`   | :ref:`presets_enabled<class_ColorPicker_property_presets_enabled>` | ``true``                |
+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`   | :ref:`presets_visible<class_ColorPicker_property_presets_visible>` | ``true``                |
+---------------------------+--------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`   | :ref:`raw_mode<class_ColorPicker_property_raw_mode>`               | ``false``               |
+---------------------------+--------------------------------------------------------------------+-------------------------+

方法
----

+---------------------------------------------+--------------------------------------------------------------------------------------------------------+
| void                                        | :ref:`add_preset<class_ColorPicker_method_add_preset>` **(** :ref:`Color<class_Color>` color **)**     |
+---------------------------------------------+--------------------------------------------------------------------------------------------------------+
| void                                        | :ref:`erase_preset<class_ColorPicker_method_erase_preset>` **(** :ref:`Color<class_Color>` color **)** |
+---------------------------------------------+--------------------------------------------------------------------------------------------------------+
| :ref:`PoolColorArray<class_PoolColorArray>` | :ref:`get_presets<class_ColorPicker_method_get_presets>` **(** **)** |const|                           |
+---------------------------------------------+--------------------------------------------------------------------------------------------------------+

主题属性
--------

+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`int<class_int>`         | :ref:`h_width<class_ColorPicker_theme_constant_h_width>`                       | ``30``  |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`int<class_int>`         | :ref:`label_width<class_ColorPicker_theme_constant_label_width>`               | ``10``  |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`int<class_int>`         | :ref:`margin<class_ColorPicker_theme_constant_margin>`                         | ``4``   |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`int<class_int>`         | :ref:`sv_height<class_ColorPicker_theme_constant_sv_height>`                   | ``256`` |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`int<class_int>`         | :ref:`sv_width<class_ColorPicker_theme_constant_sv_width>`                     | ``256`` |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`Texture<class_Texture>` | :ref:`add_preset<class_ColorPicker_theme_icon_add_preset>`                     |         |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`Texture<class_Texture>` | :ref:`color_hue<class_ColorPicker_theme_icon_color_hue>`                       |         |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`Texture<class_Texture>` | :ref:`color_sample<class_ColorPicker_theme_icon_color_sample>`                 |         |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`Texture<class_Texture>` | :ref:`overbright_indicator<class_ColorPicker_theme_icon_overbright_indicator>` |         |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`Texture<class_Texture>` | :ref:`preset_bg<class_ColorPicker_theme_icon_preset_bg>`                       |         |
+-------------------------------+--------------------------------------------------------------------------------+---------+
| :ref:`Texture<class_Texture>` | :ref:`screen_picker<class_ColorPicker_theme_icon_screen_picker>`               |         |
+-------------------------------+--------------------------------------------------------------------------------+---------+

信号
----

.. _class_ColorPicker_signal_color_changed:

- **color_changed** **(** :ref:`Color<class_Color>` color **)**

更改颜色时发出。

----

.. _class_ColorPicker_signal_preset_added:

- **preset_added** **(** :ref:`Color<class_Color>` color **)**

添加预设时发出。

----

.. _class_ColorPicker_signal_preset_removed:

- **preset_removed** **(** :ref:`Color<class_Color>` color **)**

删除预设时发出。

属性说明
--------

.. _class_ColorPicker_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_pick_color(value)   |
+-----------+-------------------------+
| *Getter*  | get_pick_color()        |
+-----------+-------------------------+

当前选择的颜色。

----

.. _class_ColorPicker_property_deferred_mode:

- :ref:`bool<class_bool>` **deferred_mode**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_deferred_mode(value) |
+-----------+--------------------------+
| *Getter*  | is_deferred_mode()       |
+-----------+--------------------------+

如果\ ``true``\ ，只有在用户松开鼠标按钮后才会应用颜色，否则即使在鼠标移动事件中也会立即应用(会造成性能问题)。

----

.. _class_ColorPicker_property_edit_alpha:

- :ref:`bool<class_bool>` **edit_alpha**

+-----------+-----------------------+
| *Default* | ``true``              |
+-----------+-----------------------+
| *Setter*  | set_edit_alpha(value) |
+-----------+-----------------------+
| *Getter*  | is_editing_alpha()    |
+-----------+-----------------------+

如果\ ``true``\ ，显示alpha通道滑块（透明度）。

----

.. _class_ColorPicker_property_hsv_mode:

- :ref:`bool<class_bool>` **hsv_mode**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_hsv_mode(value) |
+-----------+---------------------+
| *Getter*  | is_hsv_mode()       |
+-----------+---------------------+

如果\ ``true``\ ，则允许使用“色相/饱和度/值”滑块编辑颜色。

\ **注意：**\ 如果启用了原始模式，则无法启用。

----

.. _class_ColorPicker_property_presets_enabled:

- :ref:`bool<class_bool>` **presets_enabled**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_presets_enabled(value) |
+-----------+----------------------------+
| *Getter*  | are_presets_enabled()      |
+-----------+----------------------------+

如果\ ``true``\ ，则启用 "添加预置 "按钮。

----

.. _class_ColorPicker_property_presets_visible:

- :ref:`bool<class_bool>` **presets_visible**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_presets_visible(value) |
+-----------+----------------------------+
| *Getter*  | are_presets_visible()      |
+-----------+----------------------------+

如果\ ``true``\ ，则保存的颜色预设可见。

----

.. _class_ColorPicker_property_raw_mode:

- :ref:`bool<class_bool>` **raw_mode**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_raw_mode(value) |
+-----------+---------------------+
| *Getter*  | is_raw_mode()       |
+-----------+---------------------+

如果\ ``true``\ ，则允许颜色R，G，B分量值超过1.0，该值可用于需要它的某些特殊操作（例如着色而不会使HDR变暗或渲染精灵）。

\ **注意：**\ 如果启用了HSV模式，则无法启用。

方法说明
--------

.. _class_ColorPicker_method_add_preset:

- void **add_preset** **(** :ref:`Color<class_Color>` color **)**

将给定的颜色添加到颜色预设列表中。用户将能够选择颜色选择器中颜色预设。

\ **注意：**\ 预设列表仅适用于\ *这个*\ 颜色选择器。

----

.. _class_ColorPicker_method_erase_preset:

- void **erase_preset** **(** :ref:`Color<class_Color>` color **)**

从这个颜色选择器的颜色预设列表中删除给定的颜色。

----

.. _class_ColorPicker_method_get_presets:

- :ref:`PoolColorArray<class_PoolColorArray>` **get_presets** **(** **)** |const|

返回颜色选择器预设中的颜色列表。

Theme Property Descriptions
---------------------------

.. _class_ColorPicker_theme_constant_h_width:

- :ref:`int<class_int>` **h_width**

+-----------+--------+
| *Default* | ``30`` |
+-----------+--------+

色相选择滑块的宽度。

----

.. _class_ColorPicker_theme_constant_label_width:

- :ref:`int<class_int>` **label_width**

+-----------+--------+
| *Default* | ``10`` |
+-----------+--------+

----

.. _class_ColorPicker_theme_constant_margin:

- :ref:`int<class_int>` **margin**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

``ColorPicker``\ 周围的边距。

----

.. _class_ColorPicker_theme_constant_sv_height:

- :ref:`int<class_int>` **sv_height**

+-----------+---------+
| *Default* | ``256`` |
+-----------+---------+

饱和值选择框的高度。

----

.. _class_ColorPicker_theme_constant_sv_width:

- :ref:`int<class_int>` **sv_width**

+-----------+---------+
| *Default* | ``256`` |
+-----------+---------+

饱和度选择框的宽度。

----

.. _class_ColorPicker_theme_icon_add_preset:

- :ref:`Texture<class_Texture>` **add_preset**

添加预设 "按钮的图标。

----

.. _class_ColorPicker_theme_icon_color_hue:

- :ref:`Texture<class_Texture>` **color_hue**

右侧的色相选择滑块的自定义纹理。

----

.. _class_ColorPicker_theme_icon_color_sample:

- :ref:`Texture<class_Texture>` **color_sample**

----

.. _class_ColorPicker_theme_icon_overbright_indicator:

- :ref:`Texture<class_Texture>` **overbright_indicator**

该指示器用于指示颜色值在0-1范围之外。

----

.. _class_ColorPicker_theme_icon_preset_bg:

- :ref:`Texture<class_Texture>` **preset_bg**

----

.. _class_ColorPicker_theme_icon_screen_picker:

- :ref:`Texture<class_Texture>` **screen_picker**

屏幕颜色选择器按钮的图标。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
