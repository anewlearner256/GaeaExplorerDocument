:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the WebSocketMultiplayerPeer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebSocketMultiplayerPeer:

WebSocketMultiplayerPeer
========================

**Inherits:** :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer>` **<** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`WebSocketClient<class_WebSocketClient>`, :ref:`WebSocketServer<class_WebSocketServer>`

WebSocket服务器和客户端的基类。

描述
----

WebSocket服务器和客户端的基类，允许它们作为\ :ref:`MultiplayerAPI<class_MultiplayerAPI>`\ 的网络对等体使用。

属性
----

+-----------------------------------------------------------------+------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                         | refuse_new_connections | ``false`` (overrides :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer_property_refuse_new_connections>`) |
+-----------------------------------------------------------------+------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`TransferMode<enum_NetworkedMultiplayerPeer_TransferMode>` | transfer_mode          | ``2`` (overrides :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer_property_transfer_mode>`)              |
+-----------------------------------------------------------------+------------------------+-----------------------------------------------------------------------------------------------------------------------+

方法
----

+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`WebSocketPeer<class_WebSocketPeer>` | :ref:`get_peer<class_WebSocketMultiplayerPeer_method_get_peer>` **(** :ref:`int<class_int>` peer_id **)** |const|                                                                                                                                            |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`     | :ref:`set_buffers<class_WebSocketMultiplayerPeer_method_set_buffers>` **(** :ref:`int<class_int>` input_buffer_size_kb, :ref:`int<class_int>` input_max_packets, :ref:`int<class_int>` output_buffer_size_kb, :ref:`int<class_int>` output_max_packets **)** |
+-------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

信号
----

.. _class_WebSocketMultiplayerPeer_signal_peer_packet:

- **peer_packet** **(** :ref:`int<class_int>` peer_source **)**

当收到来自对等体的数据包时触发的信号。

\ **注意：** 这个信号只有在客户端或服务器被配置为使用GaaeExplorer多人游戏API时才会发出。

方法说明
--------

.. _class_WebSocketMultiplayerPeer_method_get_peer:

- :ref:`WebSocketPeer<class_WebSocketPeer>` **get_peer** **(** :ref:`int<class_int>` peer_id **)** |const|

返回与给定\ ``peer_id``\ 关联的\ :ref:`WebSocketPeer<class_WebSocketPeer>`\ 。

----

.. _class_WebSocketMultiplayerPeer_method_set_buffers:

- :ref:`Error<enum_@GlobalScope_Error>` **set_buffers** **(** :ref:`int<class_int>` input_buffer_size_kb, :ref:`int<class_int>` input_max_packets, :ref:`int<class_int>` output_buffer_size_kb, :ref:`int<class_int>` output_max_packets **)**

配置该WebSocket对等体的缓冲区大小。默认值可以在项目设置中的\ ``network/limits``\ 下指定。对于服务器，数值是指每个连接的对等体。

前两个参数定义了输入缓冲区的大小和排队数据包的限制，后两个参数定义了输出缓冲区。

缓冲区的大小以KiB为单位，所以\ ``4=2^12=4096字节``\ 。所有的参数都将被四舍五入到最接近的2的幂。

\ **注意：** HTML5输出只使用输入缓冲区，因为输出缓冲区是由浏览器管理的。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
