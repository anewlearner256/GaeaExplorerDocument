:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the RayCast2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RayCast2D:

RayCast2D
=========

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

查询与射线相交的最近物体。

描述
----

RayCast 表示一条从原点到目标位置 ``cast_to`` 的直线。它被用来查询2D空间，以便沿着射线的路径找到最近的物体。

RayCast2D 可以忽略一些物体，通过 ``add_exception`` 将它们添加到异常列表中，通过设置碰撞层进行适当的过滤，或者通过类型掩码过滤物体类型。

RayCast2D 可以被配置为报告 :ref:`Area2D<class_Area2D>`\ （\ :ref:`collide_with_areas<class_RayCast2D_property_collide_with_areas>`\ ）和 :ref:`PhysicsBody2D<class_PhysicsBody2D>`\ （\ :ref:`collide_with_bodies<class_RayCast2D_property_collide_with_bodies>`\ ）之间或彼此间的碰撞。

只有被激活的 Raycast 才能够查询空间并报告碰撞情况。

RayCast2D 在每一个物理帧中计算交集（见 :ref:`Node<class_Node>`\ ），结果被缓存起来，以便以后可以用到下一帧。如果在物理帧之间需要多次查询（或在同一帧中），请在调整射线广播后使用 :ref:`force_raycast_update<class_RayCast2D_method_force_raycast_update>`\ 。

教程
----

- :doc:`../tutorials/physics/ray-casting`

属性
----

+-------------------------------+--------------------------------------------------------------------------+----------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`cast_to<class_RayCast2D_property_cast_to>`                         | ``Vector2( 0, 50 )`` |
+-------------------------------+--------------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`       | :ref:`collide_with_areas<class_RayCast2D_property_collide_with_areas>`   | ``false``            |
+-------------------------------+--------------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`       | :ref:`collide_with_bodies<class_RayCast2D_property_collide_with_bodies>` | ``true``             |
+-------------------------------+--------------------------------------------------------------------------+----------------------+
| :ref:`int<class_int>`         | :ref:`collision_mask<class_RayCast2D_property_collision_mask>`           | ``1``                |
+-------------------------------+--------------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`       | :ref:`enabled<class_RayCast2D_property_enabled>`                         | ``false``            |
+-------------------------------+--------------------------------------------------------------------------+----------------------+
| :ref:`bool<class_bool>`       | :ref:`exclude_parent<class_RayCast2D_property_exclude_parent>`           | ``true``             |
+-------------------------------+--------------------------------------------------------------------------+----------------------+

方法
----

+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`add_exception<class_RayCast2D_method_add_exception>` **(** :ref:`Object<class_Object>` node **)**                                           |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`add_exception_rid<class_RayCast2D_method_add_exception_rid>` **(** :ref:`RID<class_RID>` rid **)**                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_exceptions<class_RayCast2D_method_clear_exceptions>` **(** **)**                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`force_raycast_update<class_RayCast2D_method_force_raycast_update>` **(** **)**                                                              |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>`   | :ref:`get_collider<class_RayCast2D_method_get_collider>` **(** **)** |const|                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_collider_shape<class_RayCast2D_method_get_collider_shape>` **(** **)** |const|                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_mask_bit<class_RayCast2D_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_collision_normal<class_RayCast2D_method_get_collision_normal>` **(** **)** |const|                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_collision_point<class_RayCast2D_method_get_collision_point>` **(** **)** |const|                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_colliding<class_RayCast2D_method_is_colliding>` **(** **)** |const|                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`remove_exception<class_RayCast2D_method_remove_exception>` **(** :ref:`Object<class_Object>` node **)**                                     |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`remove_exception_rid<class_RayCast2D_method_remove_exception_rid>` **(** :ref:`RID<class_RID>` rid **)**                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_mask_bit<class_RayCast2D_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)** |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_RayCast2D_property_cast_to:

- :ref:`Vector2<class_Vector2>` **cast_to**

+-----------+----------------------+
| *Default* | ``Vector2( 0, 50 )`` |
+-----------+----------------------+
| *Setter*  | set_cast_to(value)   |
+-----------+----------------------+
| *Getter*  | get_cast_to()        |
+-----------+----------------------+

光线相对于光线投射的 ``position``\ 的目标点，。

----

.. _class_RayCast2D_property_collide_with_areas:

- :ref:`bool<class_bool>` **collide_with_areas**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_collide_with_areas(value)   |
+-----------+---------------------------------+
| *Getter*  | is_collide_with_areas_enabled() |
+-----------+---------------------------------+

如果\ ``true``\ ，将报告与\ :ref:`Area2D<class_Area2D>`\ 的碰撞。

----

.. _class_RayCast2D_property_collide_with_bodies:

- :ref:`bool<class_bool>` **collide_with_bodies**

+-----------+----------------------------------+
| *Default* | ``true``                         |
+-----------+----------------------------------+
| *Setter*  | set_collide_with_bodies(value)   |
+-----------+----------------------------------+
| *Getter*  | is_collide_with_bodies_enabled() |
+-----------+----------------------------------+

如果\ ``true``\ ，会报告与\ :ref:`PhysicsBody2D<class_PhysicsBody2D>`\ 的碰撞。

----

.. _class_RayCast2D_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The ray's collision mask. Only objects in at least one collision layer enabled in the mask will be detected. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_RayCast2D_property_enabled:

- :ref:`bool<class_bool>` **enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_enabled(value) |
+-----------+--------------------+
| *Getter*  | is_enabled()       |
+-----------+--------------------+

如果 ``true``\ ，将报告碰撞。

----

.. _class_RayCast2D_property_exclude_parent:

- :ref:`bool<class_bool>` **exclude_parent**

+-----------+--------------------------------+
| *Default* | ``true``                       |
+-----------+--------------------------------+
| *Setter*  | set_exclude_parent_body(value) |
+-----------+--------------------------------+
| *Getter*  | get_exclude_parent_body()      |
+-----------+--------------------------------+

如果\ ``true``\ ，父节点将被排除在碰撞检测之外。

方法说明
--------

.. _class_RayCast2D_method_add_exception:

- void **add_exception** **(** :ref:`Object<class_Object>` node **)**

添加碰撞例外，这样射线就不会报告与指定节点的碰撞情况。

----

.. _class_RayCast2D_method_add_exception_rid:

- void **add_exception_rid** **(** :ref:`RID<class_RID>` rid **)**

添加碰撞例外，这样射线就不会报告与指定 :ref:`RID<class_RID>` 的碰撞。

----

.. _class_RayCast2D_method_clear_exceptions:

- void **clear_exceptions** **(** **)**

删除此射线的所有碰撞例外。

----

.. _class_RayCast2D_method_force_raycast_update:

- void **force_raycast_update** **(** **)**

更新射线的碰撞信息。使用此方法立即更新碰撞信息，而不是等待下一次 ``_physics_process`` 调用，例如，如果光线或其父级已更改状态。

\ **注意：** ``enabled``\ 不需要此功能。

----

.. _class_RayCast2D_method_get_collider:

- :ref:`Object<class_Object>` **get_collider** **(** **)** |const|

返回射线相交的第一个对象，如果没有对象与射线相交，则返回 ``null``\ （即 :ref:`is_colliding<class_RayCast2D_method_is_colliding>` 返回 ``false``\ ）。

----

.. _class_RayCast2D_method_get_collider_shape:

- :ref:`int<class_int>` **get_collider_shape** **(** **)** |const|

返回射线相交的第一个对象的形状 ID，如果没有对象与射线相交，则返回 ``0``\ （即 :ref:`is_colliding<class_RayCast2D_method_is_colliding>` 返回 ``false``\ ）。

----

.. _class_RayCast2D_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

返回碰撞遮罩上的单个的个体。

----

.. _class_RayCast2D_method_get_collision_normal:

- :ref:`Vector2<class_Vector2>` **get_collision_normal** **(** **)** |const|

返回碰撞点相交物体形状的法线。

----

.. _class_RayCast2D_method_get_collision_point:

- :ref:`Vector2<class_Vector2>` **get_collision_point** **(** **)** |const|

返回射线与最近的物体相交的碰撞点。

\ **注意：**\ 这个点是在\ **全局**\ 坐标系中。

----

.. _class_RayCast2D_method_is_colliding:

- :ref:`bool<class_bool>` **is_colliding** **(** **)** |const|

返回是否有任何对象与射线的向量相交（考虑向量长度）。

----

.. _class_RayCast2D_method_remove_exception:

- void **remove_exception** **(** :ref:`Object<class_Object>` node **)**

移除碰撞例外，这样射线就会报告与指定节点的碰撞。

----

.. _class_RayCast2D_method_remove_exception_rid:

- void **remove_exception_rid** **(** :ref:`RID<class_RID>` rid **)**

移除碰撞例外，这样射线就会报告与指定的 :ref:`RID<class_RID>` 的碰撞。

----

.. _class_RayCast2D_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

设置或清除碰撞掩码上的单个位。这使得选择扫描区域更容易。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
