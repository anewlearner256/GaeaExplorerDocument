:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Range.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Range:

Range
=====

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`EditorSpinSlider<class_EditorSpinSlider>`, :ref:`ProgressBar<class_ProgressBar>`, :ref:`ScrollBar<class_ScrollBar>`, :ref:`Slider<class_Slider>`, :ref:`SpinBox<class_SpinBox>`, :ref:`TextureProgress<class_TextureProgress>`

基于范围的控件的抽象基类。

描述
----

Range是一个用于\ :ref:`Control<class_Control>`\ 节点的基类，它在\ *最小值*\ 和\ *最大值*\ 之间改变一个浮点\ *值*\ ，用于\ *步进*\ 和\ *页面*\ ，例如\ :ref:`ScrollBar<class_ScrollBar>`\ 。

属性
----

+---------------------------+----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`   | :ref:`allow_greater<class_Range_property_allow_greater>` | ``false`` |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`   | :ref:`allow_lesser<class_Range_property_allow_lesser>`   | ``false`` |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`   | :ref:`exp_edit<class_Range_property_exp_edit>`           | ``false`` |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`max_value<class_Range_property_max_value>`         | ``100.0`` |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`min_value<class_Range_property_min_value>`         | ``0.0``   |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`page<class_Range_property_page>`                   | ``0.0``   |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`ratio<class_Range_property_ratio>`                 |           |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`   | :ref:`rounded<class_Range_property_rounded>`             | ``false`` |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`step<class_Range_property_step>`                   | ``1.0``   |
+---------------------------+----------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`value<class_Range_property_value>`                 | ``0.0``   |
+---------------------------+----------------------------------------------------------+-----------+

方法
----

+------+---------------------------------------------------------------------------------+
| void | :ref:`share<class_Range_method_share>` **(** :ref:`Node<class_Node>` with **)** |
+------+---------------------------------------------------------------------------------+
| void | :ref:`unshare<class_Range_method_unshare>` **(** **)**                          |
+------+---------------------------------------------------------------------------------+

信号
----

.. _class_Range_signal_changed:

- **changed** **(** **)**

在 :ref:`min_value<class_Range_property_min_value>`, :ref:`max_value<class_Range_property_max_value>`, :ref:`page<class_Range_property_page>`, 或 :ref:`step<class_Range_property_step>` 改变时释放信号。

----

.. _class_Range_signal_value_changed:

- **value_changed** **(** :ref:`float<class_float>` value **)**

在 :ref:`value<class_Range_property_value>` 改变时释放信号。

属性说明
--------

.. _class_Range_property_allow_greater:

- :ref:`bool<class_bool>` **allow_greater**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_allow_greater(value) |
+-----------+--------------------------+
| *Getter*  | is_greater_allowed()     |
+-----------+--------------------------+

如果\ ``true``\ ，\ :ref:`value<class_Range_property_value>`\ 可能大于\ :ref:`max_value<class_Range_property_max_value>`\ 。

----

.. _class_Range_property_allow_lesser:

- :ref:`bool<class_bool>` **allow_lesser**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_allow_lesser(value) |
+-----------+-------------------------+
| *Getter*  | is_lesser_allowed()     |
+-----------+-------------------------+

如果\ ``true``\ ，\ :ref:`value<class_Range_property_value>`\ 可能小于\ :ref:`min_value<class_Range_property_min_value>`\ 。

----

.. _class_Range_property_exp_edit:

- :ref:`bool<class_bool>` **exp_edit**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_exp_ratio(value) |
+-----------+----------------------+
| *Getter*  | is_ratio_exp()       |
+-----------+----------------------+

如果\ ``true``\ ，并且\ ``min_value``\ 大于0，\ ``value``\ 将以指数方式而不是线性方式表示。

----

.. _class_Range_property_max_value:

- :ref:`float<class_float>` **max_value**

+-----------+----------------+
| *Default* | ``100.0``      |
+-----------+----------------+
| *Setter*  | set_max(value) |
+-----------+----------------+
| *Getter*  | get_max()      |
+-----------+----------------+

最大值。如果\ ``value``\ 大于\ ``max_value``\ ，则会被范围限制。

----

.. _class_Range_property_min_value:

- :ref:`float<class_float>` **min_value**

+-----------+----------------+
| *Default* | ``0.0``        |
+-----------+----------------+
| *Setter*  | set_min(value) |
+-----------+----------------+
| *Getter*  | get_min()      |
+-----------+----------------+

最小值。如果\ ``value``\ 小于\ ``min_value``\ ，则会被范围限制。

----

.. _class_Range_property_page:

- :ref:`float<class_float>` **page**

+-----------+-----------------+
| *Default* | ``0.0``         |
+-----------+-----------------+
| *Setter*  | set_page(value) |
+-----------+-----------------+
| *Getter*  | get_page()      |
+-----------+-----------------+

页面大小。主要用于\ :ref:`ScrollBar<class_ScrollBar>`\ 。ScrollBar的长度是它的尺寸乘以\ ``page``\ 超过\ ``min_value``\ 和\ ``max_value``\ 之间的差值。

----

.. _class_Range_property_ratio:

- :ref:`float<class_float>` **ratio**

+----------+---------------------+
| *Setter* | set_as_ratio(value) |
+----------+---------------------+
| *Getter* | get_as_ratio()      |
+----------+---------------------+

该值在0和1之间进行映射。

----

.. _class_Range_property_rounded:

- :ref:`bool<class_bool>` **rounded**

+-----------+-------------------------------+
| *Default* | ``false``                     |
+-----------+-------------------------------+
| *Setter*  | set_use_rounded_values(value) |
+-----------+-------------------------------+
| *Getter*  | is_using_rounded_values()     |
+-----------+-------------------------------+

如果 ``true``\ ，\ ``value`` 将始终四舍五入到最接近的整数。

----

.. _class_Range_property_step:

- :ref:`float<class_float>` **step**

+-----------+-----------------+
| *Default* | ``1.0``         |
+-----------+-----------------+
| *Setter*  | set_step(value) |
+-----------+-----------------+
| *Getter*  | get_step()      |
+-----------+-----------------+

如果大于0，\ ``value``\ 将总是被四舍五入为\ ``step``\ 的倍数。如果\ ``rounded``\ 也是\ ``true``\ ，\ ``value``\ 将首先被四舍五入为\ ``step``\ 的倍数，然后舍入为最近的整数。

----

.. _class_Range_property_value:

- :ref:`float<class_float>` **value**

+-----------+------------------+
| *Default* | ``0.0``          |
+-----------+------------------+
| *Setter*  | set_value(value) |
+-----------+------------------+
| *Getter*  | get_value()      |
+-----------+------------------+

当前的范围值。

方法说明
--------

.. _class_Range_method_share:

- void **share** **(** :ref:`Node<class_Node>` with **)**

将两个范围和之前与它们中任何一个分组的任何范围绑定在一起。当任何一个范围的成员变量改变时，它将与它的组中的所有其他范围共享新的值。

----

.. _class_Range_method_unshare:

- void **unshare** **(** **)**

停止与任何其他成员变量共享其成员变量的范围。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
