:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Rect2.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Rect2:

Rect2
=====

2D 轴对齐边界框。

描述
----

``Rect2`` consists of a position, a size, and several utility functions. It is typically used for fast overlap tests.

It uses floating-point coordinates.

The 3D counterpart to ``Rect2`` is :ref:`AABB<class_AABB>`.

Negative values for :ref:`size<class_Rect2_property_size>` are not supported and will not work for most methods. Use :ref:`abs<class_Rect2_method_abs>` to get a Rect2 with a positive size.

教程
----

- :doc:`Math tutorial index <../tutorials/math/index>`

- :doc:`Vector math <../tutorials/math/vector_math>`

- :doc:`Advanced vector math <../tutorials/math/vectors_advanced>`

属性
----

+-------------------------------+------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`end<class_Rect2_property_end>`           | ``Vector2( 0, 0 )`` |
+-------------------------------+------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`position<class_Rect2_property_position>` | ``Vector2( 0, 0 )`` |
+-------------------------------+------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`size<class_Rect2_property_size>`         | ``Vector2( 0, 0 )`` |
+-------------------------------+------------------------------------------------+---------------------+

方法
----

+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`Rect2<class_Rect2_method_Rect2>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`Vector2<class_Vector2>` size **)**                                                                            |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`Rect2<class_Rect2_method_Rect2>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` width, :ref:`float<class_float>` height **)**                           |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`abs<class_Rect2_method_abs>` **(** **)**                                                                                                                                                           |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`clip<class_Rect2_method_clip>` **(** :ref:`Rect2<class_Rect2>` b **)**                                                                                                                             |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`encloses<class_Rect2_method_encloses>` **(** :ref:`Rect2<class_Rect2>` b **)**                                                                                                                     |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`expand<class_Rect2_method_expand>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_area<class_Rect2_method_get_area>` **(** **)**                                                                                                                                                 |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_center<class_Rect2_method_get_center>` **(** **)**                                                                                                                                             |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`grow<class_Rect2_method_grow>` **(** :ref:`float<class_float>` by **)**                                                                                                                            |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`grow_individual<class_Rect2_method_grow_individual>` **(** :ref:`float<class_float>` left, :ref:`float<class_float>` top, :ref:`float<class_float>` right, :ref:`float<class_float>`  bottom **)** |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`grow_margin<class_Rect2_method_grow_margin>` **(** :ref:`int<class_int>` margin, :ref:`float<class_float>` by **)**                                                                                |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`has_no_area<class_Rect2_method_has_no_area>` **(** **)**                                                                                                                                           |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`has_point<class_Rect2_method_has_point>` **(** :ref:`Vector2<class_Vector2>` point **)**                                                                                                           |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`intersects<class_Rect2_method_intersects>` **(** :ref:`Rect2<class_Rect2>` b, :ref:`bool<class_bool>` include_borders=false **)**                                                                  |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_equal_approx<class_Rect2_method_is_equal_approx>` **(** :ref:`Rect2<class_Rect2>` rect **)**                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`merge<class_Rect2_method_merge>` **(** :ref:`Rect2<class_Rect2>` b **)**                                                                                                                           |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Rect2_property_end:

- :ref:`Vector2<class_Vector2>` **end**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+

终点角。通过 ``position + size`` 计算而来。设置该值会修改大小。

----

.. _class_Rect2_property_position:

- :ref:`Vector2<class_Vector2>` **position**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+

起点角。通常比 :ref:`end<class_Rect2_property_end>` 小。

----

.. _class_Rect2_property_size:

- :ref:`Vector2<class_Vector2>` **size**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+

从\ :ref:`position<class_Rect2_property_position>` 到 :ref:`end<class_Rect2_property_end>` 的大小。通常所有分量都是正数。

如果大小为负，可以用 :ref:`abs<class_Rect2_method_abs>` 修正。

方法说明
--------

.. _class_Rect2_method_Rect2:

- :ref:`Rect2<class_Rect2>` **Rect2** **(** :ref:`Vector2<class_Vector2>` position, :ref:`Vector2<class_Vector2>` size **)**

按位置和大小构造一个\ ``Rect2``\ 。

----

- :ref:`Rect2<class_Rect2>` **Rect2** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` width, :ref:`float<class_float>` height **)**

通过x、y、宽度和高度构造一个\ ``Rect2``\ 。

----

.. _class_Rect2_method_abs:

- :ref:`Rect2<class_Rect2>` **abs** **(** **)**

返回具有相同位置和面积的 ``Rect2``\ ，经过修改，使左上角为原点，\ ``width`` 和 ``height`` 为正数。

----

.. _class_Rect2_method_clip:

- :ref:`Rect2<class_Rect2>` **clip** **(** :ref:`Rect2<class_Rect2>` b **)**

返回此 ``Rect2`` 和 b 的交集。

----

.. _class_Rect2_method_encloses:

- :ref:`bool<class_bool>` **encloses** **(** :ref:`Rect2<class_Rect2>` b **)**

如果此 ``Rect2`` 完全包含另一个，则返回 ``true``\ 。

----

.. _class_Rect2_method_expand:

- :ref:`Rect2<class_Rect2>` **expand** **(** :ref:`Vector2<class_Vector2>` to **)**

返回该 ``Rect2`` 的副本，该副本扩展至包含给出的点。

\ **例子：**\ 

::

    # position (-3, 2), size (1, 1)
    var rect = Rect2(Vector2(-3, 2), Vector2(1, 1))
    # position (-3, -1), size (3, 4), 包含原来的 Rect 和 Vector2(0, -1)
    var rect2 = rect.expand(Vector2(0, -1))

----

.. _class_Rect2_method_get_area:

- :ref:`float<class_float>` **get_area** **(** **)**

返回 ``Rect2`` 面积。

----

.. _class_Rect2_method_get_center:

- :ref:`Vector2<class_Vector2>` **get_center** **(** **)**

Returns the center of the ``Rect2``, which is equal to :ref:`position<class_Rect2_property_position>` + (:ref:`size<class_Rect2_property_size>` / 2).

----

.. _class_Rect2_method_grow:

- :ref:`Rect2<class_Rect2>` **grow** **(** :ref:`float<class_float>` by **)**

返回 ``Rect2`` 的副本，该副本向所有边增长了给定数量的单位。

----

.. _class_Rect2_method_grow_individual:

- :ref:`Rect2<class_Rect2>` **grow_individual** **(** :ref:`float<class_float>` left, :ref:`float<class_float>` top, :ref:`float<class_float>` right, :ref:`float<class_float>`  bottom **)**

返回 ``Rect2`` 的副本，该副本分别向各边增长了给定数量的单位。

----

.. _class_Rect2_method_grow_margin:

- :ref:`Rect2<class_Rect2>` **grow_margin** **(** :ref:`int<class_int>` margin, :ref:`float<class_float>` by **)**

返回\ ``Rect2``\ 向\ :ref:`Margin<enum_@GlobalScope_Margin>`\ 方向增长给定数量单位的副本。

----

.. _class_Rect2_method_has_no_area:

- :ref:`bool<class_bool>` **has_no_area** **(** **)**

如果\ ``Rect2``\ 为flat或空，则返回\ ``true``\ 。

----

.. _class_Rect2_method_has_point:

- :ref:`bool<class_bool>` **has_point** **(** :ref:`Vector2<class_Vector2>` point **)**

返回 ``true`` 时，该 ``Rect2`` 包含此点。依照惯例，\ ``Rect2`` 的右边缘和下边缘是被排除在外的，因此\ **不**\ 包含位于这两条边上的点。

\ **注意：** 对于\ *大小为负*\ 的 ``Rect2``\ ，该方法并不可靠。请使用 :ref:`abs<class_Rect2_method_abs>` 获取等价的正数大小矩形再检查是否包含某个点。

----

.. _class_Rect2_method_intersects:

- :ref:`bool<class_bool>` **intersects** **(** :ref:`Rect2<class_Rect2>` b, :ref:`bool<class_bool>` include_borders=false **)**

如果 ``Rect2`` 与 ``b`` 重叠（即它们至少有一个共同点），则返回 ``true``\ 。

如果 ``include_borders`` 是 ``true``\ ，如果它们的边界接触，即使没有交叉，它们也会被视为重叠。

----

.. _class_Rect2_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Rect2<class_Rect2>` rect **)**

通过在每个组件上调用 ``is_equal_approx``\ ，如果此 ``Rect2`` 和 ``rect`` 大致相等，则返回 ``true``\ 。

----

.. _class_Rect2_method_merge:

- :ref:`Rect2<class_Rect2>` **merge** **(** :ref:`Rect2<class_Rect2>` b **)**

返回一个更大的 ``Rect2``\ ，其中包含这个 ``Rect2`` 和 ``b``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
