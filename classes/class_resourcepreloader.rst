:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the ResourcePreloader.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ResourcePreloader:

ResourcePreloader
=================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

资源预加载器节点。

描述
----

该节点用于预加载场景内的子资源，因此当场景加载时，所有资源都可以使用并且可以从预加载器中检索。

GDScript 有一个简化的 :ref:`@GDScript.preload<class_@GDScript_method_preload>` 内置方法，可以在大多数情况下使用，让 ``ResourcePreloader`` 用于更高级的场景。

方法
----

+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`add_resource<class_ResourcePreloader_method_add_resource>` **(** :ref:`String<class_String>` name, :ref:`Resource<class_Resource>` resource **)**  |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Resource<class_Resource>`               | :ref:`get_resource<class_ResourcePreloader_method_get_resource>` **(** :ref:`String<class_String>` name **)** |const|                                    |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_resource_list<class_ResourcePreloader_method_get_resource_list>` **(** **)** |const|                                                           |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_resource<class_ResourcePreloader_method_has_resource>` **(** :ref:`String<class_String>` name **)** |const|                                    |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`remove_resource<class_ResourcePreloader_method_remove_resource>` **(** :ref:`String<class_String>` name **)**                                      |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`rename_resource<class_ResourcePreloader_method_rename_resource>` **(** :ref:`String<class_String>` name, :ref:`String<class_String>` newname **)** |
+-----------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+

方法说明
--------

.. _class_ResourcePreloader_method_add_resource:

- void **add_resource** **(** :ref:`String<class_String>` name, :ref:`Resource<class_Resource>` resource **)**

将一个资源添加到预加载器中，并给出\ ``name``\ 。如果给定的\ ``name``\ 的资源已经存在，新的资源将被重命名为"``name`` N"，其中N是一个从2开始的递增数字。

----

.. _class_ResourcePreloader_method_get_resource:

- :ref:`Resource<class_Resource>` **get_resource** **(** :ref:`String<class_String>` name **)** |const|

返回与 ``name`` 关联的资源。

----

.. _class_ResourcePreloader_method_get_resource_list:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_resource_list** **(** **)** |const|

返回预加载器内的资源列表。

----

.. _class_ResourcePreloader_method_has_resource:

- :ref:`bool<class_bool>` **has_resource** **(** :ref:`String<class_String>` name **)** |const|

如果预加载器包含一个与\ ``name``\ 相关的资源，则返回\ ``true``\ 。

----

.. _class_ResourcePreloader_method_remove_resource:

- void **remove_resource** **(** :ref:`String<class_String>` name **)**

从预加载器中删除与\ ``name``\ 有关的资源。

----

.. _class_ResourcePreloader_method_rename_resource:

- void **rename_resource** **(** :ref:`String<class_String>` name, :ref:`String<class_String>` newname **)**

将预加载器中的资源从\ ``name``\ 重命名为\ ``newname``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
