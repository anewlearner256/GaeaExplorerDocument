:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the VisualShaderNodeCompare.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualShaderNodeCompare:

VisualShaderNodeCompare
=======================

**Inherits:** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

可视化着色器图内常见类型的比较函数。

描述
----

通过 :ref:`function<class_VisualShaderNodeCompare_property_function>` 比较\ ``a``\ 和\ ``b``\ 的 :ref:`type<class_VisualShaderNodeCompare_property_type>`\ 。返回一个布尔标量。在着色器代码中转换成\ ``if``\ 指令。

属性
----

+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+
| :ref:`Condition<enum_VisualShaderNodeCompare_Condition>`           | :ref:`condition<class_VisualShaderNodeCompare_property_condition>` | ``0`` |
+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+
| :ref:`Function<enum_VisualShaderNodeCompare_Function>`             | :ref:`function<class_VisualShaderNodeCompare_property_function>`   | ``0`` |
+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+
| :ref:`ComparisonType<enum_VisualShaderNodeCompare_ComparisonType>` | :ref:`type<class_VisualShaderNodeCompare_property_type>`           | ``0`` |
+--------------------------------------------------------------------+--------------------------------------------------------------------+-------+

枚举
----

.. _enum_VisualShaderNodeCompare_ComparisonType:

.. _class_VisualShaderNodeCompare_constant_CTYPE_SCALAR:

.. _class_VisualShaderNodeCompare_constant_CTYPE_VECTOR:

.. _class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN:

.. _class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM:

enum **ComparisonType**:

- **CTYPE_SCALAR** = **0** --- 浮点标量。

- **CTYPE_VECTOR** = **1** --- 3D向量类型。

- **CTYPE_BOOLEAN** = **2** --- 布林类型。

- **CTYPE_TRANSFORM** = **3** --- 变换类型，即\ ``mat4``\ 。

----

.. _enum_VisualShaderNodeCompare_Function:

.. _class_VisualShaderNodeCompare_constant_FUNC_EQUAL:

.. _class_VisualShaderNodeCompare_constant_FUNC_NOT_EQUAL:

.. _class_VisualShaderNodeCompare_constant_FUNC_GREATER_THAN:

.. _class_VisualShaderNodeCompare_constant_FUNC_GREATER_THAN_EQUAL:

.. _class_VisualShaderNodeCompare_constant_FUNC_LESS_THAN:

.. _class_VisualShaderNodeCompare_constant_FUNC_LESS_THAN_EQUAL:

enum **Function**:

- **FUNC_EQUAL** = **0** --- 相等比较，即\ ``a == b``\ 。

- **FUNC_NOT_EQUAL** = **1** --- 不等比较，即\ ``a != b``\ 。

- **FUNC_GREATER_THAN** = **2** --- 大于比较，即\ ``a > b``\ 。如果 :ref:`type<class_VisualShaderNodeCompare_property_type>` 设置为 :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>`\ 或 :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`\ 则不能使用。

- **FUNC_GREATER_THAN_EQUAL** = **3** --- 大于或等于的比较，即\ ``a >= b``\ 。如果\ :ref:`type<class_VisualShaderNodeCompare_property_type>`\ 设置为 :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>` 或\ :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`\ 则不能使用。

- **FUNC_LESS_THAN** = **4** --- 小于比较，即\ ``a < b``\ 。如果 :ref:`type<class_VisualShaderNodeCompare_property_type>` 设置为\ :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>`\ 或 :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`\ 则不能使用。

- **FUNC_LESS_THAN_EQUAL** = **5** --- 小于或等于的比较，即\ ``a < b``\ 。如果\ :ref:`type<class_VisualShaderNodeCompare_property_type>` 设置为\ :ref:`CTYPE_BOOLEAN<class_VisualShaderNodeCompare_constant_CTYPE_BOOLEAN>`\ 或\ :ref:`CTYPE_TRANSFORM<class_VisualShaderNodeCompare_constant_CTYPE_TRANSFORM>`\ 则不能使用。

----

.. _enum_VisualShaderNodeCompare_Condition:

.. _class_VisualShaderNodeCompare_constant_COND_ALL:

.. _class_VisualShaderNodeCompare_constant_COND_ANY:

enum **Condition**:

- **COND_ALL** = **0** --- 如果向量中的所有分量都满足比较条件，则结果为真。

- **COND_ANY** = **1** --- 如果向量中的任意分量满足比较条件，则结果为真。

属性说明
--------

.. _class_VisualShaderNodeCompare_property_condition:

- :ref:`Condition<enum_VisualShaderNodeCompare_Condition>` **condition**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_condition(value) |
+-----------+----------------------+
| *Getter*  | get_condition()      |
+-----------+----------------------+

如果 :ref:`type<class_VisualShaderNodeCompare_property_type>` 被设置为\ :ref:`CTYPE_VECTOR<class_VisualShaderNodeCompare_constant_CTYPE_VECTOR>`\ ，则适用额外条件。

----

.. _class_VisualShaderNodeCompare_property_function:

- :ref:`Function<enum_VisualShaderNodeCompare_Function>` **function**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_function(value) |
+-----------+---------------------+
| *Getter*  | get_function()      |
+-----------+---------------------+

比较函数。参阅\ :ref:`Function<enum_VisualShaderNodeCompare_Function>`\ 的选项。

----

.. _class_VisualShaderNodeCompare_property_type:

- :ref:`ComparisonType<enum_VisualShaderNodeCompare_ComparisonType>` **type**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_comparison_type(value) |
+-----------+----------------------------+
| *Getter*  | get_comparison_type()      |
+-----------+----------------------------+

在比较中要使用的类型。参阅\ :ref:`ComparisonType<enum_VisualShaderNodeCompare_ComparisonType>`\ 的选项。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
