:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Button.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Button:

Button
======

**Inherits:** :ref:`BaseButton<class_BaseButton>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CheckBox<class_CheckBox>`, :ref:`CheckButton<class_CheckButton>`, :ref:`ColorPickerButton<class_ColorPickerButton>`, :ref:`MenuButton<class_MenuButton>`, :ref:`OptionButton<class_OptionButton>`, :ref:`ToolButton<class_ToolButton>`

标准主题按钮。

描述
----

标准的主题按钮。它可以包含文字和图标，并根据当前的 :ref:`Theme<class_Theme>`\ 显示。

\ **创建按钮并在按下代码时配置动作的示例：**\ 

::

    func _ready():
        var button = Button.new()
        button.text = "Click me"
        button.connect("pressed", self, "_button_pressed")
        add_child(button)
    
    func _button_pressed():
        print("Hello world!")

按钮像所有控件节点一样，也可以在编辑器中创建，但在某些情况下可能需要从代码中创建。

参阅 :ref:`BaseButton<class_BaseButton>`\ ，其中包括与此节点相关的通用属性和方法。

\ **注意：** 按钮不处理触摸输入，因此不支持多点触控，因为模拟鼠标在给定时间只能按下一个按钮。将 :ref:`TouchScreenButton<class_TouchScreenButton>` 用于触发游戏移动或动作的按钮，因为 :ref:`TouchScreenButton<class_TouchScreenButton>` 支持多点触控。

教程
----

- `2D Dodge The Creeps Demo <https://godotengine.org/asset-library/asset/515>`__

- `OS Test Demo <https://godotengine.org/asset-library/asset/677>`__

属性
----

+-----------------------------------------+-------------------------------------------------------+-----------+
| :ref:`TextAlign<enum_Button_TextAlign>` | :ref:`align<class_Button_property_align>`             | ``1``     |
+-----------------------------------------+-------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                 | :ref:`clip_text<class_Button_property_clip_text>`     | ``false`` |
+-----------------------------------------+-------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                 | :ref:`expand_icon<class_Button_property_expand_icon>` | ``false`` |
+-----------------------------------------+-------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                 | :ref:`flat<class_Button_property_flat>`               | ``false`` |
+-----------------------------------------+-------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`           | :ref:`icon<class_Button_property_icon>`               |           |
+-----------------------------------------+-------------------------------------------------------+-----------+
| :ref:`String<class_String>`             | :ref:`text<class_Button_property_text>`               | ``""``    |
+-----------------------------------------+-------------------------------------------------------+-----------+

主题属性
--------

+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color<class_Button_theme_color_font_color>`                   | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_disabled<class_Button_theme_color_font_color_disabled>` | ``Color( 0.9, 0.9, 0.9, 0.2 )``  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_focus<class_Button_theme_color_font_color_focus>`       | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_hover<class_Button_theme_color_font_color_hover>`       | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_pressed<class_Button_theme_color_font_color_pressed>`   | ``Color( 1, 1, 1, 1 )``          |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`hseparation<class_Button_theme_constant_hseparation>`              | ``2``                            |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`Font<class_Font>`         | :ref:`font<class_Button_theme_font_font>`                                |                                  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`disabled<class_Button_theme_style_disabled>`                       |                                  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`focus<class_Button_theme_style_focus>`                             |                                  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`hover<class_Button_theme_style_hover>`                             |                                  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`normal<class_Button_theme_style_normal>`                           |                                  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`pressed<class_Button_theme_style_pressed>`                         |                                  |
+---------------------------------+--------------------------------------------------------------------------+----------------------------------+

枚举
----

.. _enum_Button_TextAlign:

.. _class_Button_constant_ALIGN_LEFT:

.. _class_Button_constant_ALIGN_CENTER:

.. _class_Button_constant_ALIGN_RIGHT:

enum **TextAlign**:

- **ALIGN_LEFT** = **0** --- 将文本向左对齐。

- **ALIGN_CENTER** = **1** --- 将文本居中对齐。。

- **ALIGN_RIGHT** = **2** --- 将文本向右对齐。

属性说明
--------

.. _class_Button_property_align:

- :ref:`TextAlign<enum_Button_TextAlign>` **align**

+-----------+-----------------------+
| *Default* | ``1``                 |
+-----------+-----------------------+
| *Setter*  | set_text_align(value) |
+-----------+-----------------------+
| *Getter*  | get_text_align()      |
+-----------+-----------------------+

按钮文本的文本对齐策略，使用\ :ref:`TextAlign<enum_Button_TextAlign>`\ 常量之一。

----

.. _class_Button_property_clip_text:

- :ref:`bool<class_bool>` **clip_text**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_clip_text(value) |
+-----------+----------------------+
| *Getter*  | get_clip_text()      |
+-----------+----------------------+

当此属性被启用时，过大而无法容纳按钮的文本会被剪掉，当被禁用时，按钮将始终有足够的宽度来容纳文本。

----

.. _class_Button_property_expand_icon:

- :ref:`bool<class_bool>` **expand_icon**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_expand_icon(value) |
+-----------+------------------------+
| *Getter*  | is_expand_icon()       |
+-----------+------------------------+

启用后，按钮的图标将展开/收缩以适应按钮的大小，同时保持其外观。

----

.. _class_Button_property_flat:

- :ref:`bool<class_bool>` **flat**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flat(value) |
+-----------+-----------------+
| *Getter*  | is_flat()       |
+-----------+-----------------+

平面按钮不显示装饰。

----

.. _class_Button_property_icon:

- :ref:`Texture<class_Texture>` **icon**

+----------+------------------------+
| *Setter* | set_button_icon(value) |
+----------+------------------------+
| *Getter* | get_button_icon()      |
+----------+------------------------+

按钮的图标，存在文本时，图标会被放置于文本前方。

如果想要编辑边距以及图标的间距，请使用 ``Button`` 的主题属性 ``hseparation`` 以及所使用的 :ref:`StyleBox<class_StyleBox>` 的 ``content_margin_*`` 属性。

----

.. _class_Button_property_text:

- :ref:`String<class_String>` **text**

+-----------+-----------------+
| *Default* | ``""``          |
+-----------+-----------------+
| *Setter*  | set_text(value) |
+-----------+-----------------+
| *Getter*  | get_text()      |
+-----------+-----------------+

按钮的文字，将显示在按钮的区域内。

Theme Property Descriptions
---------------------------

.. _class_Button_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+-----------+----------------------------------+

``Button``\ 的默认文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_Button_theme_color_font_color_disabled:

- :ref:`Color<class_Color>` **font_color_disabled**

+-----------+---------------------------------+
| *Default* | ``Color( 0.9, 0.9, 0.9, 0.2 )`` |
+-----------+---------------------------------+

禁用\ ``Button``\ 时使用的文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_Button_theme_color_font_color_focus:

- :ref:`Color<class_Color>` **font_color_focus**

+-----------+----------------------------------+
| *Default* | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+-----------+----------------------------------+

当\ ``Button``\ 获得焦点时使用的文本\ :ref:`Color<class_Color>`\ 。只取代按钮的正常文本颜色。禁用、悬停和按下状态优先于这个颜色。

----

.. _class_Button_theme_color_font_color_hover:

- :ref:`Color<class_Color>` **font_color_hover**

+-----------+----------------------------------+
| *Default* | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+-----------+----------------------------------+

悬停\ ``Button``\ 时使用的文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_Button_theme_color_font_color_pressed:

- :ref:`Color<class_Color>` **font_color_pressed**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

正在按下 ``Button`` 时使用的文本 :ref:`Color<class_Color>` 。

----

.. _class_Button_theme_constant_hseparation:

- :ref:`int<class_int>` **hseparation**

+-----------+-------+
| *Default* | ``2`` |
+-----------+-------+

``Button``\ 的图标和文本之间的水平间距。

----

.. _class_Button_theme_font_font:

- :ref:`Font<class_Font>` **font**

``Button``\ 文本的\ :ref:`Font<class_Font>`\ 。

----

.. _class_Button_theme_style_disabled:

- :ref:`StyleBox<class_StyleBox>` **disabled**

当\ ``Button``\ 被禁用时，使用\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Button_theme_style_focus:

- :ref:`StyleBox<class_StyleBox>` **focus**

当\ ``Button``\ 获得焦点时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。它显示在当前的\ :ref:`StyleBox<class_StyleBox>`\ 之上，所以使用\ :ref:`StyleBoxEmpty<class_StyleBoxEmpty>`\ 只是禁用焦点视觉效果。

----

.. _class_Button_theme_style_hover:

- :ref:`StyleBox<class_StyleBox>` **hover**

悬停\ ``Button``\ 时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Button_theme_style_normal:

- :ref:`StyleBox<class_StyleBox>` **normal**

``Button``\ 的默认\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Button_theme_style_pressed:

- :ref:`StyleBox<class_StyleBox>` **pressed**

按下\ ``Button``\ 时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
