:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TranslationServer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TranslationServer:

TranslationServer
=================

**Inherits:** :ref:`Object<class_Object>`

管理所有翻译的服务。

描述
----

管理所有翻译的服务。翻译可被设置，也可从中删除。

教程
----

- :doc:`../tutorials/i18n/internationalizing_games`

- :doc:`../tutorials/i18n/locales`

方法
----

+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`add_translation<class_TranslationServer_method_add_translation>` **(** :ref:`Translation<class_Translation>` translation **)**       |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`clear<class_TranslationServer_method_clear>` **(** **)**                                                                             |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`   | :ref:`get_loaded_locales<class_TranslationServer_method_get_loaded_locales>` **(** **)** |const|                                           |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`get_locale<class_TranslationServer_method_get_locale>` **(** **)** |const|                                                           |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`get_locale_name<class_TranslationServer_method_get_locale_name>` **(** :ref:`String<class_String>` locale **)** |const|              |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`remove_translation<class_TranslationServer_method_remove_translation>` **(** :ref:`Translation<class_Translation>` translation **)** |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`set_locale<class_TranslationServer_method_set_locale>` **(** :ref:`String<class_String>` locale **)**                                |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`translate<class_TranslationServer_method_translate>` **(** :ref:`String<class_String>` message **)** |const|                         |
+-----------------------------+--------------------------------------------------------------------------------------------------------------------------------------------+

方法说明
--------

.. _class_TranslationServer_method_add_translation:

- void **add_translation** **(** :ref:`Translation<class_Translation>` translation **)**

添加一个\ :ref:`Translation<class_Translation>`\ 翻译资源。

----

.. _class_TranslationServer_method_clear:

- void **clear** **(** **)**

清除服务器中的所有翻译。

----

.. _class_TranslationServer_method_get_loaded_locales:

- :ref:`Array<class_Array>` **get_loaded_locales** **(** **)** |const|

返回项目中所有已加载的区域设置的数组。

----

.. _class_TranslationServer_method_get_locale:

- :ref:`String<class_String>` **get_locale** **(** **)** |const|

返回项目的当前区域设置。

查询用户系统的区域设置请参阅 :ref:`OS.get_locale<class_OS_method_get_locale>` 和 :ref:`OS.get_locale_language<class_OS_method_get_locale_language>`\ 。

----

.. _class_TranslationServer_method_get_locale_name:

- :ref:`String<class_String>` **get_locale_name** **(** :ref:`String<class_String>` locale **)** |const|

返回区域设置的语言及其变体。例如，\ ``"en_US"`` 将返回 ``"English (United States)"``\ 。

----

.. _class_TranslationServer_method_remove_translation:

- void **remove_translation** **(** :ref:`Translation<class_Translation>` translation **)**

从服务中删除给定的翻译。

----

.. _class_TranslationServer_method_set_locale:

- void **set_locale** **(** :ref:`String<class_String>` locale **)**

设置项目的区域设置。\ ``locale`` 字符串将被标准化，以匹配已知的区域。例如，\ ``en-US``\ 将被匹配到\ ``en_US``\ 。

如果事先已经加载了新区域的翻译，其将被应用。

----

.. _class_TranslationServer_method_translate:

- :ref:`String<class_String>` **translate** **(** :ref:`String<class_String>` message **)** |const|

返回当前区域设置对指定信息（key）的翻译。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
