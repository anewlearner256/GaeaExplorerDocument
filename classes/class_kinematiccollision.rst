:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the KinematicCollision.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_KinematicCollision:

KinematicCollision
==================

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

:ref:`KinematicBody<class_KinematicBody>` 碰撞的碰撞数据。

描述
----

包含\ :ref:`KinematicBody<class_KinematicBody>`\ 碰撞的碰撞数据。当\ :ref:`KinematicBody<class_KinematicBody>`\ 使用\ :ref:`KinematicBody.move_and_collide<class_KinematicBody_method_move_and_collide>`\ 移动时，如果它检测到与另一个物体的碰撞就会停止。如果检测到碰撞，将返回一个KinematicCollision对象。

这个对象包含关于碰撞的信息，包括碰撞的物体、剩余的运动和碰撞的位置。这些信息可以用来计算碰撞响应。

属性
----

+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Object<class_Object>`   | :ref:`collider<class_KinematicCollision_property_collider>`                         |                        |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`         | :ref:`collider_id<class_KinematicCollision_property_collider_id>`                   | ``0``                  |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Variant<class_Variant>` | :ref:`collider_metadata<class_KinematicCollision_property_collider_metadata>`       |                        |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`RID<class_RID>`         | :ref:`collider_rid<class_KinematicCollision_property_collider_rid>`                 |                        |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Object<class_Object>`   | :ref:`collider_shape<class_KinematicCollision_property_collider_shape>`             |                        |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`int<class_int>`         | :ref:`collider_shape_index<class_KinematicCollision_property_collider_shape_index>` | ``0``                  |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`collider_velocity<class_KinematicCollision_property_collider_velocity>`       | ``Vector3( 0, 0, 0 )`` |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Object<class_Object>`   | :ref:`local_shape<class_KinematicCollision_property_local_shape>`                   |                        |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`normal<class_KinematicCollision_property_normal>`                             | ``Vector3( 0, 0, 0 )`` |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`position<class_KinematicCollision_property_position>`                         | ``Vector3( 0, 0, 0 )`` |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`remainder<class_KinematicCollision_property_remainder>`                       | ``Vector3( 0, 0, 0 )`` |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`travel<class_KinematicCollision_property_travel>`                             | ``Vector3( 0, 0, 0 )`` |
+-------------------------------+-------------------------------------------------------------------------------------+------------------------+

方法
----

+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_angle<class_KinematicCollision_method_get_angle>` **(** :ref:`Vector3<class_Vector3>` up_direction=Vector3( 0, 1, 0 ) **)** |const| |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_KinematicCollision_property_collider:

- :ref:`Object<class_Object>` **collider**

+----------+----------------+
| *Getter* | get_collider() |
+----------+----------------+

碰撞体。

----

.. _class_KinematicCollision_property_collider_id:

- :ref:`int<class_int>` **collider_id**

+-----------+-------------------+
| *Default* | ``0``             |
+-----------+-------------------+
| *Getter*  | get_collider_id() |
+-----------+-------------------+

碰撞体的唯一实例ID。参阅\ :ref:`Object.get_instance_id<class_Object_method_get_instance_id>`\ 。

----

.. _class_KinematicCollision_property_collider_metadata:

- :ref:`Variant<class_Variant>` **collider_metadata**

+----------+-------------------------+
| *Getter* | get_collider_metadata() |
+----------+-------------------------+

碰撞体的元数据。参阅\ :ref:`Object<class_Object>`\ 。

----

.. _class_KinematicCollision_property_collider_rid:

- :ref:`RID<class_RID>` **collider_rid**

+----------+--------------------+
| *Getter* | get_collider_rid() |
+----------+--------------------+

:ref:`PhysicsServer<class_PhysicsServer>` 使用的碰撞体的 :ref:`RID<class_RID>`\ 。

----

.. _class_KinematicCollision_property_collider_shape:

- :ref:`Object<class_Object>` **collider_shape**

+----------+----------------------+
| *Getter* | get_collider_shape() |
+----------+----------------------+

碰撞体的形状。

----

.. _class_KinematicCollision_property_collider_shape_index:

- :ref:`int<class_int>` **collider_shape_index**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Getter*  | get_collider_shape_index() |
+-----------+----------------------------+

碰撞形状的索引。参阅\ :ref:`CollisionObject<class_CollisionObject>`\ 。

----

.. _class_KinematicCollision_property_collider_velocity:

- :ref:`Vector3<class_Vector3>` **collider_velocity**

+-----------+-------------------------+
| *Default* | ``Vector3( 0, 0, 0 )``  |
+-----------+-------------------------+
| *Getter*  | get_collider_velocity() |
+-----------+-------------------------+

碰撞对象的速度。

----

.. _class_KinematicCollision_property_local_shape:

- :ref:`Object<class_Object>` **local_shape**

+----------+-------------------+
| *Getter* | get_local_shape() |
+----------+-------------------+

移动对象的碰撞形状。

----

.. _class_KinematicCollision_property_normal:

- :ref:`Vector3<class_Vector3>` **normal**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 0, 0 )`` |
+-----------+------------------------+
| *Getter*  | get_normal()           |
+-----------+------------------------+

碰撞体的形状在碰撞点的法线。

----

.. _class_KinematicCollision_property_position:

- :ref:`Vector3<class_Vector3>` **position**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 0, 0 )`` |
+-----------+------------------------+
| *Getter*  | get_position()         |
+-----------+------------------------+

碰撞点，以全局坐标表示。

----

.. _class_KinematicCollision_property_remainder:

- :ref:`Vector3<class_Vector3>` **remainder**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 0, 0 )`` |
+-----------+------------------------+
| *Getter*  | get_remainder()        |
+-----------+------------------------+

移动物体的剩余运动向量。

----

.. _class_KinematicCollision_property_travel:

- :ref:`Vector3<class_Vector3>` **travel**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 0, 0 )`` |
+-----------+------------------------+
| *Getter*  | get_travel()           |
+-----------+------------------------+

运动物体在碰撞前行进的距离。

方法说明
--------

.. _class_KinematicCollision_method_get_angle:

- :ref:`float<class_float>` **get_angle** **(** :ref:`Vector3<class_Vector3>` up_direction=Vector3( 0, 1, 0 ) **)** |const|

根据\ ``up_direction``\ 的碰撞角度，默认为\ ``Vector3.UP``\ 。这个值总是为正。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
