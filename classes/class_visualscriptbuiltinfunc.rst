:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the VisualScriptBuiltinFunc.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisualScriptBuiltinFunc:

VisualScriptBuiltinFunc
=======================

**Inherits:** :ref:`VisualScriptNode<class_VisualScriptNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

用于调用内置函数的可视化脚本节点。

描述
----

在 :ref:`VisualScript<class_VisualScript>` 中使用的内置函数。它通常是一个数学函数或一个实用函数。

也可参阅\ :ref:`@GDScript<class_@GDScript>`\ ，了解GDScript语言中的相同函数。

属性
----

+--------------------------------------------------------------+------------------------------------------------------------------+-------+
| :ref:`BuiltinFunc<enum_VisualScriptBuiltinFunc_BuiltinFunc>` | :ref:`function<class_VisualScriptBuiltinFunc_property_function>` | ``0`` |
+--------------------------------------------------------------+------------------------------------------------------------------+-------+

枚举
----

.. _enum_VisualScriptBuiltinFunc_BuiltinFunc:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SIN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_COS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_TAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SINH:

.. _class_VisualScriptBuiltinFunc_constant_MATH_COSH:

.. _class_VisualScriptBuiltinFunc_constant_MATH_TANH:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ASIN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ACOS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ATAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ATAN2:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SQRT:

.. _class_VisualScriptBuiltinFunc_constant_MATH_FMOD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_FPOSMOD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_FLOOR:

.. _class_VisualScriptBuiltinFunc_constant_MATH_CEIL:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ROUND:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ABS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SIGN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_POW:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LOG:

.. _class_VisualScriptBuiltinFunc_constant_MATH_EXP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ISNAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_ISINF:

.. _class_VisualScriptBuiltinFunc_constant_MATH_EASE:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DECIMALS:

.. _class_VisualScriptBuiltinFunc_constant_MATH_STEPIFY:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LERP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_INVERSE_LERP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANGE_LERP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_MOVE_TOWARD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DECTIME:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDOMIZE:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RAND:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDF:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDOM:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SEED:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RANDSEED:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DEG2RAD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_RAD2DEG:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LINEAR2DB:

.. _class_VisualScriptBuiltinFunc_constant_MATH_DB2LINEAR:

.. _class_VisualScriptBuiltinFunc_constant_MATH_POLAR2CARTESIAN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_CARTESIAN2POLAR:

.. _class_VisualScriptBuiltinFunc_constant_MATH_WRAP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_WRAPF:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_MAX:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_MIN:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_CLAMP:

.. _class_VisualScriptBuiltinFunc_constant_LOGIC_NEAREST_PO2:

.. _class_VisualScriptBuiltinFunc_constant_OBJ_WEAKREF:

.. _class_VisualScriptBuiltinFunc_constant_FUNC_FUNCREF:

.. _class_VisualScriptBuiltinFunc_constant_TYPE_CONVERT:

.. _class_VisualScriptBuiltinFunc_constant_TYPE_OF:

.. _class_VisualScriptBuiltinFunc_constant_TYPE_EXISTS:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_CHAR:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_STR:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_PRINT:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_PRINTERR:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_PRINTRAW:

.. _class_VisualScriptBuiltinFunc_constant_VAR_TO_STR:

.. _class_VisualScriptBuiltinFunc_constant_STR_TO_VAR:

.. _class_VisualScriptBuiltinFunc_constant_VAR_TO_BYTES:

.. _class_VisualScriptBuiltinFunc_constant_BYTES_TO_VAR:

.. _class_VisualScriptBuiltinFunc_constant_COLORN:

.. _class_VisualScriptBuiltinFunc_constant_MATH_SMOOTHSTEP:

.. _class_VisualScriptBuiltinFunc_constant_MATH_POSMOD:

.. _class_VisualScriptBuiltinFunc_constant_MATH_LERP_ANGLE:

.. _class_VisualScriptBuiltinFunc_constant_TEXT_ORD:

.. _class_VisualScriptBuiltinFunc_constant_FUNC_MAX:

enum **BuiltinFunc**:

- **MATH_SIN** = **0** --- 返回输入的正弦值。

- **MATH_COS** = **1** --- 返回输入的余弦值。

- **MATH_TAN** = **2** --- 返回输入的正切值。

- **MATH_SINH** = **3** --- 返回输入的双曲正弦。

- **MATH_COSH** = **4** --- 返回输入的双曲余弦。

- **MATH_TANH** = **5** --- 返回输入的双曲正切值。

- **MATH_ASIN** = **6** --- 返回输入的反正弦。

- **MATH_ACOS** = **7** --- 返回输入的反余弦值。

- **MATH_ATAN** = **8** --- 返回输入的反正切。

- **MATH_ATAN2** = **9** --- 返回输入的反正切，使用两个参数的符号来确定确切的角度。

- **MATH_SQRT** = **10** --- 返回输入的平方根。

- **MATH_FMOD** = **11** --- 返回一个输入的余数除以另一个输入的余数，使用浮点数。

- **MATH_FPOSMOD** = **12** --- 返回一个输入除以另一个输入的正余数，使用浮点数。

- **MATH_FLOOR** = **13** --- 返回向下舍入的输入。

- **MATH_CEIL** = **14** --- 返回向上舍入的输入。

- **MATH_ROUND** = **15** --- 返回输入值四舍五入到最接近的整数。

- **MATH_ABS** = **16** --- 返回输入的绝对值。

- **MATH_SIGN** = **17** --- 返回输入的符号，将其变成1、-1或0，有助于确定输入是正数还是负数。

- **MATH_POW** = **18** --- 返回被提高到给定幂的输入值。

- **MATH_LOG** = **19** --- 返回输入的自然对数。注意，这不是计算器使用的典型的以10为基数的对数函数。

- **MATH_EXP** = **20** --- 返回数学常量\ **e**\ 提高到指定的幂。\ **e**\ 的近似值为2.71828。

- **MATH_ISNAN** = **21** --- 返回输入是否为NaN（Not a Number）。NaN通常是由0除以0产生的，当然也有其他方式。

- **MATH_ISINF** = **22** --- 返回输入的数字是否为无限大的浮点数。无限通常是由一个数字除以0产生的，当然也有其他的方式。

- **MATH_EASE** = **23** --- 缓动函数，基于指数。\ ``s``\ 是函数的x值，\ ``curve``\ 为0时，函数为常量函数，1是线性函数，0到1是缓入，1+是缓出。0到-1是缓出再缓入，低于-1是缓入再缓出。

- **MATH_DECIMALS** = **24** --- 返回第一个非零数字出现在小数点后的数字位数。

- **MATH_STEPIFY** = **25** --- 返回给定步骤的输入断点。

- **MATH_LERP** = **26** --- 返回一个在前两个输入之间线性插值的数字，以第三个输入为基础。使用公式\ ``a + (a - b) * t``\ 。

- **MATH_INVERSE_LERP** = **27**

- **MATH_RANGE_LERP** = **28**

- **MATH_MOVE_TOWARD** = **29** --- 根据第三个输入，将数字向一个值移动。

- **MATH_DECTIME** = **30** --- 返回\ ``value``\ 减少\ ``step``\ \*\ ``amount``\ 的结果。

- **MATH_RANDOMIZE** = **31** --- 随机化随机数生成器的种子（或内部状态）。目前的实现是使用一个基于时间的数字重新做种。

- **MATH_RAND** = **32** --- 返回一个随机的32位整数值。为了获得0到N之间的随机值（其中N小于2^32 - 1），你可以将其与余数函数一起使用。

- **MATH_RANDF** = **33** --- 返回一个介于0到1之间的随机浮点值。要获得一个介于0到N之间的随机值，可以将其与乘法结合使用。

- **MATH_RANDOM** = **34** --- 返回两个输入之间的一个随机浮点值。

- **MATH_SEED** = **35** --- 设置随机数生成器的种子。

- **MATH_RANDSEED** = **36** --- 返回一个来自给定种子的随机值，以及新的种子。

- **MATH_DEG2RAD** = **37** --- 将输入的度数转换为弧度。

- **MATH_RAD2DEG** = **38** --- 将输入从弧度转换为度数。

- **MATH_LINEAR2DB** = **39** --- 将输入从线性音量转换为分贝音量。

- **MATH_DB2LINEAR** = **40** --- 将输入从分贝音量转换为线性音量。

- **MATH_POLAR2CARTESIAN** = **41** --- 将 2D 点从极坐标系（与原点 ``r`` 的距离和角度 ``th``\ ）转换为笛卡尔坐标系（X 和 Y 轴）。

- **MATH_CARTESIAN2POLAR** = **42** --- 将 2D 点的坐标表示，从笛卡尔坐标系（X 和 Y 轴）转换为极坐标系（到原点的距离和角度）。

- **MATH_WRAP** = **43**

- **MATH_WRAPF** = **44**

- **LOGIC_MAX** = **45** --- 返回两个数字中较大的一个，也称为它们的最大值。

- **LOGIC_MIN** = **46** --- 返回两个数字中较小的一个，也被称为它们的最小值。

- **LOGIC_CLAMP** = **47** --- 返回限定在给定范围内的输入，确保结果永远不会超出该范围。相当于\ ``min(max(input, range_low), range_high)``\ 。

- **LOGIC_NEAREST_PO2** = **48** --- 将最接近的2的次方返回给输入。

- **OBJ_WEAKREF** = **49** --- 从输入创建一个\ :ref:`WeakRef<class_WeakRef>`\ 。

- **FUNC_FUNCREF** = **50** --- 从输入创建一个\ :ref:`FuncRef<class_FuncRef>`\ 。

- **TYPE_CONVERT** = **51** --- 在类型之间转换。

- **TYPE_OF** = **52** --- 返回输入的类型为整数。请查看\ :ref:`Variant.Type<enum_@GlobalScope_Variant.Type>`\ 以了解可能被返回的整数。

- **TYPE_EXISTS** = **53** --- 检查类型是否已在 :ref:`ClassDB<class_ClassDB>` 中注册。

- **TEXT_CHAR** = **54** --- 返回具有给定 ascii 值的字符。

- **TEXT_STR** = **55** --- 将输入转换为字符串。

- **TEXT_PRINT** = **56** --- 打印给定的字符串到输出窗口。

- **TEXT_PRINTERR** = **57** --- 打印给定的字符串到标准错误输出。

- **TEXT_PRINTRAW** = **58** --- 打印给定的字符串到标准输出，不加换行。

- **VAR_TO_STR** = **59** --- 将 :ref:`Variant<class_Variant>` 序列化为字符串。

- **STR_TO_VAR** = **60** --- 从一个使用 :ref:`VAR_TO_STR<class_VisualScriptBuiltinFunc_constant_VAR_TO_STR>`\ 序列化的字符串中反序列化一个 :ref:`Variant<class_Variant>` 。

- **VAR_TO_BYTES** = **61** --- 将 :ref:`Variant<class_Variant>` 序列化为 :ref:`PoolByteArray<class_PoolByteArray>`\ 。

- **BYTES_TO_VAR** = **62** --- 从使用 :ref:`VAR_TO_BYTES<class_VisualScriptBuiltinFunc_constant_VAR_TO_BYTES>` 序列化的 :ref:`PoolByteArray<class_PoolByteArray>` 反序列化 :ref:`Variant<class_Variant>`\ 。

- **COLORN** = **63** --- 返回具有给定名称的\ :ref:`Color<class_Color>`\ 和从0到1的alpha。

\ **注意：** 名称在\ ``color_names.inc``\ 中定义。

- **MATH_SMOOTHSTEP** = **64** --- 返回一个在前两个输入之间平滑内插的数字，基于第三个输入。类似于 :ref:`MATH_LERP<class_VisualScriptBuiltinFunc_constant_MATH_LERP>`\ ，但在开始时插值较快，结束时插值较慢。使用Hermite插值公式。

::

    var t = clamp((weight - from) / (to - from), 0.0, 1.0)
    return t * t * (3.0 - 2.0 * t)

- **MATH_POSMOD** = **65**

- **MATH_LERP_ANGLE** = **66**

- **TEXT_ORD** = **67**

- **FUNC_MAX** = **68** --- 表示\ :ref:`BuiltinFunc<enum_VisualScriptBuiltinFunc_BuiltinFunc>`\ 枚举的大小。

属性说明
--------

.. _class_VisualScriptBuiltinFunc_property_function:

- :ref:`BuiltinFunc<enum_VisualScriptBuiltinFunc_BuiltinFunc>` **function**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_func(value) |
+-----------+-----------------+
| *Getter*  | get_func()      |
+-----------+-----------------+

要执行的函数。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
