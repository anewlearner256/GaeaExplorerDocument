:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the AudioEffectSpectrumAnalyzer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioEffectSpectrumAnalyzer:

AudioEffectSpectrumAnalyzer
===========================

**Inherits:** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

可用于实时音频可视化的音频效果。

描述
----

这种音频效果不影响声音输出，但可以用于实时音频可视化。

使用程序生成声音请参阅 :ref:`AudioStreamGenerator<class_AudioStreamGenerator>`\ 。

教程
----

- `https://godotengine.org/asset-library/asset/528 <Audio Spectrum Demo>`__

- `https://godotengine.org/article/godot-32-will-get-new-audio-features <GaaeExplorer 3.2 will get new audio features>`__

属性
----

+------------------------------------------------------------+--------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>`                                  | :ref:`buffer_length<class_AudioEffectSpectrumAnalyzer_property_buffer_length>` | ``2.0``  |
+------------------------------------------------------------+--------------------------------------------------------------------------------+----------+
| :ref:`FFT_Size<enum_AudioEffectSpectrumAnalyzer_FFT_Size>` | :ref:`fft_size<class_AudioEffectSpectrumAnalyzer_property_fft_size>`           | ``2``    |
+------------------------------------------------------------+--------------------------------------------------------------------------------+----------+
| :ref:`float<class_float>`                                  | :ref:`tap_back_pos<class_AudioEffectSpectrumAnalyzer_property_tap_back_pos>`   | ``0.01`` |
+------------------------------------------------------------+--------------------------------------------------------------------------------+----------+

枚举
----

.. _enum_AudioEffectSpectrumAnalyzer_FFT_Size:

.. _class_AudioEffectSpectrumAnalyzer_constant_FFT_SIZE_256:

.. _class_AudioEffectSpectrumAnalyzer_constant_FFT_SIZE_512:

.. _class_AudioEffectSpectrumAnalyzer_constant_FFT_SIZE_1024:

.. _class_AudioEffectSpectrumAnalyzer_constant_FFT_SIZE_2048:

.. _class_AudioEffectSpectrumAnalyzer_constant_FFT_SIZE_4096:

.. _class_AudioEffectSpectrumAnalyzer_constant_FFT_SIZE_MAX:

enum **FFT_Size**:

- **FFT_SIZE_256** = **0** --- 使用 256 个样品的缓冲器进行快速傅里叶变换。最低延迟，但随着时间的推移最不稳定。

- **FFT_SIZE_512** = **1** --- 使用 512 个样本的缓冲器进行快速傅里叶变换。低延迟，但随着时间的推移不太稳定。

- **FFT_SIZE_1024** = **2** --- 使用 1024 个样本的缓冲器进行快速傅里叶变换。随着时间的推移，这是延迟和稳定性之间的折衷。

- **FFT_SIZE_2048** = **3** --- 使用 2048 个样品的缓冲器进行快速傅里叶变换。随着时间的推移，延迟高但稳定。

- **FFT_SIZE_4096** = **4** --- 使用 4096 个样品的缓冲器进行快速傅里叶变换。随着时间的推移，延迟最高但最稳定。

- **FFT_SIZE_MAX** = **5** --- 表示\ :ref:`FFT_Size<enum_AudioEffectSpectrumAnalyzer_FFT_Size>`\ 枚举的大小。

属性说明
--------

.. _class_AudioEffectSpectrumAnalyzer_property_buffer_length:

- :ref:`float<class_float>` **buffer_length**

+-----------+--------------------------+
| *Default* | ``2.0``                  |
+-----------+--------------------------+
| *Setter*  | set_buffer_length(value) |
+-----------+--------------------------+
| *Getter*  | get_buffer_length()      |
+-----------+--------------------------+

要保留的缓冲区长度（以秒为单位）。较高的值将数据保存的时间更长，但需要更多的内存。

----

.. _class_AudioEffectSpectrumAnalyzer_property_fft_size:

- :ref:`FFT_Size<enum_AudioEffectSpectrumAnalyzer_FFT_Size>` **fft_size**

+-----------+---------------------+
| *Default* | ``2``               |
+-----------+---------------------+
| *Setter*  | set_fft_size(value) |
+-----------+---------------------+
| *Getter*  | get_fft_size()      |
+-----------+---------------------+

`快速傅里叶变换 <https://en.wikipedia.org/wiki/Fast_Fourier_transform>`__\ 缓冲区的大小。较高的值可以使频谱分析随时间的推移而平滑，但有较大的延迟。这种较高延迟的影响在突然的振幅变化中特别明显。

----

.. _class_AudioEffectSpectrumAnalyzer_property_tap_back_pos:

- :ref:`float<class_float>` **tap_back_pos**

+-----------+-------------------------+
| *Default* | ``0.01``                |
+-----------+-------------------------+
| *Setter*  | set_tap_back_pos(value) |
+-----------+-------------------------+
| *Getter*  | get_tap_back_pos()      |
+-----------+-------------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
