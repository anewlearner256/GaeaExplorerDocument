:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Material.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Material:

Material
========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CanvasItemMaterial<class_CanvasItemMaterial>`, :ref:`ParticlesMaterial<class_ParticlesMaterial>`, :ref:`ShaderMaterial<class_ShaderMaterial>`, :ref:`SpatialMaterial<class_SpatialMaterial>`

用于为几何体上色(Coloring)和着色(Shading)的\ :ref:`Resource<class_Resource>`\ 抽象子类。

描述
----

材质是基本\ :ref:`Resource<class_Resource>`\ ，用于几何体着色器和上色。所有的材质都继承自它，几乎所有的\ :ref:`VisualInstance<class_VisualInstance>`\ 派生节点都带有材质。有几个标志和参数在所有材质类型之间是共享的，并在这里进行配置。

教程
----

- `3D Material Testers Demo <https://godotengine.org/asset-library/asset/123>`__

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

属性
----

+---------------------------------+-----------------------------------------------------------------+-------+
| :ref:`Material<class_Material>` | :ref:`next_pass<class_Material_property_next_pass>`             |       |
+---------------------------------+-----------------------------------------------------------------+-------+
| :ref:`int<class_int>`           | :ref:`render_priority<class_Material_property_render_priority>` | ``0`` |
+---------------------------------+-----------------------------------------------------------------+-------+

常量
----

.. _class_Material_constant_RENDER_PRIORITY_MAX:

.. _class_Material_constant_RENDER_PRIORITY_MIN:

- **RENDER_PRIORITY_MAX** = **127** --- :ref:`render_priority<class_Material_property_render_priority>` 参数的最大值。

- **RENDER_PRIORITY_MIN** = **-128** --- :ref:`render_priority<class_Material_property_render_priority>` 参数的最小值。

属性说明
--------

.. _class_Material_property_next_pass:

- :ref:`Material<class_Material>` **next_pass**

+----------+----------------------+
| *Setter* | set_next_pass(value) |
+----------+----------------------+
| *Getter* | get_next_pass()      |
+----------+----------------------+

设置下一次使用的 ``Material``\ 。这将使用不同的材质再次渲染对象。

\ **注意：**\ 这只适用于“Spatial”类型的 :ref:`SpatialMaterial<class_SpatialMaterial>` 和 :ref:`ShaderMaterial<class_ShaderMaterial>`\ 。

----

.. _class_Material_property_render_priority:

- :ref:`int<class_int>` **render_priority**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_render_priority(value) |
+-----------+----------------------------+
| *Getter*  | get_render_priority()      |
+-----------+----------------------------+

设置3D场景中透明物体的渲染优先级。优先级高的物体将被排序在优先级低的物体前面。

\ **注意：** 这只适用于透明物体的排序。这不会影响透明物体相对于不透明物体的排序方式。这是因为不透明对象不被排序，而透明对象则从后往前排序（取决于优先级）。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
