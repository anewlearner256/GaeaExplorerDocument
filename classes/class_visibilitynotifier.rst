:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the VisibilityNotifier.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VisibilityNotifier:

VisibilityNotifier
==================

**Inherits:** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisibilityEnabler<class_VisibilityEnabler>`

大约在节点在屏幕上可见时进行检测。

描述
----

VisibilityNotifier 检测它在屏幕上是否可见。当它的边界矩形进入或退出屏幕或 :ref:`Camera<class_Camera>` 的视图时，它也会发出通知。

如果你想让节点在退出屏幕时自动禁用，请使用 :ref:`VisibilityEnabler<class_VisibilityEnabler>` 代替。

\ **注意：**\ VisibilityNotifier 由于性能原因使用了一个近似的启发式方法。它不会考虑墙和其他遮挡物（除非你使用了 :ref:`Portal<class_Portal>`\ ）。启发式这一实现细节，在未来的版本中可能会改变。如果你需要精确的可见性检查，请使用另一种方法，例如添加一个 :ref:`Area<class_Area>` 节点作为 :ref:`Camera<class_Camera>` 节点的子节点和/或 :ref:`Vector3.dot<class_Vector3_method_dot>`\ 。

属性
----

+-------------------------+-----------------------------------------------------+---------------------------------+
| :ref:`AABB<class_AABB>` | :ref:`aabb<class_VisibilityNotifier_property_aabb>` | ``AABB( -1, -1, -1, 2, 2, 2 )`` |
+-------------------------+-----------------------------------------------------+---------------------------------+

方法
----

+-------------------------+---------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_on_screen<class_VisibilityNotifier_method_is_on_screen>` **(** **)** |const| |
+-------------------------+---------------------------------------------------------------------------------------+

信号
----

.. _class_VisibilityNotifier_signal_camera_entered:

- **camera_entered** **(** :ref:`Camera<class_Camera>` camera **)**

当VisibilityNotifier进入\ :ref:`Camera<class_Camera>`\ 的视图时触发。

----

.. _class_VisibilityNotifier_signal_camera_exited:

- **camera_exited** **(** :ref:`Camera<class_Camera>` camera **)**

当VisibilityNotifier退出\ :ref:`Camera<class_Camera>`\ 的视图时触发。

----

.. _class_VisibilityNotifier_signal_screen_entered:

- **screen_entered** **(** **)**

当VisibilityNotifier进入屏幕时触发。

----

.. _class_VisibilityNotifier_signal_screen_exited:

- **screen_exited** **(** **)**

当VisibilityNotifier退出屏幕时触发。

属性说明
--------

.. _class_VisibilityNotifier_property_aabb:

- :ref:`AABB<class_AABB>` **aabb**

+-----------+---------------------------------+
| *Default* | ``AABB( -1, -1, -1, 2, 2, 2 )`` |
+-----------+---------------------------------+
| *Setter*  | set_aabb(value)                 |
+-----------+---------------------------------+
| *Getter*  | get_aabb()                      |
+-----------+---------------------------------+

VisibilityNotifier的边界框。

方法说明
--------

.. _class_VisibilityNotifier_method_is_on_screen:

- :ref:`bool<class_bool>` **is_on_screen** **(** **)** |const|

如果\ ``true``\ ，则边界框在屏幕上。

\ **注意：**\ 一旦添加到场景树中，需要一帧来计算节点的可见性，所以这个方法将在它被实例化后立即返回\ ``false``\ ，即使屏幕在绘制过程中。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
