:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the ImmediateGeometry.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ImmediateGeometry:

ImmediateGeometry
=================

**Inherits:** :ref:`GeometryInstance<class_GeometryInstance>` **<** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

通过代码绘制简单的几何形状。

描述
----

从代码中绘制简单的几何图形。使用类似于 OpenGL 1.x 的绘制模式。

请参阅 :ref:`ArrayMesh<class_ArrayMesh>`\ 、\ :ref:`MeshDataTool<class_MeshDataTool>` 和 :ref:`SurfaceTool<class_SurfaceTool>`\ ，了解程序式几何体的生成。

\ **注意：**\ ImmediateGeometry3D最适合处理每一帧变化的少量网格数据。当处理大量的网格数据时，它将会很慢。如果网格数据不经常变化，请使用 :ref:`ArrayMesh<class_ArrayMesh>`\ 、\ :ref:`MeshDataTool<class_MeshDataTool>` 或 :ref:`SurfaceTool<class_SurfaceTool>` 代替。

\ **注意：**\ GaaeExplorer对三角形基本单元模式的正面使用顺时针\ `缠绕顺序 <https://learnopengl.com/Advanced-OpenGL/Face-culling>`__\ 。

\ **注意：**\ 在处理大量网格数据时，如果出现漏点，可以尝试在 :ref:`ProjectSettings.rendering/limits/buffers/immediate_buffer_size_kb<class_ProjectSettings_property_rendering/limits/buffers/immediate_buffer_size_kb>` 增加其缓冲区大小限制。

方法
----

+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`add_sphere<class_ImmediateGeometry_method_add_sphere>` **(** :ref:`int<class_int>` lats, :ref:`int<class_int>` lons, :ref:`float<class_float>` radius, :ref:`bool<class_bool>` add_uv=true **)** |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`add_vertex<class_ImmediateGeometry_method_add_vertex>` **(** :ref:`Vector3<class_Vector3>` position **)**                                                                                        |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`begin<class_ImmediateGeometry_method_begin>` **(** :ref:`PrimitiveType<enum_Mesh_PrimitiveType>` primitive, :ref:`Texture<class_Texture>` texture=null **)**                                     |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`clear<class_ImmediateGeometry_method_clear>` **(** **)**                                                                                                                                         |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`end<class_ImmediateGeometry_method_end>` **(** **)**                                                                                                                                             |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`set_color<class_ImmediateGeometry_method_set_color>` **(** :ref:`Color<class_Color>` color **)**                                                                                                 |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`set_normal<class_ImmediateGeometry_method_set_normal>` **(** :ref:`Vector3<class_Vector3>` normal **)**                                                                                          |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`set_tangent<class_ImmediateGeometry_method_set_tangent>` **(** :ref:`Plane<class_Plane>` tangent **)**                                                                                           |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`set_uv<class_ImmediateGeometry_method_set_uv>` **(** :ref:`Vector2<class_Vector2>` uv **)**                                                                                                      |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`set_uv2<class_ImmediateGeometry_method_set_uv2>` **(** :ref:`Vector2<class_Vector2>` uv **)**                                                                                                    |
+------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

方法说明
--------

.. _class_ImmediateGeometry_method_add_sphere:

- void **add_sphere** **(** :ref:`int<class_int>` lats, :ref:`int<class_int>` lons, :ref:`float<class_float>` radius, :ref:`bool<class_bool>` add_uv=true **)**

用于绘制给定经纬度和半径的UV球体的简单辅助工具。

----

.. _class_ImmediateGeometry_method_add_vertex:

- void **add_vertex** **(** :ref:`Vector3<class_Vector3>` position **)**

使用当前设置的颜色/uv等，在局部坐标空间中添加一个顶点。

----

.. _class_ImmediateGeometry_method_begin:

- void **begin** **(** :ref:`PrimitiveType<enum_Mesh_PrimitiveType>` primitive, :ref:`Texture<class_Texture>` texture=null **)**

开始绘制（可选纹理重写）。当调用结束\ :ref:`end<class_ImmediateGeometry_method_end>`\ 。对此如何实现的更多信息，搜索\ ``glBegin()``\ 和\ ``glEnd()``\ 引用。

对于基本类型，参阅\ :ref:`PrimitiveType<enum_Mesh_PrimitiveType>`\ 枚举。

----

.. _class_ImmediateGeometry_method_clear:

- void **clear** **(** **)**

清除使用begin/end绘制的一切内容。

----

.. _class_ImmediateGeometry_method_end:

- void **end** **(** **)**

结束正在绘制的context并显示其结果。

----

.. _class_ImmediateGeometry_method_set_color:

- void **set_color** **(** :ref:`Color<class_Color>` color **)**

当前绘图颜色。

----

.. _class_ImmediateGeometry_method_set_normal:

- void **set_normal** **(** :ref:`Vector3<class_Vector3>` normal **)**

下一个顶点的法线。

----

.. _class_ImmediateGeometry_method_set_tangent:

- void **set_tangent** **(** :ref:`Plane<class_Plane>` tangent **)**

下一个顶点的切线（和副法线的方向）。

----

.. _class_ImmediateGeometry_method_set_uv:

- void **set_uv** **(** :ref:`Vector2<class_Vector2>` uv **)**

下一个顶点的 UV。

----

.. _class_ImmediateGeometry_method_set_uv2:

- void **set_uv2** **(** :ref:`Vector2<class_Vector2>` uv **)**

下一个顶点的第二层UV。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
