:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the CSGShape.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CSGShape:

CSGShape
========

**Inherits:** :ref:`GeometryInstance<class_GeometryInstance>` **<** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CSGCombiner<class_CSGCombiner>`, :ref:`CSGPrimitive<class_CSGPrimitive>`

CSG基类。

描述
----

这是CSG基类，可为GaaeExplorer中的各个CSG节点提供CSG操作支持。

属性
----

+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                   | :ref:`calculate_tangents<class_CSGShape_property_calculate_tangents>` | ``true``  |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`                     | :ref:`collision_layer<class_CSGShape_property_collision_layer>`       | ``1``     |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`                     | :ref:`collision_mask<class_CSGShape_property_collision_mask>`         | ``1``     |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`Operation<enum_CSGShape_Operation>` | :ref:`operation<class_CSGShape_property_operation>`                   | ``0``     |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                 | :ref:`snap<class_CSGShape_property_snap>`                             | ``0.001`` |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                   | :ref:`use_collision<class_CSGShape_property_use_collision>`           | ``false`` |
+-------------------------------------------+-----------------------------------------------------------------------+-----------+

方法
----

+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_collision_layer_bit<class_CSGShape_method_get_collision_layer_bit>` **(** :ref:`int<class_int>` bit **)** |const|                        |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`get_collision_mask_bit<class_CSGShape_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                          |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`get_meshes<class_CSGShape_method_get_meshes>` **(** **)** |const|                                                                            |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`is_root_shape<class_CSGShape_method_is_root_shape>` **(** **)** |const|                                                                      |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_collision_layer_bit<class_CSGShape_method_set_collision_layer_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)** |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`set_collision_mask_bit<class_CSGShape_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**   |
+---------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_CSGShape_Operation:

.. _class_CSGShape_constant_OPERATION_UNION:

.. _class_CSGShape_constant_OPERATION_INTERSECTION:

.. _class_CSGShape_constant_OPERATION_SUBTRACTION:

enum **Operation**:

- **OPERATION_UNION** = **0** --- 合并两个图元的几何，删除相交的几何。

- **OPERATION_INTERSECTION** = **1** --- 仅保留相交的几何，其余的将被删除。

- **OPERATION_SUBTRACTION** = **2** --- 从第一个形状减去第二个形状，留下一个带有其形状的凹痕。

属性说明
--------

.. _class_CSGShape_property_calculate_tangents:

- :ref:`bool<class_bool>` **calculate_tangents**

+-----------+-------------------------------+
| *Default* | ``true``                      |
+-----------+-------------------------------+
| *Setter*  | set_calculate_tangents(value) |
+-----------+-------------------------------+
| *Getter*  | is_calculating_tangents()     |
+-----------+-------------------------------+

计算允许使用法线贴图的CSG形状的切线。这仅适用于根部形状，此设置将在所有子级上均被忽略。

----

.. _class_CSGShape_property_collision_layer:

- :ref:`int<class_int>` **collision_layer**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_collision_layer(value) |
+-----------+----------------------------+
| *Getter*  | get_collision_layer()      |
+-----------+----------------------------+

The physics layers this area is in.

Collidable objects can exist in any of 32 different layers. These layers work like a tagging system, and are not visual. A collidable can use these layers to select with which objects it can collide, using the collision_mask property.

A contact is detected if object A is in any of the layers that object B scans, or object B is in any layer scanned by object A. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_CSGShape_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The physics layers this CSG shape scans for collisions. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_CSGShape_property_operation:

- :ref:`Operation<enum_CSGShape_Operation>` **operation**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_operation(value) |
+-----------+----------------------+
| *Getter*  | get_operation()      |
+-----------+----------------------+

在此形状上执行的操作。对于第一个CSG子节点，将忽略此操作，因为操作是在此节点与该节点父级的上一个子级之间进行的。

----

.. _class_CSGShape_property_snap:

- :ref:`float<class_float>` **snap**

+-----------+-----------------+
| *Default* | ``0.001``       |
+-----------+-----------------+
| *Setter*  | set_snap(value) |
+-----------+-----------------+
| *Getter*  | get_snap()      |
+-----------+-----------------+

捕捉使网格捕捉到给定的距离，以便两个网格的面可以完美对齐。较低的值会导致较高的精度，但可能难以调整。

----

.. _class_CSGShape_property_use_collision:

- :ref:`bool<class_bool>` **use_collision**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_use_collision(value) |
+-----------+--------------------------+
| *Getter*  | is_using_collision()     |
+-----------+--------------------------+

为我们的CSG形状向物理引擎添加碰撞形状。这将始终像一个静态物体。请注意，即使CSG形状本身被隐藏，碰撞形状仍处于活动状态。

方法说明
--------

.. _class_CSGShape_method_get_collision_layer_bit:

- :ref:`bool<class_bool>` **get_collision_layer_bit** **(** :ref:`int<class_int>` bit **)** |const|

返回碰撞遮罩上的单个的个体。

----

.. _class_CSGShape_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

返回碰撞遮罩上的单个的个体。

----

.. _class_CSGShape_method_get_meshes:

- :ref:`Array<class_Array>` **get_meshes** **(** **)** |const|

返回带有两个元素的\ :ref:`Array<class_Array>`\ ，第一个是此节点的\ :ref:`Transform<class_Transform>`\ ，第二个是此节点的根\ :ref:`Mesh<class_Mesh>`\ 。仅当此节点为根形时才有效。

----

.. _class_CSGShape_method_is_root_shape:

- :ref:`bool<class_bool>` **is_root_shape** **(** **)** |const|

如果这是根形状，因此是渲染的对象，则返回\ ``true``\ 。

----

.. _class_CSGShape_method_set_collision_layer_bit:

- void **set_collision_layer_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

设置图层掩码上的各个位。如果只需要更改一层的值，请使用此选项。

----

.. _class_CSGShape_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

设置碰撞掩码上的各个位。如果只需要更改一层的值，请使用此选项。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
