:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the File.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_File:

File
====

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

用于处理文件读写操作的类型。

描述
----

File type. This is used to permanently store data into the user device's file system and to read from it. This can be used to store game save data or player configuration files, for example.

Here's a sample on how to write and read from a file:

::

    func save(content):
        var file = File.new()
        file.open("user://save_game.dat", File.WRITE)
        file.store_string(content)
        file.close()
    
    func load():
        var file = File.new()
        file.open("user://save_game.dat", File.READ)
        var content = file.get_as_text()
        file.close()
        return content

In the example above, the file will be saved in the user data folder as specified in the :doc:`Data paths <../tutorials/io/data_paths>` documentation.

\ **Note:** To access project resources once exported, it is recommended to use :ref:`ResourceLoader<class_ResourceLoader>` instead of the ``File`` API, as some files are converted to engine-specific formats and their original source files might not be present in the exported PCK package.

\ **Note:** Files are automatically closed only if the process exits "normally" (such as by clicking the window manager's close button or pressing **Alt + F4**). If you stop the project execution by pressing **F8** while the project is running, the file won't be closed as the game process will be killed. You can work around this by calling :ref:`flush<class_File_method_flush>` at regular intervals.

教程
----

- :doc:`File system <../tutorials/scripting/filesystem>`

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

属性
----

+-------------------------+-----------------------------------------------------+-----------+
| :ref:`bool<class_bool>` | :ref:`endian_swap<class_File_property_endian_swap>` | ``false`` |
+-------------------------+-----------------------------------------------------+-----------+

方法
----

+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`close<class_File_method_close>` **(** **)**                                                                                                                                                                              |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`eof_reached<class_File_method_eof_reached>` **(** **)** |const|                                                                                                                                                          |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`file_exists<class_File_method_file_exists>` **(** :ref:`String<class_String>` path **)** |const|                                                                                                                         |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`flush<class_File_method_flush>` **(** **)**                                                                                                                                                                              |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_16<class_File_method_get_16>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_32<class_File_method_get_32>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_64<class_File_method_get_64>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_8<class_File_method_get_8>` **(** **)** |const|                                                                                                                                                                      |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_as_text<class_File_method_get_as_text>` **(** **)** |const|                                                                                                                                                          |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolByteArray<class_PoolByteArray>`     | :ref:`get_buffer<class_File_method_get_buffer>` **(** :ref:`int<class_int>` len **)** |const|                                                                                                                                  |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_csv_line<class_File_method_get_csv_line>` **(** :ref:`String<class_String>` delim="," **)** |const|                                                                                                                  |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_double<class_File_method_get_double>` **(** **)** |const|                                                                                                                                                            |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`get_error<class_File_method_get_error>` **(** **)** |const|                                                                                                                                                              |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_float<class_File_method_get_float>` **(** **)** |const|                                                                                                                                                              |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_len<class_File_method_get_len>` **(** **)** |const|                                                                                                                                                                  |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_line<class_File_method_get_line>` **(** **)** |const|                                                                                                                                                                |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_md5<class_File_method_get_md5>` **(** :ref:`String<class_String>` path **)** |const|                                                                                                                                 |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_modified_time<class_File_method_get_modified_time>` **(** :ref:`String<class_String>` file **)** |const|                                                                                                             |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_pascal_string<class_File_method_get_pascal_string>` **(** **)**                                                                                                                                                      |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_path<class_File_method_get_path>` **(** **)** |const|                                                                                                                                                                |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_path_absolute<class_File_method_get_path_absolute>` **(** **)** |const|                                                                                                                                              |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_position<class_File_method_get_position>` **(** **)** |const|                                                                                                                                                        |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_real<class_File_method_get_real>` **(** **)** |const|                                                                                                                                                                |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_sha256<class_File_method_get_sha256>` **(** :ref:`String<class_String>` path **)** |const|                                                                                                                           |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                 | :ref:`get_var<class_File_method_get_var>` **(** :ref:`bool<class_bool>` allow_objects=false **)** |const|                                                                                                                      |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_open<class_File_method_is_open>` **(** **)** |const|                                                                                                                                                                  |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`open<class_File_method_open>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` flags **)**                                                                                                  |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`open_compressed<class_File_method_open_compressed>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`CompressionMode<enum_File_CompressionMode>` compression_mode=0 **)** |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`open_encrypted<class_File_method_open_encrypted>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`PoolByteArray<class_PoolByteArray>` key **)**                          |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`open_encrypted_with_pass<class_File_method_open_encrypted_with_pass>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`String<class_String>` pass **)**                   |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`seek<class_File_method_seek>` **(** :ref:`int<class_int>` position **)**                                                                                                                                                 |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`seek_end<class_File_method_seek_end>` **(** :ref:`int<class_int>` position=0 **)**                                                                                                                                       |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_16<class_File_method_store_16>` **(** :ref:`int<class_int>` value **)**                                                                                                                                            |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_32<class_File_method_store_32>` **(** :ref:`int<class_int>` value **)**                                                                                                                                            |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_64<class_File_method_store_64>` **(** :ref:`int<class_int>` value **)**                                                                                                                                            |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_8<class_File_method_store_8>` **(** :ref:`int<class_int>` value **)**                                                                                                                                              |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_buffer<class_File_method_store_buffer>` **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**                                                                                                               |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_csv_line<class_File_method_store_csv_line>` **(** :ref:`PoolStringArray<class_PoolStringArray>` values, :ref:`String<class_String>` delim="," **)**                                                                |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_double<class_File_method_store_double>` **(** :ref:`float<class_float>` value **)**                                                                                                                                |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_float<class_File_method_store_float>` **(** :ref:`float<class_float>` value **)**                                                                                                                                  |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_line<class_File_method_store_line>` **(** :ref:`String<class_String>` line **)**                                                                                                                                   |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_pascal_string<class_File_method_store_pascal_string>` **(** :ref:`String<class_String>` string **)**                                                                                                               |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_real<class_File_method_store_real>` **(** :ref:`float<class_float>` value **)**                                                                                                                                    |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_string<class_File_method_store_string>` **(** :ref:`String<class_String>` string **)**                                                                                                                             |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`store_var<class_File_method_store_var>` **(** :ref:`Variant<class_Variant>` value, :ref:`bool<class_bool>` full_objects=false **)**                                                                                      |
+-----------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_File_ModeFlags:

.. _class_File_constant_READ:

.. _class_File_constant_WRITE:

.. _class_File_constant_READ_WRITE:

.. _class_File_constant_WRITE_READ:

enum **ModeFlags**:

- **READ** = **1** --- 打开文件进行读取操作。光标位于文件的开头。

- **WRITE** = **2** --- 打开文件进行写操作。如果文件不存在，则创建该文件，如果存在则截断。

- **READ_WRITE** = **3** --- 打开文件用于读写操作。不截断文件。光标位于文件的开头。

- **WRITE_READ** = **7** --- 打开文件进行读写操作。如果文件不存在，则创建该文件，如果存在则截断。光标位于文件的开头。

----

.. _enum_File_CompressionMode:

.. _class_File_constant_COMPRESSION_FASTLZ:

.. _class_File_constant_COMPRESSION_DEFLATE:

.. _class_File_constant_COMPRESSION_ZSTD:

.. _class_File_constant_COMPRESSION_GZIP:

enum **CompressionMode**:

- **COMPRESSION_FASTLZ** = **0** --- 使用 `FastLZ <http://fastlz.org/>`__ 压缩方法。

- **COMPRESSION_DEFLATE** = **1** --- 使用 `DEFLATE <https://en.wikipedia.org/wiki/DEFLATE>`__ 压缩方法。

- **COMPRESSION_ZSTD** = **2** --- 使用 `Zstandard <https://facebook.github.io/zstd/>`__ 压缩方法。

- **COMPRESSION_GZIP** = **3** --- 使用 `gzip <https://www.gzip.org/>`__ 压缩方法。

属性说明
--------

.. _class_File_property_endian_swap:

- :ref:`bool<class_bool>` **endian_swap**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_endian_swap(value) |
+-----------+------------------------+
| *Getter*  | get_endian_swap()      |
+-----------+------------------------+

为 ``true`` 时文件以大端\ `字节序 <https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F>`__\ 读取。为 ``false`` 时文件以小端字节序读取。如果不确定，请将其保留为 ``false``\ ，因为大多数文件都是以小端字节序编写的。

\ **注意：**\ :ref:`endian_swap<class_File_property_endian_swap>` 只是文件格式，与 CPU 类型无关。 CPU 字节序不会影响写入文件的默认字节序。

\ **注意：**\ 每当您打开文件时，它总是重置为 ``false``\ 。因此，必须在\ *打开文件之后*\ 设置 :ref:`endian_swap<class_File_property_endian_swap>`\ ，而不是之前。

方法说明
--------

.. _class_File_method_close:

- void **close** **(** **)**

关闭当前打开的文件，并阻止后续的读/写操作。使用 :ref:`flush<class_File_method_flush>` 将数据持久化到磁盘，而不关闭文件。

----

.. _class_File_method_eof_reached:

- :ref:`bool<class_bool>` **eof_reached** **(** **)** |const|

如果文件光标已经读到了文件的末端，返回 ``true``\ 。

\ **注意：**\ ``eof_reached() == false`` 不能用来检查是否有更多的数据可用。要在有更多数据可用时进行循环，请使用：

::

    while file.get_position() < file.get_len():
        # 读取数据

----

.. _class_File_method_file_exists:

- :ref:`bool<class_bool>` **file_exists** **(** :ref:`String<class_String>` path **)** |const|

如果文件存在于给定的路径中，返回 ``true``\ 。

\ **注意：**\ 许多资源类型导入后，例如纹理或声音文件，其源资产不会包含在导出的游戏中，因为只使用导入的版本。有关考虑资源重新映射的替代方法，请参阅 :ref:`ResourceLoader.exists<class_ResourceLoader_method_exists>`\ 。

----

.. _class_File_method_flush:

- void **flush** **(** **)**

将文件的缓冲区写入磁盘。关闭文件时会自动执行刷新。这意味着您不需要在使用 :ref:`close<class_File_method_close>` 关闭文件之前手动调用 :ref:`flush<class_File_method_flush>`\ 。尽管如此，即使项目崩溃而不是正常关闭，调用 :ref:`flush<class_File_method_flush>` 仍可用于确保数据安全。

\ **注意：**\ 只有在你真正需要的时候才调用 :ref:`flush<class_File_method_flush>`\ 。否则，它会由于不断的磁盘写入而降低性能。

----

.. _class_File_method_get_16:

- :ref:`int<class_int>` **get_16** **(** **)** |const|

以整数形式返回文件中接下来的 16 位。请参阅 :ref:`store_16<class_File_method_store_16>`\ ，以获取有关可以通过这种方式存储和检索哪些值的详细信息。

----

.. _class_File_method_get_32:

- :ref:`int<class_int>` **get_32** **(** **)** |const|

以整数形式返回文件中接下来的 32 位。请参阅\ :ref:`store_32<class_File_method_store_32>`\ ，以获取有关可以通过这种方式存储和检索哪些值的详细信息。

----

.. _class_File_method_get_64:

- :ref:`int<class_int>` **get_64** **(** **)** |const|

以整数形式返回文件中接下来的 64 位。请参阅 :ref:`store_64<class_File_method_store_64>`\ ，以获取有关可以通过这种方式存储和检索哪些值的详细信息。

----

.. _class_File_method_get_8:

- :ref:`int<class_int>` **get_8** **(** **)** |const|

以整数形式返回文件中接下来的 8 位。请参阅 :ref:`store_8<class_File_method_store_8>`\ ，详细了解哪些值可以通过这种方式存储和检索。

----

.. _class_File_method_get_as_text:

- :ref:`String<class_String>` **get_as_text** **(** **)** |const|

将整个文件作为 :ref:`String<class_String>` 字符串返回。

将按照 UTF-8 编码解析文本。

----

.. _class_File_method_get_buffer:

- :ref:`PoolByteArray<class_PoolByteArray>` **get_buffer** **(** :ref:`int<class_int>` len **)** |const|

将文件中接下来的 ``len`` 个字节作为 :ref:`PoolByteArray<class_PoolByteArray>` 返回。

----

.. _class_File_method_get_csv_line:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_csv_line** **(** :ref:`String<class_String>` delim="," **)** |const|

以 CSV（逗号分隔值）格式返回文件的下一个值。您可以传递不同的分隔符 ``delim`` 以使用默认 ``","``\ （逗号）以外的其他分隔符。此分隔符必须为一个字符长，并且不能是双引号。

将按照 UTF-8 编码解析文本。如果文本值包含分隔符，则必须用双引号括起来。文本值中的双引号可以通过将它们的出现次数加倍来转义。

例如，以下 CSV 行是有效的，每行将被正确解析为两个字符串：

::

    Alice,"Hello, Bob!"
    Bob,Alice! What a surprise!
    Alice,"I thought you'd reply with ""Hello, world""."

请注意第二行如何省略封闭引号，因为它不包含分隔符。然而它\ *可以*\ 很好地使用引号，它只是为了演示目的而没有编写。第三行必须使用 ``""`` 来表示每个需要被解释为引号的引号，而不是文本值的结束。

----

.. _class_File_method_get_double:

- :ref:`float<class_float>` **get_double** **(** **)** |const|

将文件中接下来的 64 位作为浮点数返回。

----

.. _class_File_method_get_error:

- :ref:`Error<enum_@GlobalScope_Error>` **get_error** **(** **)** |const|

返回试图执行操作时发生的最后一个错误。请与 :ref:`Error<enum_@GlobalScope_Error>` 中的 ``ERR_FILE_*`` 常量比较。

----

.. _class_File_method_get_float:

- :ref:`float<class_float>` **get_float** **(** **)** |const|

将文件中接下来的 32 位作为浮点数返回。

----

.. _class_File_method_get_len:

- :ref:`int<class_int>` **get_len** **(** **)** |const|

返回该文件的大小，单位为字节。

----

.. _class_File_method_get_line:

- :ref:`String<class_String>` **get_line** **(** **)** |const|

将文件中的下一行作为 :ref:`String<class_String>` 字符串返回。

将按照 UTF-8 编码解析文本。

----

.. _class_File_method_get_md5:

- :ref:`String<class_String>` **get_md5** **(** :ref:`String<class_String>` path **)** |const|

返回一个给定路径文件的MD5字符串，如果失败则返回一个空的\ :ref:`String<class_String>`\ 。

----

.. _class_File_method_get_modified_time:

- :ref:`int<class_int>` **get_modified_time** **(** :ref:`String<class_String>` file **)** |const|

返回unix格式的时间戳\ ``file``\ 为文件的最后修改时间，或者返回一个\ :ref:`String<class_String>`"ERROR IN ``file``"。这个unix时间戳可以通过使用\ :ref:`OS.get_datetime_from_unix_time<class_OS_method_get_datetime_from_unix_time>`\ 转换为数据时间。

----

.. _class_File_method_get_pascal_string:

- :ref:`String<class_String>` **get_pascal_string** **(** **)**

返回文件中按照 Pascal 格式保存的 :ref:`String<class_String>` 字符串。

将按照 UTF-8 编码解析文本。

----

.. _class_File_method_get_path:

- :ref:`String<class_String>` **get_path** **(** **)** |const|

返回当前打开的文件的路径为\ :ref:`String<class_String>`\ 。

----

.. _class_File_method_get_path_absolute:

- :ref:`String<class_String>` **get_path_absolute** **(** **)** |const|

返回当前打开的文件的绝对路径为\ :ref:`String<class_String>`\ 。

----

.. _class_File_method_get_position:

- :ref:`int<class_int>` **get_position** **(** **)** |const|

返回文件光标的位置。

----

.. _class_File_method_get_real:

- :ref:`float<class_float>` **get_real** **(** **)** |const|

将文件中接下来的若干位以浮点数形式返回。

----

.. _class_File_method_get_sha256:

- :ref:`String<class_String>` **get_sha256** **(** :ref:`String<class_String>` path **)** |const|

返回一个给定路径的文件的 SHA-256 字符串，如果失败则返回一个空的 :ref:`String<class_String>`\ 。

----

.. _class_File_method_get_var:

- :ref:`Variant<class_Variant>` **get_var** **(** :ref:`bool<class_bool>` allow_objects=false **)** |const|

返回文件中的下一个 :ref:`Variant<class_Variant>` 值。\ ``allow_objects`` 为 ``true`` 时允许对对象进行解码。

\ **警告：**\ 反序列化得到的对象可能包含被执行的代码。如果序列化的对象来自不受信任的来源，请不要使用这个选项，以避免潜在的安全威胁，如远程代码执行。

----

.. _class_File_method_is_open:

- :ref:`bool<class_bool>` **is_open** **(** **)** |const|

如果文件当前被打开，返回\ ``true``\ 。

----

.. _class_File_method_open:

- :ref:`Error<enum_@GlobalScope_Error>` **open** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` flags **)**

打开文件进行写入或读取，取决于标志。

----

.. _class_File_method_open_compressed:

- :ref:`Error<enum_@GlobalScope_Error>` **open_compressed** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`CompressionMode<enum_File_CompressionMode>` compression_mode=0 **)**

打开压缩文件进行读取或写入。

\ **注意：** :ref:`open_compressed<class_File_method_open_compressed>` 只能读取GaaeExplorer保存的文件，不能读取第三方压缩格式。有关解决方法，请参阅 ` GitHub 问题 #28999 <https://github.com/godotengine/godot/issues/28999>`__\ 。

----

.. _class_File_method_open_encrypted:

- :ref:`Error<enum_@GlobalScope_Error>` **open_encrypted** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`PoolByteArray<class_PoolByteArray>` key **)**

以写或读的模式打开一个加密文件。你需要传递一个二进制密钥来加密/解密它。

\ **注意：** 提供的密钥必须是32字节长。

----

.. _class_File_method_open_encrypted_with_pass:

- :ref:`Error<enum_@GlobalScope_Error>` **open_encrypted_with_pass** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`String<class_String>` pass **)**

以写或读的方式打开一个加密的文件。你需要传递一个密码来加密/解密它。

----

.. _class_File_method_seek:

- void **seek** **(** :ref:`int<class_int>` position **)**

将文件的读/写光标改变到指定的位置（从文件开始的字节数）。

----

.. _class_File_method_seek_end:

- void **seek_end** **(** :ref:`int<class_int>` position=0 **)**

将文件的读/写光标改变到指定的位置（从文件的末端算起，以字节为单位）。

\ **注意：**\ 这是一个偏移量，所以你应该使用负数，否则光标会在文件的末端。

----

.. _class_File_method_store_16:

- void **store_16** **(** :ref:`int<class_int>` value **)**

将一个整数以 16 位形式存储在文件中。

\ **注意：**\ ``value`` 应该位于 ``[0, 2^16 - 1]`` 区间内。任何其他的值都会溢出并进行环绕。

要存储有符号的整数，请使用 :ref:`store_64<class_File_method_store_64>` 或者从区间 ``[-2^15, 2^15 - 1]`` 中存储一个有符号的整数（即保留一位作为有符号），在读取时手动计算其符号。比如说

::

    const MAX_15B = 1 << 15
    const MAX_16B = 1 << 16
    
    func unsigned16_to_signed(unsigned):
        return (unsigned + MAX_15B) % MAX_16B - MAX_15B
    
    func _ready():
        var f = File.new()
        f.open("user://file.dat", File.WRITE_READ)
        f.store_16(-42) # 会进行环绕，保存的是 65494 (2^16 - 42)。
        f.store_16(121) # 在范围内，会保存 121。
        f.seek(0) # 返回开头读取保存的值。
        var read1 = f.get_16() # 65494
        var read2 = f.get_16() # 121
        var converted1 = unsigned16_to_signed(read1) # -42
        var converted2 = unsigned16_to_signed(read2) # 121

----

.. _class_File_method_store_32:

- void **store_32** **(** :ref:`int<class_int>` value **)**

将一个整数以 32 位形式存储在文件中。

\ **注意：**\ ``value`` 应该位于 ``[0, 2^32 - 1]`` 区间内。任何其他的值都会溢出并环绕。

要存储有符号的整数，请使用 :ref:`store_64<class_File_method_store_64>`\ ，或者手动转换（见 :ref:`store_16<class_File_method_store_16>` 的例子）。

----

.. _class_File_method_store_64:

- void **store_64** **(** :ref:`int<class_int>` value **)**

将一个整数以 64 位形式存储在文件中。

\ **注意：**\ ``value`` 必须位于 ``[-2^63, 2^63 - 1]`` 的区间内（即有效的 :ref:`int<class_int>` 值）。

----

.. _class_File_method_store_8:

- void **store_8** **(** :ref:`int<class_int>` value **)**

将一个整数以 8 位形式存储在文件中。

\ **注意：**\ ``value`` 应该位于 ``[0, 255]`` 的区间内。任何其他的值都会溢出并环绕。

要存储有符号的整数，请使用 :ref:`store_64<class_File_method_store_64>`\ ，或者手动转换（见 :ref:`store_16<class_File_method_store_16>` 的例子）。

----

.. _class_File_method_store_buffer:

- void **store_buffer** **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**

在文件中存储给定的字节数组。

----

.. _class_File_method_store_csv_line:

- void **store_csv_line** **(** :ref:`PoolStringArray<class_PoolStringArray>` values, :ref:`String<class_String>` delim="," **)**

将给定的 :ref:`PoolStringArray<class_PoolStringArray>` 作为 CSV（逗号分隔值）格式的行存储在文件中。您可以传递不同的分隔符 ``delim`` 以使用默认 ``","``\ （逗号）以外的其他分隔符。此分隔符的长度必须为一个字符。

将使用 UTF-8 编码文本。

----

.. _class_File_method_store_double:

- void **store_double** **(** :ref:`float<class_float>` value **)**

将一个浮点数以 64 位形式存储在文件中。

----

.. _class_File_method_store_float:

- void **store_float** **(** :ref:`float<class_float>` value **)**

将一个浮点数以 32 位形式存储在文件中。

----

.. _class_File_method_store_line:

- void **store_line** **(** :ref:`String<class_String>` line **)**

Appends ``line`` to the file followed by a line return character (``\n``), encoding the text as UTF-8.

----

.. _class_File_method_store_pascal_string:

- void **store_pascal_string** **(** :ref:`String<class_String>` string **)**

将给定的\ :ref:`String<class_String>`\ 以Pascal格式存储在文件中（例如，也将字符串长度存储）。

文本将被编码为UTF-8。

----

.. _class_File_method_store_real:

- void **store_real** **(** :ref:`float<class_float>` value **)**

将浮点数存储在文件中。

----

.. _class_File_method_store_string:

- void **store_string** **(** :ref:`String<class_String>` string **)**

将 ``string`` 字符串追加到文件中，不带换行，文本将被编码为 UTF-8。

\ **注意：**\ 本方法是为写入文本文件准备的。字符串会被存储为 UTF-8 编码的缓冲区，不带字符串长度或末尾零，所以无法轻易读回。如果你想要在二进制文件中存储可取回的字符串，请考虑换用 :ref:`store_pascal_string<class_File_method_store_pascal_string>`\ 。要从文本文件中获取字符串，你可以使用 ``get_buffer(length).get_string_from_utf8()``\ （需要已知长度）或 :ref:`get_as_text<class_File_method_get_as_text>`\ 。

----

.. _class_File_method_store_var:

- void **store_var** **(** :ref:`Variant<class_Variant>` value, :ref:`bool<class_bool>` full_objects=false **)**

在文件中存储任何 Variant 变量值。如果 ``full_objects`` 是 ``true``\ ，则允许编码对象（并且可能包含代码）。

\ **注意：** 并非所有属性都包括在内。只有使用 :ref:`@GlobalScope.PROPERTY_USAGE_STORAGE<class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE>` 标志集配置的属性才会被序列化。您可以通过覆盖类中的 :ref:`Object._get_property_list<class_Object_method__get_property_list>` 方法向属性添加新的使用标志。您还可以通过调用 :ref:`Object._get_property_list<class_Object_method__get_property_list>` 来检查属性使用是如何配置的。有关可能的使用标志，请参阅 :ref:`PropertyUsageFlags<enum_@GlobalScope_PropertyUsageFlags>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
