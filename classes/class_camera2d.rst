:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Camera2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Camera2D:

Camera2D
========

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

二维场景的相机节点。

描述
----

用于 2D 场景的相机节点。它强制屏幕（当前层）跟随该节点滚动。与手动改变基于 :ref:`CanvasItem<class_CanvasItem>` 节点的坐标相比，这使得对可滚动场景进行编程更加容易和快捷。

这个节点旨在成为简单的辅助工具，让事情便捷，但可能需要更多的功能来改变相机的工作方式。要制作自定义相机节点，则从 :ref:`Node2D<class_Node2D>` 继承，并通过设置 :ref:`Viewport<class_Viewport>` 中的 :ref:`Viewport.canvas_transform<class_Viewport_property_canvas_transform>` 来改变画布的变换（你可以通过使用 :ref:`Node.get_viewport<class_Node_method_get_viewport>` 获得当前的 :ref:`Viewport<class_Viewport>`\ ）。

请注意，\ ``Camera2D`` 节点的 ``position`` 并不代表屏幕的实际坐标，它可能会因为应用的平滑或限制而有所不同。你可以使用 :ref:`get_camera_screen_center<class_Camera2D_method_get_camera_screen_center>` 来获取实际坐标。

教程
----

- `2D Platformer Demo <https://godotengine.org/asset-library/asset/120>`__

- `2D Isometric Demo <https://godotengine.org/asset-library/asset/112>`__

- `2D HDR Demo <https://godotengine.org/asset-library/asset/110>`__

属性
----

+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`AnchorMode<enum_Camera2D_AnchorMode>`                   | :ref:`anchor_mode<class_Camera2D_property_anchor_mode>`                         | ``1``               |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`current<class_Camera2D_property_current>`                                 | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`Node<class_Node>`                                       | :ref:`custom_viewport<class_Camera2D_property_custom_viewport>`                 |                     |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`drag_margin_bottom<class_Camera2D_property_drag_margin_bottom>`           | ``0.2``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`drag_margin_h_enabled<class_Camera2D_property_drag_margin_h_enabled>`     | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`drag_margin_left<class_Camera2D_property_drag_margin_left>`               | ``0.2``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`drag_margin_right<class_Camera2D_property_drag_margin_right>`             | ``0.2``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`drag_margin_top<class_Camera2D_property_drag_margin_top>`                 | ``0.2``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`drag_margin_v_enabled<class_Camera2D_property_drag_margin_v_enabled>`     | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`editor_draw_drag_margin<class_Camera2D_property_editor_draw_drag_margin>` | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`editor_draw_limits<class_Camera2D_property_editor_draw_limits>`           | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`editor_draw_screen<class_Camera2D_property_editor_draw_screen>`           | ``true``            |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                                         | :ref:`limit_bottom<class_Camera2D_property_limit_bottom>`                       | ``10000000``        |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                                         | :ref:`limit_left<class_Camera2D_property_limit_left>`                           | ``-10000000``       |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                                         | :ref:`limit_right<class_Camera2D_property_limit_right>`                         | ``10000000``        |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`limit_smoothed<class_Camera2D_property_limit_smoothed>`                   | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                                         | :ref:`limit_top<class_Camera2D_property_limit_top>`                             | ``-10000000``       |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                                 | :ref:`offset<class_Camera2D_property_offset>`                                   | ``Vector2( 0, 0 )`` |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`offset_h<class_Camera2D_property_offset_h>`                               | ``0.0``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`offset_v<class_Camera2D_property_offset_v>`                               | ``0.0``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`Camera2DProcessMode<enum_Camera2D_Camera2DProcessMode>` | :ref:`process_mode<class_Camera2D_property_process_mode>`                       | ``1``               |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`rotating<class_Camera2D_property_rotating>`                               | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                                       | :ref:`smoothing_enabled<class_Camera2D_property_smoothing_enabled>`             | ``false``           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`                                     | :ref:`smoothing_speed<class_Camera2D_property_smoothing_speed>`                 | ``5.0``             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                                 | :ref:`zoom<class_Camera2D_property_zoom>`                                       | ``Vector2( 1, 1 )`` |
+---------------------------------------------------------------+---------------------------------------------------------------------------------+---------------------+

方法
----

+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`align<class_Camera2D_method_align>` **(** **)**                                                                                                           |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear_current<class_Camera2D_method_clear_current>` **(** **)**                                                                                           |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`force_update_scroll<class_Camera2D_method_force_update_scroll>` **(** **)**                                                                               |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_camera_position<class_Camera2D_method_get_camera_position>` **(** **)** |const|                                                                       |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_camera_screen_center<class_Camera2D_method_get_camera_screen_center>` **(** **)** |const|                                                             |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`get_drag_margin<class_Camera2D_method_get_drag_margin>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|                                |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_limit<class_Camera2D_method_get_limit>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|                                            |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`make_current<class_Camera2D_method_make_current>` **(** **)**                                                                                             |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`reset_smoothing<class_Camera2D_method_reset_smoothing>` **(** **)**                                                                                       |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_drag_margin<class_Camera2D_method_set_drag_margin>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`float<class_float>` drag_margin **)** |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_limit<class_Camera2D_method_set_limit>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`int<class_int>` limit **)**                       |
+-------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_Camera2D_AnchorMode:

.. _class_Camera2D_constant_ANCHOR_MODE_FIXED_TOP_LEFT:

.. _class_Camera2D_constant_ANCHOR_MODE_DRAG_CENTER:

enum **AnchorMode**:

- **ANCHOR_MODE_FIXED_TOP_LEFT** = **0** --- 相机的位置是固定的，所以左上角总是在原点。

- **ANCHOR_MODE_DRAG_CENTER** = **1** --- 相机的位置要考虑垂直/水平偏移和屏幕尺寸。

----

.. _enum_Camera2D_Camera2DProcessMode:

.. _class_Camera2D_constant_CAMERA2D_PROCESS_PHYSICS:

.. _class_Camera2D_constant_CAMERA2D_PROCESS_IDLE:

enum **Camera2DProcessMode**:

- **CAMERA2D_PROCESS_PHYSICS** = **0** --- 相机通过 ``_physics_process`` 回调进行更新。

- **CAMERA2D_PROCESS_IDLE** = **1** --- 相机通过 ``_process`` 回调进行更新。

属性说明
--------

.. _class_Camera2D_property_anchor_mode:

- :ref:`AnchorMode<enum_Camera2D_AnchorMode>` **anchor_mode**

+-----------+------------------------+
| *Default* | ``1``                  |
+-----------+------------------------+
| *Setter*  | set_anchor_mode(value) |
+-----------+------------------------+
| *Getter*  | get_anchor_mode()      |
+-----------+------------------------+

Camera2D的锚点。参阅\ :ref:`AnchorMode<enum_Camera2D_AnchorMode>`\ 常量。

----

.. _class_Camera2D_property_current:

- :ref:`bool<class_bool>` **current**

+-----------+--------------+
| *Default* | ``false``    |
+-----------+--------------+
| *Getter*  | is_current() |
+-----------+--------------+

如果 ``true``\ ，相机是当前场景的活动相机。当前只能有一台相机，所以设置不同的相机\ ``current``\ 将禁用这台相机。

----

.. _class_Camera2D_property_custom_viewport:

- :ref:`Node<class_Node>` **custom_viewport**

+----------+----------------------------+
| *Setter* | set_custom_viewport(value) |
+----------+----------------------------+
| *Getter* | get_custom_viewport()      |
+----------+----------------------------+

连接到\ ``Camera2D``\ 的自定义\ :ref:`Viewport<class_Viewport>`\ 节点。如果\ ``null``\ 或不是\ :ref:`Viewport<class_Viewport>`\ ，则使用默认的 Viewpor。

----

.. _class_Camera2D_property_drag_margin_bottom:

- :ref:`float<class_float>` **drag_margin_bottom**

+-----------+------------------------+
| *Default* | ``0.2``                |
+-----------+------------------------+
| *Setter*  | set_drag_margin(value) |
+-----------+------------------------+
| *Getter*  | get_drag_margin()      |
+-----------+------------------------+

拖动相机所需的底边距。值为\ ``1``\ 时，相机仅在到达屏幕边缘时才会移动。

----

.. _class_Camera2D_property_drag_margin_h_enabled:

- :ref:`bool<class_bool>` **drag_margin_h_enabled**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_h_drag_enabled(value) |
+-----------+---------------------------+
| *Getter*  | is_h_drag_enabled()       |
+-----------+---------------------------+

如果 ``true``\ ，相机仅在达到水平拖动边距时才移动。如果\ ``false``\ ，相机会水平移动而不管边距。

----

.. _class_Camera2D_property_drag_margin_left:

- :ref:`float<class_float>` **drag_margin_left**

+-----------+------------------------+
| *Default* | ``0.2``                |
+-----------+------------------------+
| *Setter*  | set_drag_margin(value) |
+-----------+------------------------+
| *Getter*  | get_drag_margin()      |
+-----------+------------------------+

拖动相机所需的左边缘。值为\ ``1``\ 时，相机仅在到达屏幕边缘时才会移动。

----

.. _class_Camera2D_property_drag_margin_right:

- :ref:`float<class_float>` **drag_margin_right**

+-----------+------------------------+
| *Default* | ``0.2``                |
+-----------+------------------------+
| *Setter*  | set_drag_margin(value) |
+-----------+------------------------+
| *Getter*  | get_drag_margin()      |
+-----------+------------------------+

拖动相机所需的右边缘。值为\ ``1``\ 时，相机仅在到达屏幕边缘时才会移动。

----

.. _class_Camera2D_property_drag_margin_top:

- :ref:`float<class_float>` **drag_margin_top**

+-----------+------------------------+
| *Default* | ``0.2``                |
+-----------+------------------------+
| *Setter*  | set_drag_margin(value) |
+-----------+------------------------+
| *Getter*  | get_drag_margin()      |
+-----------+------------------------+

拖动相机所需的上边距。值为\ ``1``\ 时，相机仅在到达屏幕边缘时才会移动。

----

.. _class_Camera2D_property_drag_margin_v_enabled:

- :ref:`bool<class_bool>` **drag_margin_v_enabled**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_v_drag_enabled(value) |
+-----------+---------------------------+
| *Getter*  | is_v_drag_enabled()       |
+-----------+---------------------------+

如果 ``true``\ ，相机仅在达到垂直拖动边距时才移动。如果\ ``false``\ ，相机会垂直移动而不管边距。

----

.. _class_Camera2D_property_editor_draw_drag_margin:

- :ref:`bool<class_bool>` **editor_draw_drag_margin**

+-----------+-----------------------------------+
| *Default* | ``false``                         |
+-----------+-----------------------------------+
| *Setter*  | set_margin_drawing_enabled(value) |
+-----------+-----------------------------------+
| *Getter*  | is_margin_drawing_enabled()       |
+-----------+-----------------------------------+

如果\ ``true``\ ，在编辑器中绘制相机的拖动边距矩形。

----

.. _class_Camera2D_property_editor_draw_limits:

- :ref:`bool<class_bool>` **editor_draw_limits**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_limit_drawing_enabled(value) |
+-----------+----------------------------------+
| *Getter*  | is_limit_drawing_enabled()       |
+-----------+----------------------------------+

如果\ ``true``\ ，在编辑器中绘制相机的极限矩形。

----

.. _class_Camera2D_property_editor_draw_screen:

- :ref:`bool<class_bool>` **editor_draw_screen**

+-----------+-----------------------------------+
| *Default* | ``true``                          |
+-----------+-----------------------------------+
| *Setter*  | set_screen_drawing_enabled(value) |
+-----------+-----------------------------------+
| *Getter*  | is_screen_drawing_enabled()       |
+-----------+-----------------------------------+

如果\ ``true``\ ，在编辑器中绘制相机的画面矩形。

----

.. _class_Camera2D_property_limit_bottom:

- :ref:`int<class_int>` **limit_bottom**

+-----------+------------------+
| *Default* | ``10000000``     |
+-----------+------------------+
| *Setter*  | set_limit(value) |
+-----------+------------------+
| *Getter*  | get_limit()      |
+-----------+------------------+

以像素为单位的底部滚动限制。当达到这个值时，相机停止移动。

----

.. _class_Camera2D_property_limit_left:

- :ref:`int<class_int>` **limit_left**

+-----------+------------------+
| *Default* | ``-10000000``    |
+-----------+------------------+
| *Setter*  | set_limit(value) |
+-----------+------------------+
| *Getter*  | get_limit()      |
+-----------+------------------+

以像素为单位的左滚动限制。当达到这个值时，相机停止移动。

----

.. _class_Camera2D_property_limit_right:

- :ref:`int<class_int>` **limit_right**

+-----------+------------------+
| *Default* | ``10000000``     |
+-----------+------------------+
| *Setter*  | set_limit(value) |
+-----------+------------------+
| *Getter*  | get_limit()      |
+-----------+------------------+

以像素为单位的右滚动限制。当达到这个值时，相机停止移动。

----

.. _class_Camera2D_property_limit_smoothed:

- :ref:`bool<class_bool>` **limit_smoothed**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_limit_smoothing_enabled(value) |
+-----------+------------------------------------+
| *Getter*  | is_limit_smoothing_enabled()       |
+-----------+------------------------------------+

If ``true``, the camera smoothly stops when reaches its limits.

This property has no effect if :ref:`smoothing_enabled<class_Camera2D_property_smoothing_enabled>` is ``false``.

\ **Note:** To immediately update the camera's position to be within limits without smoothing, even with this setting enabled, invoke :ref:`reset_smoothing<class_Camera2D_method_reset_smoothing>`.

----

.. _class_Camera2D_property_limit_top:

- :ref:`int<class_int>` **limit_top**

+-----------+------------------+
| *Default* | ``-10000000``    |
+-----------+------------------+
| *Setter*  | set_limit(value) |
+-----------+------------------+
| *Getter*  | get_limit()      |
+-----------+------------------+

以像素为单位的顶部滚动限制。达到此值时，相机停止移动。

----

.. _class_Camera2D_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

相机的偏移量，对于环顾四周或相机晃动动画非常有用。

----

.. _class_Camera2D_property_offset_h:

- :ref:`float<class_float>` **offset_h**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_h_offset(value) |
+-----------+---------------------+
| *Getter*  | get_h_offset()      |
+-----------+---------------------+

相机的水平偏移，相对于拖动边距。

\ **注：** 偏移量 H 仅用于强制执行相对于边距的偏移，如果启用拖动边距，它不会以任何方式更新，并可用于设置初始偏移量。如果启用了拖动边距，它不会以任何方式更新，可以用来设置初始偏移。

----

.. _class_Camera2D_property_offset_v:

- :ref:`float<class_float>` **offset_v**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_v_offset(value) |
+-----------+---------------------+
| *Getter*  | get_v_offset()      |
+-----------+---------------------+

相机相对于拖动边距的垂直偏移。

\ **注：** 与\ :ref:`offset_h<class_Camera2D_property_offset_h>`\ 使用相同。

----

.. _class_Camera2D_property_process_mode:

- :ref:`Camera2DProcessMode<enum_Camera2D_Camera2DProcessMode>` **process_mode**

+-----------+-------------------------+
| *Default* | ``1``                   |
+-----------+-------------------------+
| *Setter*  | set_process_mode(value) |
+-----------+-------------------------+
| *Getter*  | get_process_mode()      |
+-----------+-------------------------+

相机的过程回调。请参阅\ :ref:`Camera2DProcessMode<enum_Camera2D_Camera2DProcessMode>`\ 。

----

.. _class_Camera2D_property_rotating:

- :ref:`bool<class_bool>` **rotating**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_rotating(value) |
+-----------+---------------------+
| *Getter*  | is_rotating()       |
+-----------+---------------------+

If ``true``, the camera view rotates with the target.

----

.. _class_Camera2D_property_smoothing_enabled:

- :ref:`bool<class_bool>` **smoothing_enabled**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_enable_follow_smoothing(value) |
+-----------+------------------------------------+
| *Getter*  | is_follow_smoothing_enabled()      |
+-----------+------------------------------------+

如果\ ``true``\ ，相机以\ :ref:`smoothing_speed<class_Camera2D_property_smoothing_speed>`\ 的速度平滑地朝目标移动。

----

.. _class_Camera2D_property_smoothing_speed:

- :ref:`float<class_float>` **smoothing_speed**

+-----------+-----------------------------+
| *Default* | ``5.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_follow_smoothing(value) |
+-----------+-----------------------------+
| *Getter*  | get_follow_smoothing()      |
+-----------+-----------------------------+

当\ :ref:`smoothing_enabled<class_Camera2D_property_smoothing_enabled>`\ 为\ ``true``\ 时，相机平滑效果的速度，以每秒像素为单位。

----

.. _class_Camera2D_property_zoom:

- :ref:`Vector2<class_Vector2>` **zoom**

+-----------+---------------------+
| *Default* | ``Vector2( 1, 1 )`` |
+-----------+---------------------+
| *Setter*  | set_zoom(value)     |
+-----------+---------------------+
| *Getter*  | get_zoom()          |
+-----------+---------------------+

相机相对于视窗的缩放比例。大于\ ``Vector2（1，1）``\ 的值会缩小内容，而较小的值会起到放大镜的作用。例如，将\ ``Vector2（0.5，0.5）``\ 放大2倍，然后将\ ``Vector2（4，4）``\ 用于4倍缩小。

方法说明
--------

.. _class_Camera2D_method_align:

- void **align** **(** **)**

将相机与跟踪的节点对齐。

----

.. _class_Camera2D_method_clear_current:

- void **clear_current** **(** **)**

从父级\ :ref:`Viewport<class_Viewport>`\ 的内部当前分配的相机中删除任何\ ``Camera2D``\ 。

----

.. _class_Camera2D_method_force_update_scroll:

- void **force_update_scroll** **(** **)**

强制相机立即更新滚动。

----

.. _class_Camera2D_method_get_camera_position:

- :ref:`Vector2<class_Vector2>` **get_camera_position** **(** **)** |const|

Returns the camera's ``position`` (the tracked point the camera attempts to follow), relative to the origin.

\ **Note:** The returned value is not the same as :ref:`Node2D.position<class_Node2D_property_position>` or :ref:`Node2D.global_position<class_Node2D_property_global_position>`, as it is affected by the ``drag`` properties.

----

.. _class_Camera2D_method_get_camera_screen_center:

- :ref:`Vector2<class_Vector2>` **get_camera_screen_center** **(** **)** |const|

Returns the location of the ``Camera2D``'s screen-center, relative to the origin.

\ **Note:** The real ``position`` of the camera may be different, see :ref:`get_camera_position<class_Camera2D_method_get_camera_position>`.

----

.. _class_Camera2D_method_get_drag_margin:

- :ref:`float<class_float>` **get_drag_margin** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|

返回指定的边距。另请参阅\ :ref:`drag_margin_bottom<class_Camera2D_property_drag_margin_bottom>`\ ，\ :ref:`drag_margin_top<class_Camera2D_property_drag_margin_top>`\ ，\ :ref:`drag_margin_left<class_Camera2D_property_drag_margin_left>`\ 和\ :ref:`drag_margin_right<class_Camera2D_property_drag_margin_right>`\ 。

----

.. _class_Camera2D_method_get_limit:

- :ref:`int<class_int>` **get_limit** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|

返回指定的相机限制。请参阅 :ref:`limit_bottom<class_Camera2D_property_limit_bottom>`\ 、\ :ref:`limit_top<class_Camera2D_property_limit_top>`\ 、\ :ref:`limit_left<class_Camera2D_property_limit_left>`\ 和\ :ref:`limit_right<class_Camera2D_property_limit_right>`\ 。

----

.. _class_Camera2D_method_make_current:

- void **make_current** **(** **)**

使之成为场景（视窗和图层）的当前2D相机，以防场景中有很多相机。

----

.. _class_Camera2D_method_reset_smoothing:

- void **reset_smoothing** **(** **)**

Sets the camera's position immediately to its current smoothing destination.

This method has no effect if :ref:`smoothing_enabled<class_Camera2D_property_smoothing_enabled>` is ``false``.

----

.. _class_Camera2D_method_set_drag_margin:

- void **set_drag_margin** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`float<class_float>` drag_margin **)**

设置指定的边距。另请参阅 :ref:`drag_margin_bottom<class_Camera2D_property_drag_margin_bottom>`\ 、\ :ref:`drag_margin_top<class_Camera2D_property_drag_margin_top>`\ 、\ :ref:`drag_margin_left<class_Camera2D_property_drag_margin_left>`\ 和 :ref:`drag_margin_right<class_Camera2D_property_drag_margin_right>`\ 。

----

.. _class_Camera2D_method_set_limit:

- void **set_limit** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`int<class_int>` limit **)**

设置指定的相机限制。另请参阅 :ref:`limit_bottom<class_Camera2D_property_limit_bottom>`\ 、\ :ref:`limit_top<class_Camera2D_property_limit_top>`\ 、\ :ref:`limit_left<class_Camera2D_property_limit_left>`\ 和\ :ref:`limit_right<class_Camera2D_property_limit_right>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
