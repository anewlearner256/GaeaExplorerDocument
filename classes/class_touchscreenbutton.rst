:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TouchScreenButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TouchScreenButton:

TouchScreenButton
=================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

触摸屏设备的按钮，供游戏使用。

描述
----

TouchScreenButton允许你为触摸设备创建屏幕上的按钮。其为游戏使用，比如在必须触摸才能移动的设备。与\ :ref:`Button<class_Button>`\ 不同，TouchScreenButton原生支持多点触摸。几个TouchScreenButton可以通过触摸输入同时被按下。

这个节点继承自\ :ref:`Node2D<class_Node2D>`\ 。与\ :ref:`Control<class_Control>`\ 节点不同，你不能在它上面设置锚点。如果要创建菜单或用户界面，可用\ :ref:`Button<class_Button>`\ 节点代替。为了使按钮节点对触摸事件作出反应，可在项目设置中启用模拟鼠标选项。

可将TouchScreenButton配置为只在触摸设备上可见，有助你同时为桌面和移动设备开发游戏。

属性
----

+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`String<class_String>`                                  | :ref:`action<class_TouchScreenButton_property_action>`                   | ``""``    |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`BitMap<class_BitMap>`                                  | :ref:`bitmask<class_TouchScreenButton_property_bitmask>`                 |           |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                                | :ref:`normal<class_TouchScreenButton_property_normal>`                   |           |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                      | :ref:`passby_press<class_TouchScreenButton_property_passby_press>`       | ``false`` |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                                | :ref:`pressed<class_TouchScreenButton_property_pressed>`                 |           |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`Shape2D<class_Shape2D>`                                | :ref:`shape<class_TouchScreenButton_property_shape>`                     |           |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                      | :ref:`shape_centered<class_TouchScreenButton_property_shape_centered>`   | ``true``  |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                      | :ref:`shape_visible<class_TouchScreenButton_property_shape_visible>`     | ``true``  |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+
| :ref:`VisibilityMode<enum_TouchScreenButton_VisibilityMode>` | :ref:`visibility_mode<class_TouchScreenButton_property_visibility_mode>` | ``0``     |
+--------------------------------------------------------------+--------------------------------------------------------------------------+-----------+

方法
----

+-------------------------+----------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`is_pressed<class_TouchScreenButton_method_is_pressed>` **(** **)** |const| |
+-------------------------+----------------------------------------------------------------------------------+

信号
----

.. _class_TouchScreenButton_signal_pressed:

- **pressed** **(** **)**

当按钮被按下时触发，即向下。

----

.. _class_TouchScreenButton_signal_released:

- **released** **(** **)**

当按钮被释放时触发，即向上。

枚举
----

.. _enum_TouchScreenButton_VisibilityMode:

.. _class_TouchScreenButton_constant_VISIBILITY_ALWAYS:

.. _class_TouchScreenButton_constant_VISIBILITY_TOUCHSCREEN_ONLY:

enum **VisibilityMode**:

- **VISIBILITY_ALWAYS** = **0** --- 始终可见。

- **VISIBILITY_TOUCHSCREEN_ONLY** = **1** --- 仅在触摸屏上可以看到。

属性说明
--------

.. _class_TouchScreenButton_property_action:

- :ref:`String<class_String>` **action**

+-----------+-------------------+
| *Default* | ``""``            |
+-----------+-------------------+
| *Setter*  | set_action(value) |
+-----------+-------------------+
| *Getter*  | get_action()      |
+-----------+-------------------+

按钮的动作。动作可以用\ :ref:`InputEventAction<class_InputEventAction>`\ 来处理。

----

.. _class_TouchScreenButton_property_bitmask:

- :ref:`BitMap<class_BitMap>` **bitmask**

+----------+--------------------+
| *Setter* | set_bitmask(value) |
+----------+--------------------+
| *Getter* | get_bitmask()      |
+----------+--------------------+

按钮的bit位掩码。

----

.. _class_TouchScreenButton_property_normal:

- :ref:`Texture<class_Texture>` **normal**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

该按钮在正常状态下的纹理。

----

.. _class_TouchScreenButton_property_passby_press:

- :ref:`bool<class_bool>` **passby_press**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_passby_press(value)   |
+-----------+---------------------------+
| *Getter*  | is_passby_press_enabled() |
+-----------+---------------------------+

如果\ ``true``\ ，只要按下的手指进出按钮，就会发出 :ref:`pressed<class_TouchScreenButton_signal_pressed>` 和\ :ref:`released<class_TouchScreenButton_signal_released>` ]信号，即使压力开始于按钮的有效区域之外。

\ **注意：**\ 这是一种 "pass-by" 的按压模式 ，而不是 "bypass"。

----

.. _class_TouchScreenButton_property_pressed:

- :ref:`Texture<class_Texture>` **pressed**

+----------+----------------------------+
| *Setter* | set_texture_pressed(value) |
+----------+----------------------------+
| *Getter* | get_texture_pressed()      |
+----------+----------------------------+

按钮在被按下状态时的纹理。

----

.. _class_TouchScreenButton_property_shape:

- :ref:`Shape2D<class_Shape2D>` **shape**

+----------+------------------+
| *Setter* | set_shape(value) |
+----------+------------------+
| *Getter* | get_shape()      |
+----------+------------------+

该按钮的形状。

----

.. _class_TouchScreenButton_property_shape_centered:

- :ref:`bool<class_bool>` **shape_centered**

+-----------+---------------------------+
| *Default* | ``true``                  |
+-----------+---------------------------+
| *Setter*  | set_shape_centered(value) |
+-----------+---------------------------+
| *Getter*  | is_shape_centered()       |
+-----------+---------------------------+

如果\ ``true``\ ，按钮的形状会在提供的纹理中居中。如果没有使用纹理，这个属性就没有效果。

----

.. _class_TouchScreenButton_property_shape_visible:

- :ref:`bool<class_bool>` **shape_visible**

+-----------+--------------------------+
| *Default* | ``true``                 |
+-----------+--------------------------+
| *Setter*  | set_shape_visible(value) |
+-----------+--------------------------+
| *Getter*  | is_shape_visible()       |
+-----------+--------------------------+

如果\ ``true``\ ，按钮的形状是可见的。

----

.. _class_TouchScreenButton_property_visibility_mode:

- :ref:`VisibilityMode<enum_TouchScreenButton_VisibilityMode>` **visibility_mode**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_visibility_mode(value) |
+-----------+----------------------------+
| *Getter*  | get_visibility_mode()      |
+-----------+----------------------------+

按钮的可见性模式。有关可能的值，参阅\ :ref:`VisibilityMode<enum_TouchScreenButton_VisibilityMode>`\ 。

方法说明
--------

.. _class_TouchScreenButton_method_is_pressed:

- :ref:`bool<class_bool>` **is_pressed** **(** **)** |const|

如果这个按钮当前被按下，则返回\ ``true``\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
