:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TextureLayered.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureLayered:

TextureLayered
==============

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`Texture3D<class_Texture3D>`, :ref:`TextureArray<class_TextureArray>`

3D 纹理类型的基类。

描述
----

是 :ref:`Texture3D<class_Texture3D>` 和 :ref:`TextureArray<class_TextureArray>` 的基类。不能直接使用，但包含访问和使用 :ref:`Texture3D<class_Texture3D>` 和 :ref:`TextureArray<class_TextureArray>` 的所有必要功能。数据是以每层为单位设置的。对于 :ref:`Texture3D<class_Texture3D>`\ ，层指定了深度或 Z-index，它们可以被视为一堆二维切片。同样地，对于 :ref:`TextureArray<class_TextureArray>`\ ，层指定了数组层。

属性
----

+-------------------------------------+---------------------------------------------------+--------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>` | :ref:`data<class_TextureLayered_property_data>`   | ``{"depth": 0,"flags": 7,"format": 37,"height": 0,"layers": [  ],"width": 0}`` |
+-------------------------------------+---------------------------------------------------+--------------------------------------------------------------------------------+
| :ref:`int<class_int>`               | :ref:`flags<class_TextureLayered_property_flags>` | ``7``                                                                          |
+-------------------------------------+---------------------------------------------------+--------------------------------------------------------------------------------+

方法
----

+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_depth<class_TextureLayered_method_get_depth>` **(** **)** |const|                                                                                                                                                                    |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Format<enum_Image_Format>` | :ref:`get_format<class_TextureLayered_method_get_format>` **(** **)** |const|                                                                                                                                                                  |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_height<class_TextureLayered_method_get_height>` **(** **)** |const|                                                                                                                                                                  |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>`        | :ref:`get_layer_data<class_TextureLayered_method_get_layer_data>` **(** :ref:`int<class_int>` layer **)** |const|                                                                                                                              |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`            | :ref:`get_width<class_TextureLayered_method_get_width>` **(** **)** |const|                                                                                                                                                                    |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_data_partial<class_TextureLayered_method_set_data_partial>` **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` x_offset, :ref:`int<class_int>` y_offset, :ref:`int<class_int>` layer, :ref:`int<class_int>` mipmap=0 **)** |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                             | :ref:`set_layer_data<class_TextureLayered_method_set_layer_data>` **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` layer **)**                                                                                                     |
+----------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_TextureLayered_Flags:

.. _class_TextureLayered_constant_FLAGS_DEFAULT_TEXTURE_ARRAY:

.. _class_TextureLayered_constant_FLAGS_DEFAULT_TEXTURE_3D:

.. _class_TextureLayered_constant_FLAG_MIPMAPS:

.. _class_TextureLayered_constant_FLAG_REPEAT:

.. _class_TextureLayered_constant_FLAG_FILTER:

.. _class_TextureLayered_constant_FLAG_ANISOTROPIC_FILTER:

enum **Flags**:

- **FLAGS_DEFAULT_TEXTURE_ARRAY** = **7** --- :ref:`TextureArray<class_TextureArray>` 的默认标记。 启用 :ref:`FLAG_MIPMAPS<class_TextureLayered_constant_FLAG_MIPMAPS>`\ 、\ :ref:`FLAG_REPEAT<class_TextureLayered_constant_FLAG_REPEAT>` 和 :ref:`FLAG_FILTER<class_TextureLayered_constant_FLAG_FILTER>`\ 。

- **FLAGS_DEFAULT_TEXTURE_3D** = **4** --- 默认为\ :ref:`Texture3D<class_Texture3D>`\ 的标记。启用\ :ref:`FLAG_FILTER<class_TextureLayered_constant_FLAG_FILTER>`\ 。

- **FLAG_MIPMAPS** = **1** --- 纹理将在创建时生成多级渐远纹理。

- **FLAG_REPEAT** = **2** --- 当使用的UV超出0-1范围时，纹理将重复。

- **FLAG_FILTER** = **4** --- 在从纹理中读取时使用过滤。过滤使像素变得平滑。当你需要访问单个像素时，关闭过滤会稍快一些，也更合适。

- **FLAG_ANISOTROPIC_FILTER** = **8** --- 使用各向异性的多级渐远纹理过滤。生成具有不同长宽比的同一纹理的较小版本。

当从斜角观看时，这会产生更好看的纹理。

属性说明
--------

.. _class_TextureLayered_property_data:

- :ref:`Dictionary<class_Dictionary>` **data**

+-----------+--------------------------------------------------------------------------------+
| *Default* | ``{"depth": 0,"flags": 7,"format": 37,"height": 0,"layers": [  ],"width": 0}`` |
+-----------+--------------------------------------------------------------------------------+

返回字典，其中带有此纹理使用的所有数据。

----

.. _class_TextureLayered_property_flags:

- :ref:`int<class_int>` **flags**

+-----------+------------------+
| *Default* | ``7``            |
+-----------+------------------+
| *Setter*  | set_flags(value) |
+-----------+------------------+
| *Getter*  | get_flags()      |
+-----------+------------------+

指定应用于此纹理的 :ref:`Flags<enum_TextureLayered_Flags>`\ 。

方法说明
--------

.. _class_TextureLayered_method_get_depth:

- :ref:`int<class_int>` **get_depth** **(** **)** |const|

返回纹理的深度。深度是第三个维度（通常是 Z 轴）。

----

.. _class_TextureLayered_method_get_format:

- :ref:`Format<enum_Image_Format>` **get_format** **(** **)** |const|

返回纹理当前使用的格式。详情见\ :ref:`Format<enum_Image_Format>`\ 。

----

.. _class_TextureLayered_method_get_height:

- :ref:`int<class_int>` **get_height** **(** **)** |const|

返回纹理的高度。高度通常由Y轴表示。

----

.. _class_TextureLayered_method_get_layer_data:

- :ref:`Image<class_Image>` **get_layer_data** **(** :ref:`int<class_int>` layer **)** |const|

返回一个带有指定\ ``layer``\ 层数据的\ :ref:`Image<class_Image>`\ 图像资源。

----

.. _class_TextureLayered_method_get_width:

- :ref:`int<class_int>` **get_width** **(** **)** |const|

返回纹理的宽度。宽度通常由X轴表示。

----

.. _class_TextureLayered_method_set_data_partial:

- void **set_data_partial** **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` x_offset, :ref:`int<class_int>` y_offset, :ref:`int<class_int>` layer, :ref:`int<class_int>` mipmap=0 **)**

通过使用指定的\ ``image``\ 的数据覆盖来部分设置指定的\ ``layer``\ 的数据。 ``x_offset`` 和 ``y_offset`` 确定 :ref:`Image<class_Image>` 在纹理上"stamped" 标记的位置。 ``image`` 必须适合纹理。

----

.. _class_TextureLayered_method_set_layer_data:

- void **set_layer_data** **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` layer **)**

设置指定图层的数据。数据的形式是二维的\ :ref:`Image<class_Image>`\ 资源。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
