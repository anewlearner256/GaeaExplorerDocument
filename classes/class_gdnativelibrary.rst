:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the GDNativeLibrary.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GDNativeLibrary:

GDNativeLibrary
===============

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

一个包含函数或脚本类的外部库，可以在GaaeExplorer中使用。

描述
----

GDNative 库可以实现 :ref:`NativeScript<class_NativeScript>`\ 、用 :ref:`GDNative<class_GDNative>` 类调用的全局函数或通过 :ref:`ARVRInterfaceGDNative<class_ARVRInterfaceGDNative>` 等接口实现的低级引擎扩展。该库必须为项目将要运行的每个平台和架构进行编译。

教程
----

- :doc:`../tutorials/plugins/gdnative/gdnative-c-example`

- :doc:`../tutorials/plugins/gdnative/gdnative-cpp-example`

属性
----

+-------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`ConfigFile<class_ConfigFile>` | :ref:`config_file<class_GDNativeLibrary_property_config_file>`     |              |
+-------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`             | :ref:`load_once<class_GDNativeLibrary_property_load_once>`         | ``true``     |
+-------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`             | :ref:`reloadable<class_GDNativeLibrary_property_reloadable>`       | ``true``     |
+-------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`             | :ref:`singleton<class_GDNativeLibrary_property_singleton>`         | ``false``    |
+-------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`String<class_String>`         | :ref:`symbol_prefix<class_GDNativeLibrary_property_symbol_prefix>` | ``"godot_"`` |
+-------------------------------------+--------------------------------------------------------------------+--------------+

方法
----

+-----------------------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_current_dependencies<class_GDNativeLibrary_method_get_current_dependencies>` **(** **)** |const| |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_current_library_path<class_GDNativeLibrary_method_get_current_library_path>` **(** **)** |const| |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_GDNativeLibrary_property_config_file:

- :ref:`ConfigFile<class_ConfigFile>` **config_file**

+----------+------------------------+
| *Setter* | set_config_file(value) |
+----------+------------------------+
| *Getter* | get_config_file()      |
+----------+------------------------+

该资源为 INI 风格的 :ref:`ConfigFile<class_ConfigFile>` 格式，如 ``.gdnlib`` 文件中。

----

.. _class_GDNativeLibrary_property_load_once:

- :ref:`bool<class_bool>` **load_once**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_load_once(value) |
+-----------+----------------------+
| *Getter*  | should_load_once()   |
+-----------+----------------------+

为 ``true`` 时 GaaeExplorer 只加载一个库的副本，每个引用该库的脚本将共享静态数据，如静态变量或全局变量。

为 ``false`` 时 GaaeExplorer 会为每个引用它的脚本加载一个单独的库副本到内存。

----

.. _class_GDNativeLibrary_property_reloadable:

- :ref:`bool<class_bool>` **reloadable**

+-----------+-----------------------+
| *Default* | ``true``              |
+-----------+-----------------------+
| *Setter*  | set_reloadable(value) |
+-----------+-----------------------+
| *Getter*  | is_reloadable()       |
+-----------+-----------------------+

如果\ ``true``\ ，每当用户离开编辑器窗口时，编辑器会暂时卸载库，允许用户重新编译库，而不需要重新启动GaaeExplorer。

\ **注意：** 如果库定义了在编辑器内运行的工具脚本，\ ``reloadable``\ 必须是\ ``false``\ 。否则，编辑器会在工具脚本正在使用的时候尝试卸载它们时而崩溃。

----

.. _class_GDNativeLibrary_property_singleton:

- :ref:`bool<class_bool>` **singleton**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_singleton(value) |
+-----------+----------------------+
| *Getter*  | is_singleton()       |
+-----------+----------------------+

如果\ ``true``\ ，GaaeExplorer会在启动时加载库，而不是在脚本第一次使用库时，在初始化库后调用\ ``{prefix}gdnative_singleton``\ （其中\ ``{prefix}``\ 是\ :ref:`symbol_prefix<class_GDNativeLibrary_property_symbol_prefix>`\ 的值）。只要GaaeExplorer在运行，该库就一直被加载。

\ **注意：** 单例库不能是\ :ref:`reloadable<class_GDNativeLibrary_property_reloadable>`\ 。

----

.. _class_GDNativeLibrary_property_symbol_prefix:

- :ref:`String<class_String>` **symbol_prefix**

+-----------+--------------------------+
| *Default* | ``"godot_"``             |
+-----------+--------------------------+
| *Setter*  | set_symbol_prefix(value) |
+-----------+--------------------------+
| *Getter*  | get_symbol_prefix()      |
+-----------+--------------------------+

这个库的入口点函数开始的前缀。例如，一个 GDNativeLibrary 默认将其 ``gdnative_init`` 函数声明为 ``godot_gdnative_init`` 。

在需要静态链接库的平台上（目前只有iOS），每个库必须有一个不同的\ ``symbol_prefix``\ 。

方法说明
--------

.. _class_GDNativeLibrary_method_get_current_dependencies:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_current_dependencies** **(** **)** |const|

返回当前平台和架构的所有依赖库的路径。

----

.. _class_GDNativeLibrary_method_get_current_library_path:

- :ref:`String<class_String>` **get_current_library_path** **(** **)** |const|

返回当前平台和架构的动态库文件的路径。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
