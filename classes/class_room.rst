:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Room.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Room:

Room
====

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Room 节点，用于在本地将对象组合在一起以进行 :ref:`Portal<class_Portal>` 剔除。

描述
----

:ref:`Portal<class_Portal>` 剔除系统需要使用在称为 ``Room`` 的区域中按位置分组在一起的对象来构建关卡。在许多情况下，这些将对应于建筑物中的实际空间，但不一定（峡谷区域可能被视为空间）。

如果 :ref:`VisualInstance<class_VisualInstance>` 的 ``portal_mode`` 设置为 ``STATIC``\ （不移动) 或 ``DYNAMIC``\ （仅在空间内移动），那么任何作为 ``Room`` 的子代或孙代的 :ref:`VisualInstance<class_VisualInstance>` 将被分配到该空间。

在内部，空间边界必须形成一个\ **凸多边形**\ ，默认情况下，这由您放置在空间内的对象的几何形状自动确定。

您也可以精确指定\ **手动绑定**\ 。如果放置一个名称以 ``Bound_`` 为前缀的 :ref:`MeshInstance<class_MeshInstance>`\ ，它将关闭几何体的边界生成，而是在转换阶段使用这个MeshInstance 的顶点直接计算凸多边形（见\ :ref:`RoomManager<class_RoomManager>`\ ）。

为了从一个空间看到相邻的空间，\ :ref:`Portal<class_Portal>` 必须放置在空间之间的非遮挡开口上。这些通常会放置在门窗上。

属性
----

+-------------------------------------------------+-----------------------------------------------------------------------+--------------------------+
| :ref:`PoolVector3Array<class_PoolVector3Array>` | :ref:`points<class_Room_property_points>`                             | ``PoolVector3Array(  )`` |
+-------------------------------------------------+-----------------------------------------------------------------------+--------------------------+
| :ref:`float<class_float>`                       | :ref:`room_simplify<class_Room_property_room_simplify>`               | ``0.5``                  |
+-------------------------------------------------+-----------------------------------------------------------------------+--------------------------+
| :ref:`bool<class_bool>`                         | :ref:`use_default_simplify<class_Room_property_use_default_simplify>` | ``true``                 |
+-------------------------------------------------+-----------------------------------------------------------------------+--------------------------+

方法
----

+------+-------------------------------------------------------------------------------------------------------------------------------+
| void | :ref:`set_point<class_Room_method_set_point>` **(** :ref:`int<class_int>` index, :ref:`Vector3<class_Vector3>` position **)** |
+------+-------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Room_property_points:

- :ref:`PoolVector3Array<class_PoolVector3Array>` **points**

+-----------+--------------------------+
| *Default* | ``PoolVector3Array(  )`` |
+-----------+--------------------------+
| *Setter*  | set_points(value)        |
+-----------+--------------------------+
| *Getter*  | get_points()             |
+-----------+--------------------------+

如果设置了 ``points``\ ，则会从这些点构建 ``Room`` 边界凸多边形。如果未设置点，则空间边界将来自手动边界（\ :ref:`MeshInstance<class_MeshInstance>` 名称前缀为 ``Bound_``\ ），或来自空间内的几何体。

请注意，您可以使用 ``Generate Points`` 编辑器按钮开始。这将使用几何体或手动绑定来生成空间外壳，并保存结果点，允许您编辑它们以进一步细化边界。

----

.. _class_Room_property_room_simplify:

- :ref:`float<class_float>` **room_simplify**

+-----------+--------------------------+
| *Default* | ``0.5``                  |
+-----------+--------------------------+
| *Setter*  | set_room_simplify(value) |
+-----------+--------------------------+
| *Getter*  | get_room_simplify()      |
+-----------+--------------------------+

``simplify`` 值通过移除相似的平面来确定空间外壳（边界）的简化程度。值 0 表示不简化，1 表示最大程度的简化。

----

.. _class_Room_property_use_default_simplify:

- :ref:`bool<class_bool>` **use_default_simplify**

+-----------+---------------------------------+
| *Default* | ``true``                        |
+-----------+---------------------------------+
| *Setter*  | set_use_default_simplify(value) |
+-----------+---------------------------------+
| *Getter*  | get_use_default_simplify()      |
+-----------+---------------------------------+

空间外壳简化可以使用 :ref:`RoomManager<class_RoomManager>` 中设置的默认值，也可以覆盖它并使用每个空间的设置。

方法说明
--------

.. _class_Room_method_set_point:

- void **set_point** **(** :ref:`int<class_int>` index, :ref:`Vector3<class_Vector3>` position **)**

设置单个点。主要供编辑器使用。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
