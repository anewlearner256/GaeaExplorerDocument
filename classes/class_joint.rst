:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Joint.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Joint:

Joint
=====

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`ConeTwistJoint<class_ConeTwistJoint>`, :ref:`Generic6DOFJoint<class_Generic6DOFJoint>`, :ref:`HingeJoint<class_HingeJoint>`, :ref:`PinJoint<class_PinJoint>`, :ref:`SliderJoint<class_SliderJoint>`

所有3D关节的基类。

描述
----

关节用于将两个物理体结合在一起。它们具有解算器优先级，可以定义两个附加节点的主体是否能够相互碰撞。

教程
----

- `3D Truck Town Demo <https://godotengine.org/asset-library/asset/524>`__

属性
----

+---------------------------------+------------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`         | :ref:`collision/exclude_nodes<class_Joint_property_collision/exclude_nodes>` | ``true``         |
+---------------------------------+------------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`nodes/node_a<class_Joint_property_nodes/node_a>`                       | ``NodePath("")`` |
+---------------------------------+------------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`nodes/node_b<class_Joint_property_nodes/node_b>`                       | ``NodePath("")`` |
+---------------------------------+------------------------------------------------------------------------------+------------------+
| :ref:`int<class_int>`           | :ref:`solver/priority<class_Joint_property_solver/priority>`                 | ``1``            |
+---------------------------------+------------------------------------------------------------------------------+------------------+

属性说明
--------

.. _class_Joint_property_collision/exclude_nodes:

- :ref:`bool<class_bool>` **collision/exclude_nodes**

+-----------+-----------------------------------------+
| *Default* | ``true``                                |
+-----------+-----------------------------------------+
| *Setter*  | set_exclude_nodes_from_collision(value) |
+-----------+-----------------------------------------+
| *Getter*  | get_exclude_nodes_from_collision()      |
+-----------+-----------------------------------------+

如果 ``true``\ ，则节点的两个主体无法相互碰撞。

----

.. _class_Joint_property_nodes/node_a:

- :ref:`NodePath<class_NodePath>` **nodes/node_a**

+-----------+-------------------+
| *Default* | ``NodePath("")``  |
+-----------+-------------------+
| *Setter*  | set_node_a(value) |
+-----------+-------------------+
| *Getter*  | get_node_a()      |
+-----------+-------------------+

连接到关节第一侧(A)的节点。

----

.. _class_Joint_property_nodes/node_b:

- :ref:`NodePath<class_NodePath>` **nodes/node_b**

+-----------+-------------------+
| *Default* | ``NodePath("")``  |
+-----------+-------------------+
| *Setter*  | set_node_b(value) |
+-----------+-------------------+
| *Getter*  | get_node_b()      |
+-----------+-------------------+

连接到关节第二侧(B)的节点。

----

.. _class_Joint_property_solver/priority:

- :ref:`int<class_int>` **solver/priority**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_solver_priority(value) |
+-----------+----------------------------+
| *Getter*  | get_solver_priority()      |
+-----------+----------------------------+

用于定义哪个解算器在多个关节中被首先执行的优先级。数值越低，优先级越高。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
