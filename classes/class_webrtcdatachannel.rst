:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the WebRTCDataChannel.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebRTCDataChannel:

WebRTCDataChannel
=================

**Inherits:** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`WebRTCDataChannelGDNative<class_WebRTCDataChannelGDNative>`



属性
----

+----------------------------------------------------+----------------------------------------------------------------+-------+
| :ref:`WriteMode<enum_WebRTCDataChannel_WriteMode>` | :ref:`write_mode<class_WebRTCDataChannel_property_write_mode>` | ``1`` |
+----------------------------------------------------+----------------------------------------------------------------+-------+

方法
----

+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| void                                                     | :ref:`close<class_WebRTCDataChannel_method_close>` **(** **)**                                               |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_buffered_amount<class_WebRTCDataChannel_method_get_buffered_amount>` **(** **)** |const|           |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_id<class_WebRTCDataChannel_method_get_id>` **(** **)** |const|                                     |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                              | :ref:`get_label<class_WebRTCDataChannel_method_get_label>` **(** **)** |const|                               |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_max_packet_life_time<class_WebRTCDataChannel_method_get_max_packet_life_time>` **(** **)** |const| |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                    | :ref:`get_max_retransmits<class_WebRTCDataChannel_method_get_max_retransmits>` **(** **)** |const|           |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                              | :ref:`get_protocol<class_WebRTCDataChannel_method_get_protocol>` **(** **)** |const|                         |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`ChannelState<enum_WebRTCDataChannel_ChannelState>` | :ref:`get_ready_state<class_WebRTCDataChannel_method_get_ready_state>` **(** **)** |const|                   |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`is_negotiated<class_WebRTCDataChannel_method_is_negotiated>` **(** **)** |const|                       |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`is_ordered<class_WebRTCDataChannel_method_is_ordered>` **(** **)** |const|                             |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`                    | :ref:`poll<class_WebRTCDataChannel_method_poll>` **(** **)**                                                 |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`was_string_packet<class_WebRTCDataChannel_method_was_string_packet>` **(** **)** |const|               |
+----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_WebRTCDataChannel_WriteMode:

.. _class_WebRTCDataChannel_constant_WRITE_MODE_TEXT:

.. _class_WebRTCDataChannel_constant_WRITE_MODE_BINARY:

enum **WriteMode**:

- **WRITE_MODE_TEXT** = **0** --- 告诉通道以文本形式在这个通道上发送数据。外部对等体（非GaaeExplorer）会以字符串的形式接收。

- **WRITE_MODE_BINARY** = **1** --- 告诉通道以二进制形式在此通道上发送数据。外部对等体（非GaaeExplorer）将以数组缓冲区或blob的形式接收。

----

.. _enum_WebRTCDataChannel_ChannelState:

.. _class_WebRTCDataChannel_constant_STATE_CONNECTING:

.. _class_WebRTCDataChannel_constant_STATE_OPEN:

.. _class_WebRTCDataChannel_constant_STATE_CLOSING:

.. _class_WebRTCDataChannel_constant_STATE_CLOSED:

enum **ChannelState**:

- **STATE_CONNECTING** = **0** --- 通道已经创建，但它仍在尝试连接。

- **STATE_OPEN** = **1** --- 该通道目前是打开的，数据可以在其上流动。

- **STATE_CLOSING** = **2** --- 通道正在关闭，将不接受新的消息，但已经在队列中的消息将被刷新。

- **STATE_CLOSED** = **3** --- 通道已关闭，或连接失败。

属性说明
--------

.. _class_WebRTCDataChannel_property_write_mode:

- :ref:`WriteMode<enum_WebRTCDataChannel_WriteMode>` **write_mode**

+-----------+-----------------------+
| *Default* | ``1``                 |
+-----------+-----------------------+
| *Setter*  | set_write_mode(value) |
+-----------+-----------------------+
| *Getter*  | get_write_mode()      |
+-----------+-----------------------+

发送出去数据包时要使用的传输模式。可以是文本或二进制。

方法说明
--------

.. _class_WebRTCDataChannel_method_close:

- void **close** **(** **)**

关闭此数据通道，通知另一个对等体。

----

.. _class_WebRTCDataChannel_method_get_buffered_amount:

- :ref:`int<class_int>` **get_buffered_amount** **(** **)** |const|

返回当前排队在此通道上发送的字节数。

----

.. _class_WebRTCDataChannel_method_get_id:

- :ref:`int<class_int>` **get_id** **(** **)** |const|

返回创建时分配给该通道的ID，或在协商时自动分配。

如果该通道没有进行带外协商，那么该ID将只在连接建立后可用，在此之前将返回\ ``65535``\ 。

----

.. _class_WebRTCDataChannel_method_get_label:

- :ref:`String<class_String>` **get_label** **(** **)** |const|

返回创建时分配给该通道的标签。

----

.. _class_WebRTCDataChannel_method_get_max_packet_life_time:

- :ref:`int<class_int>` **get_max_packet_life_time** **(** **)** |const|

返回创建时分配给这个通道的\ ``maxPacketLifeTime``\ 值。

如果没有指定，将是\ ``65535``\ 。

----

.. _class_WebRTCDataChannel_method_get_max_retransmits:

- :ref:`int<class_int>` **get_max_retransmits** **(** **)** |const|

返回创建时分配给这个通道的\ ``maxRetransmits``\ 值。

如果没有指定，将是\ ``65535``\ 。

----

.. _class_WebRTCDataChannel_method_get_protocol:

- :ref:`String<class_String>` **get_protocol** **(** **)** |const|

返回创建时分配给这个通道的子协议。如果没有指定，则为空字符串。

----

.. _class_WebRTCDataChannel_method_get_ready_state:

- :ref:`ChannelState<enum_WebRTCDataChannel_ChannelState>` **get_ready_state** **(** **)** |const|

返回该通道的当前状态，参阅\ :ref:`ChannelState<enum_WebRTCDataChannel_ChannelState>`\ 。

----

.. _class_WebRTCDataChannel_method_is_negotiated:

- :ref:`bool<class_bool>` **is_negotiated** **(** **)** |const|

如果这个通道是用带外配置创建的，返回\ ``true``\ 。

----

.. _class_WebRTCDataChannel_method_is_ordered:

- :ref:`bool<class_bool>` **is_ordered** **(** **)** |const|

如果这个通道在创建时启用了排序功能，则默认返回\ ``true``\ 。

----

.. _class_WebRTCDataChannel_method_poll:

- :ref:`Error<enum_@GlobalScope_Error>` **poll** **(** **)**

保留，目前未使用。

----

.. _class_WebRTCDataChannel_method_was_string_packet:

- :ref:`bool<class_bool>` **was_string_packet** **(** **)** |const|

如果最后收到的数据包是以文本形式传输，则返回\ ``true``\ 。参阅\ :ref:`write_mode<class_WebRTCDataChannel_property_write_mode>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
