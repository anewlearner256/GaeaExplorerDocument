:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the EditorProperty.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_EditorProperty:

EditorProperty
==============

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

自定义控件属性添加到检查器中。

描述
----

该控件可以将一个或多个属性编辑到\ :ref:`EditorInspector<class_EditorInspector>`\ 中。通过\ :ref:`EditorInspectorPlugin<class_EditorInspectorPlugin>`\ 添加。

属性
----

+-----------------------------+-----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`checkable<class_EditorProperty_property_checkable>` | ``false`` |
+-----------------------------+-----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`checked<class_EditorProperty_property_checked>`     | ``false`` |
+-----------------------------+-----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`draw_red<class_EditorProperty_property_draw_red>`   | ``false`` |
+-----------------------------+-----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`keying<class_EditorProperty_property_keying>`       | ``false`` |
+-----------------------------+-----------------------------------------------------------+-----------+
| :ref:`String<class_String>` | :ref:`label<class_EditorProperty_property_label>`         | ``""``    |
+-----------------------------+-----------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`     | :ref:`read_only<class_EditorProperty_property_read_only>` | ``false`` |
+-----------------------------+-----------------------------------------------------------+-----------+

方法
----

+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`add_focusable<class_EditorProperty_method_add_focusable>` **(** :ref:`Control<class_Control>` control **)**                                                                                                                 |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`emit_changed<class_EditorProperty_method_emit_changed>` **(** :ref:`String<class_String>` property, :ref:`Variant<class_Variant>` value, :ref:`String<class_String>` field="", :ref:`bool<class_bool>` changing=false **)** |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>` | :ref:`get_edited_object<class_EditorProperty_method_get_edited_object>` **(** **)**                                                                                                                                               |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`get_edited_property<class_EditorProperty_method_get_edited_property>` **(** **)**                                                                                                                                           |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>` | :ref:`get_tooltip_text<class_EditorProperty_method_get_tooltip_text>` **(** **)** |const|                                                                                                                                         |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`set_bottom_editor<class_EditorProperty_method_set_bottom_editor>` **(** :ref:`Control<class_Control>` editor **)**                                                                                                          |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                        | :ref:`update_property<class_EditorProperty_method_update_property>` **(** **)** |virtual|                                                                                                                                         |
+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

信号
----

.. _class_EditorProperty_signal_multiple_properties_changed:

- **multiple_properties_changed** **(** :ref:`PoolStringArray<class_PoolStringArray>` properties, :ref:`Array<class_Array>` value **)**

如果你想同时修改多个属性，请触发它。如果通过\ :ref:`EditorInspectorPlugin.parse_property<class_EditorInspectorPlugin_method_parse_property>`\ 添加，则不要使用。

----

.. _class_EditorProperty_signal_object_id_selected:

- **object_id_selected** **(** :ref:`String<class_String>` property, :ref:`int<class_int>` id **)**

由子检查员使用。如果选择的是对象ID，则触发。

----

.. _class_EditorProperty_signal_property_changed:

- **property_changed** **(** :ref:`String<class_String>` property, :ref:`Variant<class_Variant>` value **)**

不要手动触发，使用 :ref:`emit_changed<class_EditorProperty_method_emit_changed>` 方法代替。

----

.. _class_EditorProperty_signal_property_checked:

- **property_checked** **(** :ref:`String<class_String>` property, :ref:`bool<class_bool>` checked **)**

检查属性时触发。在内部使用。

----

.. _class_EditorProperty_signal_property_keyed:

- **property_keyed** **(** :ref:`String<class_String>` property **)**

如果您想将此值添加这个值为动画键，请触发它（首先检查是否启用了键控）。

----

.. _class_EditorProperty_signal_property_keyed_with_value:

- **property_keyed_with_value** **(** :ref:`String<class_String>` property, :ref:`Variant<class_Variant>` value **)**

如果你想用一个单一的值来键入一个属性，请触发它。

----

.. _class_EditorProperty_signal_property_pinned:

- **property_pinned** **(** :ref:`String<class_String>` property, :ref:`bool<class_bool>` pinned **)**

Emit it if you want to mark (or unmark) the value of a property for being saved regardless of being equal to the default value.

The default value is the one the property will get when the node is just instantiated and can come from an ancestor scene in the inheritance/instancing chain, a script or a builtin class.

----

.. _class_EditorProperty_signal_resource_selected:

- **resource_selected** **(** :ref:`String<class_String>` path, :ref:`Resource<class_Resource>` resource **)**

如果你想编辑一个子资源，请将此信号与资源一起发出。

----

.. _class_EditorProperty_signal_selected:

- **selected** **(** :ref:`String<class_String>` path, :ref:`int<class_int>` focusable_idx **)**

选择时触发。内部使用。

属性说明
--------

.. _class_EditorProperty_property_checkable:

- :ref:`bool<class_bool>` **checkable**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_checkable(value) |
+-----------+----------------------+
| *Getter*  | is_checkable()       |
+-----------+----------------------+

在检查面板使用，当属性可点击时，设置为\ ``true``\ 。

----

.. _class_EditorProperty_property_checked:

- :ref:`bool<class_bool>` **checked**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_checked(value) |
+-----------+--------------------+
| *Getter*  | is_checked()       |
+-----------+--------------------+

在检查面板使用，当属性为可选中时，设置属性为\ ``true``\ 。

----

.. _class_EditorProperty_property_draw_red:

- :ref:`bool<class_bool>` **draw_red**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_draw_red(value) |
+-----------+---------------------+
| *Getter*  | is_draw_red()       |
+-----------+---------------------+

由检查器使用，当属性用编辑器主题的警告颜色着色时，设置为\ ``true``\ 。这用于可编辑的子节点的属性。

----

.. _class_EditorProperty_property_keying:

- :ref:`bool<class_bool>` **keying**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_keying(value) |
+-----------+-------------------+
| *Getter*  | is_keying()       |
+-----------+-------------------+

在检查面板使用，设置为\ ``true``\ 时，该属性可以为动画添加键。

----

.. _class_EditorProperty_property_label:

- :ref:`String<class_String>` **label**

+-----------+------------------+
| *Default* | ``""``           |
+-----------+------------------+
| *Setter*  | set_label(value) |
+-----------+------------------+
| *Getter*  | get_label()      |
+-----------+------------------+

设置此属性可改变标签（如果你想显示标签）。

----

.. _class_EditorProperty_property_read_only:

- :ref:`bool<class_bool>` **read_only**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_read_only(value) |
+-----------+----------------------+
| *Getter*  | is_read_only()       |
+-----------+----------------------+

在检查面板使用，当属性为只读时，设置为\ ``true``\ 。

方法说明
--------

.. _class_EditorProperty_method_add_focusable:

- void **add_focusable** **(** :ref:`Control<class_Control>` control **)**

如果添加的任何控件可以获得键盘焦点，将其添加到此处。这样可以确保在检查器被刷新时恢复焦点。

----

.. _class_EditorProperty_method_emit_changed:

- void **emit_changed** **(** :ref:`String<class_String>` property, :ref:`Variant<class_Variant>` value, :ref:`String<class_String>` field="", :ref:`bool<class_bool>` changing=false **)**

如果一个或几个属性发生了变化，必然会调用这个函数。\ ``field``\ 是在你的编辑器可以单独修改字段的情况下使用的（比如Vector3.x）。\ ``changing``\ 参数可以避免编辑器要求刷新这个属性(如果不确定的话，就用\ ``false``)。

----

.. _class_EditorProperty_method_get_edited_object:

- :ref:`Object<class_Object>` **get_edited_object** **(** **)**

获取编辑后的对象。

----

.. _class_EditorProperty_method_get_edited_property:

- :ref:`String<class_String>` **get_edited_property** **(** **)**

获取已编辑的属性。如果你的编辑器是针对单个属性的（通过\ :ref:`EditorInspectorPlugin.parse_property<class_EditorInspectorPlugin_method_parse_property>`\ 添加），那么这将返回属性。

----

.. _class_EditorProperty_method_get_tooltip_text:

- :ref:`String<class_String>` **get_tooltip_text** **(** **)** |const|

必须实现为属性编辑器提供一个自定义工具提示。

----

.. _class_EditorProperty_method_set_bottom_editor:

- void **set_bottom_editor** **(** :ref:`Control<class_Control>` editor **)**

将 ``editor`` 编辑器控件放在属性标签的下面。该控件必须事先用 :ref:`Node.add_child<class_Node_method_add_child>` 添加。

----

.. _class_EditorProperty_method_update_property:

- void **update_property** **(** **)** |virtual|

当这个虚函数被调用时，你必须更新你的编辑器。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
