:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the ColorPickerButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ColorPickerButton:

ColorPickerButton
=================

**Inherits:** :ref:`Button<class_Button>` **<** :ref:`BaseButton<class_BaseButton>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

弹出\ :ref:`ColorPicker<class_ColorPicker>`\ 的按钮。

描述
----

将\ :ref:`ColorPicker<class_ColorPicker>`\ 封装成可以通过按一个按钮来进行使用。点击按钮可以切换出可见的\ :ref:`ColorPicker<class_ColorPicker>`\ 。

另请参阅\ :ref:`BaseButton<class_BaseButton>`\ 。它包括了和这个节点共同拥有的属性和方法。

\ **注意：**\ 按钮默认状态时可能非常窄，导致颜色预览样本不可见。确保将\ :ref:`Control.rect_min_size<class_Control_property_rect_min_size>`\ 设置的足够大从而给这个按钮足够的空间去显示。

教程
----

- `GUI Drag And Drop Demo <https://godotengine.org/asset-library/asset/133>`__

- `2D GD Paint Demo <https://godotengine.org/asset-library/asset/517>`__

属性
----

+---------------------------+----------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`Color<class_Color>` | :ref:`color<class_ColorPickerButton_property_color>`           | ``Color( 0, 0, 0, 1 )``                                                       |
+---------------------------+----------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`edit_alpha<class_ColorPickerButton_property_edit_alpha>` | ``true``                                                                      |
+---------------------------+----------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | toggle_mode                                                    | ``true`` (overrides :ref:`BaseButton<class_BaseButton_property_toggle_mode>`) |
+---------------------------+----------------------------------------------------------------+-------------------------------------------------------------------------------+

方法
----

+---------------------------------------+--------------------------------------------------------------------------+
| :ref:`ColorPicker<class_ColorPicker>` | :ref:`get_picker<class_ColorPickerButton_method_get_picker>` **(** **)** |
+---------------------------------------+--------------------------------------------------------------------------+
| :ref:`PopupPanel<class_PopupPanel>`   | :ref:`get_popup<class_ColorPickerButton_method_get_popup>` **(** **)**   |
+---------------------------------------+--------------------------------------------------------------------------+

主题属性
--------

+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color<class_ColorPickerButton_theme_color_font_color>`                   | ``Color( 1, 1, 1, 1 )``         |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_disabled<class_ColorPickerButton_theme_color_font_color_disabled>` | ``Color( 0.9, 0.9, 0.9, 0.3 )`` |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_focus<class_ColorPickerButton_theme_color_font_color_focus>`       | ``Color( 1, 1, 1, 1 )``         |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_hover<class_ColorPickerButton_theme_color_font_color_hover>`       | ``Color( 1, 1, 1, 1 )``         |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_pressed<class_ColorPickerButton_theme_color_font_color_pressed>`   | ``Color( 0.8, 0.8, 0.8, 1 )``   |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`int<class_int>`           | :ref:`hseparation<class_ColorPickerButton_theme_constant_hseparation>`              | ``2``                           |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Font<class_Font>`         | :ref:`font<class_ColorPickerButton_theme_font_font>`                                |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`bg<class_ColorPickerButton_theme_icon_bg>`                                    |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`disabled<class_ColorPickerButton_theme_style_disabled>`                       |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`focus<class_ColorPickerButton_theme_style_focus>`                             |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`hover<class_ColorPickerButton_theme_style_hover>`                             |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`normal<class_ColorPickerButton_theme_style_normal>`                           |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`pressed<class_ColorPickerButton_theme_style_pressed>`                         |                                 |
+---------------------------------+-------------------------------------------------------------------------------------+---------------------------------+

信号
----

.. _class_ColorPickerButton_signal_color_changed:

- **color_changed** **(** :ref:`Color<class_Color>` color **)**

颜色改变时发出。

----

.. _class_ColorPickerButton_signal_picker_created:

- **picker_created** **(** **)**

创建\ :ref:`ColorPicker<class_ColorPicker>`\ 时（第一次按下按钮）发出。

----

.. _class_ColorPickerButton_signal_popup_closed:

- **popup_closed** **(** **)**

当\ :ref:`ColorPicker<class_ColorPicker>`\ 关闭时发出。

属性说明
--------

.. _class_ColorPickerButton_property_color:

- :ref:`Color<class_Color>` **color**

+-----------+-------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_pick_color(value)   |
+-----------+-------------------------+
| *Getter*  | get_pick_color()        |
+-----------+-------------------------+

当前选择的颜色。

----

.. _class_ColorPickerButton_property_edit_alpha:

- :ref:`bool<class_bool>` **edit_alpha**

+-----------+-----------------------+
| *Default* | ``true``              |
+-----------+-----------------------+
| *Setter*  | set_edit_alpha(value) |
+-----------+-----------------------+
| *Getter*  | is_editing_alpha()    |
+-----------+-----------------------+

如果\ ``true``\ ，则显示的\ :ref:`ColorPicker<class_ColorPicker>`\ 中的alpha通道将可见。

方法说明
--------

.. _class_ColorPickerButton_method_get_picker:

- :ref:`ColorPicker<class_ColorPicker>` **get_picker** **(** **)**

返回此节点所切换的 :ref:`ColorPicker<class_ColorPicker>`\ 。

\ **警告：** 这是一个必需的内部节点，移除和释放它可能会导致崩溃。如果你希望隐藏它或其所有子项，请使用其 :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` 属性。

----

.. _class_ColorPickerButton_method_get_popup:

- :ref:`PopupPanel<class_PopupPanel>` **get_popup** **(** **)**

返回控件的 :ref:`PopupPanel<class_PopupPanel>`\ ，它允许你连接到弹出信号。这允许你在显示或隐藏 ColorPicker 时事件处理。

\ **警告：** 这是一个必需的内部节点，删除和释放它可能会导致崩溃。如果你希望隐藏它或其任何子项，请使用其 :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` 属性。

Theme Property Descriptions
---------------------------

.. _class_ColorPickerButton_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

``ColorPickerButton``\ 的默认文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_ColorPickerButton_theme_color_font_color_disabled:

- :ref:`Color<class_Color>` **font_color_disabled**

+-----------+---------------------------------+
| *Default* | ``Color( 0.9, 0.9, 0.9, 0.3 )`` |
+-----------+---------------------------------+

禁用\ ``ColorPickerButton``\ 时使用的文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_ColorPickerButton_theme_color_font_color_focus:

- :ref:`Color<class_Color>` **font_color_focus**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

当\ ``ColorPickerButton``\ 获得焦点时使用的文本\ :ref:`Color<class_Color>`\ 。只替换按钮的正常文本颜色。禁用、悬停和按下状态优先于这个颜色。

----

.. _class_ColorPickerButton_theme_color_font_color_hover:

- :ref:`Color<class_Color>` **font_color_hover**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

悬停\ ``ColorPickerButton``\ 时使用的文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_ColorPickerButton_theme_color_font_color_pressed:

- :ref:`Color<class_Color>` **font_color_pressed**

+-----------+-------------------------------+
| *Default* | ``Color( 0.8, 0.8, 0.8, 1 )`` |
+-----------+-------------------------------+

按下\ ``ColorPickerButton``\ 时使用的文本\ :ref:`Color<class_Color>`\ 。

----

.. _class_ColorPickerButton_theme_constant_hseparation:

- :ref:`int<class_int>` **hseparation**

+-----------+-------+
| *Default* | ``2`` |
+-----------+-------+

``ColorPickerButton``\ 的图标和文本之间的水平间距。

----

.. _class_ColorPickerButton_theme_font_font:

- :ref:`Font<class_Font>` **font**

``ColorPickerButton``\ 文本的\ :ref:`Font<class_Font>`\ 。

----

.. _class_ColorPickerButton_theme_icon_bg:

- :ref:`Texture<class_Texture>` **bg**

颜色预览的背景将在按钮上显示。

----

.. _class_ColorPickerButton_theme_style_disabled:

- :ref:`StyleBox<class_StyleBox>` **disabled**

当\ ``ColorPickerButton``\ 被禁用时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_ColorPickerButton_theme_style_focus:

- :ref:`StyleBox<class_StyleBox>` **focus**

当\ ``ColorPickerButton``\ 获得焦点时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。它显示在当前的\ :ref:`StyleBox<class_StyleBox>`\ 上，所以使用\ :ref:`StyleBoxEmpty<class_StyleBoxEmpty>`\ 只是禁用焦点视觉效果。

----

.. _class_ColorPickerButton_theme_style_hover:

- :ref:`StyleBox<class_StyleBox>` **hover**

悬停\ ``ColorPickerButton``\ 时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_ColorPickerButton_theme_style_normal:

- :ref:`StyleBox<class_StyleBox>` **normal**

``ColorPickerButton``\ 的默认\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_ColorPickerButton_theme_style_pressed:

- :ref:`StyleBox<class_StyleBox>` **pressed**

按下\ ``ColorPickerButton``\ 时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
