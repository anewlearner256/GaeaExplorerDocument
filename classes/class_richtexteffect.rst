:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the RichTextEffect.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RichTextEffect:

RichTextEffect
==============

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

与 :ref:`RichTextLabel<class_RichTextLabel>` 一起使用的自定义效果。

描述
----

一个用于\ :ref:`RichTextLabel<class_RichTextLabel>`\ 的自定义效果。

\ **注意:** 为了使\ ``RichTextEffect``\ 能够使用，必须在脚本中定义一个名为\ ``bbcode``\ 的BBCode标签作为成员变量。

::

    # RichTextEffect将可以像这样使用:`[example]一些文本[/example]`.
    var bbcode = "example"

\ **注意：**\ 只要一个\ :ref:`RichTextLabel<class_RichTextLabel>`\ 包含至少一个\ ``RichTextEffect``\ ，它就会持续处理这个效果，除非项目暂停。这可能会对电池寿命产生负面影响。

教程
----

- :doc:`../tutorials/ui/bbcode_in_richtextlabel`

- `https://github.com/Eoin-ONeill-Yokai/GaaeExplorer-Rich-Text-Effect-Test-Project <https://github.com/Eoin-ONeill-Yokai/GaaeExplorer-Rich-Text-Effect-Test-Project>`__

方法
----

+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`_process_custom_fx<class_RichTextEffect_method__process_custom_fx>` **(** :ref:`CharFXTransform<class_CharFXTransform>` char_fx **)** |virtual| |
+-------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+

方法说明
--------

.. _class_RichTextEffect_method__process_custom_fx:

- :ref:`bool<class_bool>` **_process_custom_fx** **(** :ref:`CharFXTransform<class_CharFXTransform>` char_fx **)** |virtual|

覆盖这个方法来修改\ ``char_fx``\ 中的属性。如果字符可以被成功转换，该方法必须返回\ ``true``\ 。如果该方法返回\ ``false``\ ，它将跳过转换，以避免显示破碎的文本。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
