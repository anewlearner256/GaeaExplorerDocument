:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TileMap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TileMap:

TileMap
=======

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

基于 2D 图块的地图节点。

描述
----

基于 2D 图块的地图节点。图块地图使用 :ref:`TileSet<class_TileSet>`\ ，其中包含图块列表，纹理能加上可选的碰撞、导航和/或遮挡形状，用于创建基于网格的地图。

当对图块地图进行物理查询时，\ :ref:`Physics2DDirectSpaceState.intersect_shape<class_Physics2DDirectSpaceState_method_intersect_shape>`\ 、\ :ref:`Physics2DDirectBodyState.get_contact_collider_shape_metadata<class_Physics2DDirectBodyState_method_get_contact_collider_shape_metadata>` 等方法会返回检测到的碰撞形状，这些形状所处的单元格坐标会被编码为 ``metadata``\ 。

教程
----

- :doc:`Using Tilemaps <../tutorials/2d/using_tilemaps>`

- `2D Platformer Demo <https://godotengine.org/asset-library/asset/120>`__

- `2D Isometric Demo <https://godotengine.org/asset-library/asset/112>`__

- `2D Hexagonal Demo <https://godotengine.org/asset-library/asset/111>`__

- `2D Navigation Astar Demo <https://godotengine.org/asset-library/asset/519>`__

- `2D Role Playing Game Demo <https://godotengine.org/asset-library/asset/520>`__

- `2D Kinematic Character Demo <https://godotengine.org/asset-library/asset/113>`__

属性
----

+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`cell_clip_uv<class_TileMap_property_cell_clip_uv>`                       | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`Transform2D<class_Transform2D>`      | :ref:`cell_custom_transform<class_TileMap_property_cell_custom_transform>`     | ``Transform2D( 64, 0, 0, 64, 0, 0 )`` |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`HalfOffset<enum_TileMap_HalfOffset>` | :ref:`cell_half_offset<class_TileMap_property_cell_half_offset>`               | ``2``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`cell_quadrant_size<class_TileMap_property_cell_quadrant_size>`           | ``16``                                |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`Vector2<class_Vector2>`              | :ref:`cell_size<class_TileMap_property_cell_size>`                             | ``Vector2( 64, 64 )``                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`TileOrigin<enum_TileMap_TileOrigin>` | :ref:`cell_tile_origin<class_TileMap_property_cell_tile_origin>`               | ``0``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`cell_y_sort<class_TileMap_property_cell_y_sort>`                         | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`centered_textures<class_TileMap_property_centered_textures>`             | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`float<class_float>`                  | :ref:`collision_bounce<class_TileMap_property_collision_bounce>`               | ``0.0``                               |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`float<class_float>`                  | :ref:`collision_friction<class_TileMap_property_collision_friction>`           | ``1.0``                               |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`collision_layer<class_TileMap_property_collision_layer>`                 | ``1``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`collision_mask<class_TileMap_property_collision_mask>`                   | ``1``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`collision_use_kinematic<class_TileMap_property_collision_use_kinematic>` | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`collision_use_parent<class_TileMap_property_collision_use_parent>`       | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`compatibility_mode<class_TileMap_property_compatibility_mode>`           | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`Mode<enum_TileMap_Mode>`             | :ref:`mode<class_TileMap_property_mode>`                                       | ``0``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`int<class_int>`                      | :ref:`occluder_light_mask<class_TileMap_property_occluder_light_mask>`         | ``1``                                 |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`bool<class_bool>`                    | :ref:`show_collision<class_TileMap_property_show_collision>`                   | ``false``                             |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+
| :ref:`TileSet<class_TileSet>`              | :ref:`tile_set<class_TileMap_property_tile_set>`                               |                                       |
+--------------------------------------------+--------------------------------------------------------------------------------+---------------------------------------+

方法
----

+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`clear<class_TileMap_method_clear>` **(** **)**                                                                                                                                                                                                                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`fix_invalid_tiles<class_TileMap_method_fix_invalid_tiles>` **(** **)**                                                                                                                                                                                                                                               |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_cell<class_TileMap_method_get_cell>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                                        |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`get_cell_autotile_coord<class_TileMap_method_get_cell_autotile_coord>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                          |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`get_cellv<class_TileMap_method_get_cellv>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                                                                                                                                                                |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_layer_bit<class_TileMap_method_get_collision_layer_bit>` **(** :ref:`int<class_int>` bit **)** |const|                                                                                                                                                                                                 |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_collision_mask_bit<class_TileMap_method_get_collision_mask_bit>` **(** :ref:`int<class_int>` bit **)** |const|                                                                                                                                                                                                   |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_used_cells<class_TileMap_method_get_used_cells>` **(** **)** |const|                                                                                                                                                                                                                                             |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>`     | :ref:`get_used_cells_by_id<class_TileMap_method_get_used_cells_by_id>` **(** :ref:`int<class_int>` id **)** |const|                                                                                                                                                                                                        |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`     | :ref:`get_used_rect<class_TileMap_method_get_used_rect>` **(** **)**                                                                                                                                                                                                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_cell_transposed<class_TileMap_method_is_cell_transposed>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_cell_x_flipped<class_TileMap_method_is_cell_x_flipped>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                      |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_cell_y_flipped<class_TileMap_method_is_cell_y_flipped>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|                                                                                                                                                                                      |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`map_to_world<class_TileMap_method_map_to_world>` **(** :ref:`Vector2<class_Vector2>` map_position, :ref:`bool<class_bool>` ignore_half_ofs=false **)** |const|                                                                                                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cell<class_TileMap_method_set_cell>` **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false, :ref:`Vector2<class_Vector2>` autotile_coord=Vector2( 0, 0 ) **)** |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_cellv<class_TileMap_method_set_cellv>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false **)**                                                                       |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_layer_bit<class_TileMap_method_set_collision_layer_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**                                                                                                                                                                          |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_collision_mask_bit<class_TileMap_method_set_collision_mask_bit>` **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**                                                                                                                                                                            |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_bitmask_area<class_TileMap_method_update_bitmask_area>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                                                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_bitmask_region<class_TileMap_method_update_bitmask_region>` **(** :ref:`Vector2<class_Vector2>` start=Vector2( 0, 0 ), :ref:`Vector2<class_Vector2>` end=Vector2( 0, 0 ) **)**                                                                                                                                |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`update_dirty_quadrants<class_TileMap_method_update_dirty_quadrants>` **(** **)**                                                                                                                                                                                                                                     |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`world_to_map<class_TileMap_method_world_to_map>` **(** :ref:`Vector2<class_Vector2>` world_position **)** |const|                                                                                                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

信号
----

.. _class_TileMap_signal_settings_changed:

- **settings_changed** **(** **)**

当图块地图设置发生变化时触发。

枚举
----

.. _enum_TileMap_Mode:

.. _class_TileMap_constant_MODE_SQUARE:

.. _class_TileMap_constant_MODE_ISOMETRIC:

.. _class_TileMap_constant_MODE_CUSTOM:

enum **Mode**:

- **MODE_SQUARE** = **0** --- 正交定向模式。

- **MODE_ISOMETRIC** = **1** --- 等距定向模式。

- **MODE_CUSTOM** = **2** --- 自定义方向模式。

----

.. _enum_TileMap_HalfOffset:

.. _class_TileMap_constant_HALF_OFFSET_X:

.. _class_TileMap_constant_HALF_OFFSET_Y:

.. _class_TileMap_constant_HALF_OFFSET_DISABLED:

.. _class_TileMap_constant_HALF_OFFSET_NEGATIVE_X:

.. _class_TileMap_constant_HALF_OFFSET_NEGATIVE_Y:

enum **HalfOffset**:

- **HALF_OFFSET_X** = **0** --- X坐标上的一半偏移。

- **HALF_OFFSET_Y** = **1** --- Y坐标上的一半偏移。

- **HALF_OFFSET_DISABLED** = **2** --- 禁用半偏移。

- **HALF_OFFSET_NEGATIVE_X** = **3** --- X坐标上的半偏移，负数。

- **HALF_OFFSET_NEGATIVE_Y** = **4** --- Y坐标上的半偏移，负数。

----

.. _enum_TileMap_TileOrigin:

.. _class_TileMap_constant_TILE_ORIGIN_TOP_LEFT:

.. _class_TileMap_constant_TILE_ORIGIN_CENTER:

.. _class_TileMap_constant_TILE_ORIGIN_BOTTOM_LEFT:

enum **TileOrigin**:

- **TILE_ORIGIN_TOP_LEFT** = **0** --- 图块原点在其左上角。

- **TILE_ORIGIN_CENTER** = **1** --- 图块原点在其中心。

- **TILE_ORIGIN_BOTTOM_LEFT** = **2** --- 图块原点在其左下角。

常量
----

.. _class_TileMap_constant_INVALID_CELL:

- **INVALID_CELL** = **-1** --- 当一个单元不存在时返回。

属性说明
--------

.. _class_TileMap_property_cell_clip_uv:

- :ref:`bool<class_bool>` **cell_clip_uv**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_clip_uv(value) |
+-----------+--------------------+
| *Getter*  | get_clip_uv()      |
+-----------+--------------------+

如果\ ``true``\ ，单元格的UV将被剪裁。

----

.. _class_TileMap_property_cell_custom_transform:

- :ref:`Transform2D<class_Transform2D>` **cell_custom_transform**

+-----------+---------------------------------------+
| *Default* | ``Transform2D( 64, 0, 0, 64, 0, 0 )`` |
+-----------+---------------------------------------+
| *Setter*  | set_custom_transform(value)           |
+-----------+---------------------------------------+
| *Getter*  | get_custom_transform()                |
+-----------+---------------------------------------+

将应用到图块地图的，单元格的自定义\ :ref:`Transform2D<class_Transform2D>`\ 。

----

.. _class_TileMap_property_cell_half_offset:

- :ref:`HalfOffset<enum_TileMap_HalfOffset>` **cell_half_offset**

+-----------+------------------------+
| *Default* | ``2``                  |
+-----------+------------------------+
| *Setter*  | set_half_offset(value) |
+-----------+------------------------+
| *Getter*  | get_half_offset()      |
+-----------+------------------------+

依次排列的图块的偏移量。有关可能的值，参阅\ :ref:`HalfOffset<enum_TileMap_HalfOffset>`\ 。

----

.. _class_TileMap_property_cell_quadrant_size:

- :ref:`int<class_int>` **cell_quadrant_size**

+-----------+--------------------------+
| *Default* | ``16``                   |
+-----------+--------------------------+
| *Setter*  | set_quadrant_size(value) |
+-----------+--------------------------+
| *Getter*  | get_quadrant_size()      |
+-----------+--------------------------+

图块地图的象限大小。使用这个尺寸的图块，通过批处理优化绘制。

----

.. _class_TileMap_property_cell_size:

- :ref:`Vector2<class_Vector2>` **cell_size**

+-----------+-----------------------+
| *Default* | ``Vector2( 64, 64 )`` |
+-----------+-----------------------+
| *Setter*  | set_cell_size(value)  |
+-----------+-----------------------+
| *Getter*  | get_cell_size()       |
+-----------+-----------------------+

图块地图的单元大小。

----

.. _class_TileMap_property_cell_tile_origin:

- :ref:`TileOrigin<enum_TileMap_TileOrigin>` **cell_tile_origin**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_tile_origin(value) |
+-----------+------------------------+
| *Getter*  | get_tile_origin()      |
+-----------+------------------------+

图块原点的坐标。有关可能的值，参阅\ :ref:`TileOrigin<enum_TileMap_TileOrigin>`\ 。

----

.. _class_TileMap_property_cell_y_sort:

- :ref:`bool<class_bool>` **cell_y_sort**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_y_sort_mode(value)   |
+-----------+--------------------------+
| *Getter*  | is_y_sort_mode_enabled() |
+-----------+--------------------------+

如果\ ``true``\ ，图块地图的直接子节点将按其Y坐标顺序绘制。

----

.. _class_TileMap_property_centered_textures:

- :ref:`bool<class_bool>` **centered_textures**

+-----------+--------------------------------+
| *Default* | ``false``                      |
+-----------+--------------------------------+
| *Setter*  | set_centered_textures(value)   |
+-----------+--------------------------------+
| *Getter*  | is_centered_textures_enabled() |
+-----------+--------------------------------+

如果\ ``true``\ ，纹理将被集中在每个图块的中间。这对某些等距或上帝视角的模式很有用，当纹理被做得比图块大或小时，例如，为了避免瓷砖边缘的闪烁。偏移量仍被应用，但从瓦片的中心开始。如果使用，\ :ref:`compatibility_mode<class_TileMap_property_compatibility_mode>`\ 会被忽略。

如果\ ``false``\ ，纹理坐标从左上角开始，除非\ :ref:`compatibility_mode<class_TileMap_property_compatibility_mode>`\ 被启用。

----

.. _class_TileMap_property_collision_bounce:

- :ref:`float<class_float>` **collision_bounce**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_collision_bounce(value) |
+-----------+-----------------------------+
| *Getter*  | get_collision_bounce()      |
+-----------+-----------------------------+

静态体碰撞的反弹值，参阅\ ``collision_use_kinematic``\ 。

----

.. _class_TileMap_property_collision_friction:

- :ref:`float<class_float>` **collision_friction**

+-----------+-------------------------------+
| *Default* | ``1.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_collision_friction(value) |
+-----------+-------------------------------+
| *Getter*  | get_collision_friction()      |
+-----------+-------------------------------+

静态体碰撞的摩擦值，参阅\ ``collision_use_kinematic``\ 。

----

.. _class_TileMap_property_collision_layer:

- :ref:`int<class_int>` **collision_layer**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_collision_layer(value) |
+-----------+----------------------------+
| *Getter*  | get_collision_layer()      |
+-----------+----------------------------+

The collision layer(s) for all colliders in the TileMap. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_TileMap_property_collision_mask:

- :ref:`int<class_int>` **collision_mask**

+-----------+---------------------------+
| *Default* | ``1``                     |
+-----------+---------------------------+
| *Setter*  | set_collision_mask(value) |
+-----------+---------------------------+
| *Getter*  | get_collision_mask()      |
+-----------+---------------------------+

The collision mask(s) for all colliders in the TileMap. See `Collision layers and masks <../tutorials/physics/physics_introduction.html#collision-layers-and-masks>`__ in the documentation for more information.

----

.. _class_TileMap_property_collision_use_kinematic:

- :ref:`bool<class_bool>` **collision_use_kinematic**

+-----------+------------------------------------+
| *Default* | ``false``                          |
+-----------+------------------------------------+
| *Setter*  | set_collision_use_kinematic(value) |
+-----------+------------------------------------+
| *Getter*  | get_collision_use_kinematic()      |
+-----------+------------------------------------+

如果\ ``true``\ ，图块地图的碰撞将被当作运动体处理。如果\ ``false``\ ，碰撞将被当作静态体来处理。

----

.. _class_TileMap_property_collision_use_parent:

- :ref:`bool<class_bool>` **collision_use_parent**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_collision_use_parent(value) |
+-----------+---------------------------------+
| *Getter*  | get_collision_use_parent()      |
+-----------+---------------------------------+

如果\ ``true``\ ，这个图块地图的碰撞形状将被添加到父级的碰撞形状中。父级必须是一个\ :ref:`CollisionObject2D<class_CollisionObject2D>`\ 。

----

.. _class_TileMap_property_compatibility_mode:

- :ref:`bool<class_bool>` **compatibility_mode**

+-----------+---------------------------------+
| *Default* | ``false``                       |
+-----------+---------------------------------+
| *Setter*  | set_compatibility_mode(value)   |
+-----------+---------------------------------+
| *Getter*  | is_compatibility_mode_enabled() |
+-----------+---------------------------------+

如果\ ``为true``\ ，则保持与GaaeExplorer 3.1或更早版本的图块地图的兼容性，即当图块原点改变时，纹理会移动，如果纹理大小不均匀，则会旋转。这种模式对非同质等距图块（例如2:1）进行\ ``flip_h``, ``flip_v`` 和 ``transpose`` 图块操作时，将出现问题，在这种情况下，纹理不能与碰撞重合，因此不推荐用于等距或非方形图块。

如果\ ``false``\ ，在进行\ ``flip_h``\ 、\ ``flip_v``\ 操作时，如果不使用偏移量，纹理不会移动，在改变图块原点时也是如此。

兼容性模式对\ :ref:`centered_textures<class_TileMap_property_centered_textures>`\ 选项不起作用，因为用\ :ref:`cell_tile_origin<class_TileMap_property_cell_tile_origin>`\ 选项或不规则图块中的纹理进行替换时，与这些纹理的居中项没有关系。

----

.. _class_TileMap_property_mode:

- :ref:`Mode<enum_TileMap_Mode>` **mode**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_mode(value) |
+-----------+-----------------+
| *Getter*  | get_mode()      |
+-----------+-----------------+

图块地图的方向模式。有关可能的值，参阅\ :ref:`Mode<enum_TileMap_Mode>`\ 。

----

.. _class_TileMap_property_occluder_light_mask:

- :ref:`int<class_int>` **occluder_light_mask**

+-----------+--------------------------------+
| *Default* | ``1``                          |
+-----------+--------------------------------+
| *Setter*  | set_occluder_light_mask(value) |
+-----------+--------------------------------+
| *Getter*  | get_occluder_light_mask()      |
+-----------+--------------------------------+

分配给图块地图中所有光遮挡器的光线遮罩。图块集的光遮挡器将只从具有相同光线遮挡的Light2D中投射阴影。

----

.. _class_TileMap_property_show_collision:

- :ref:`bool<class_bool>` **show_collision**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_show_collision(value)   |
+-----------+-----------------------------+
| *Getter*  | is_show_collision_enabled() |
+-----------+-----------------------------+

如果\ ``true``\ ，碰撞形状在编辑器中是可见的。不影响碰撞形状在运行时的可见性。要在运行时显示碰撞形状，请在\ **调试**\ 菜单中启用\ **可见的碰撞形状**\ 。

----

.. _class_TileMap_property_tile_set:

- :ref:`TileSet<class_TileSet>` **tile_set**

+----------+--------------------+
| *Setter* | set_tileset(value) |
+----------+--------------------+
| *Getter* | get_tileset()      |
+----------+--------------------+

指定的\ :ref:`TileSet<class_TileSet>`\ 图块集。

方法说明
--------

.. _class_TileMap_method_clear:

- void **clear** **(** **)**

清除所有单元格。

----

.. _class_TileMap_method_fix_invalid_tiles:

- void **fix_invalid_tiles** **(** **)**

清除图块集中不存在的单元格。

----

.. _class_TileMap_method_get_cell:

- :ref:`int<class_int>` **get_cell** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

返回指定单元格的图块索引。如果单元格中没有图块，则返回 :ref:`INVALID_CELL<class_TileMap_constant_INVALID_CELL>`\ 。

----

.. _class_TileMap_method_get_cell_autotile_coord:

- :ref:`Vector2<class_Vector2>` **get_cell_autotile_coord** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

返回图块集中自动图块变化的坐标（子图块列和行）。如果单元格没有自动图块，则返回向量零。

----

.. _class_TileMap_method_get_cellv:

- :ref:`int<class_int>` **get_cellv** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回由 Vector2 指定的单元格的图块索引。如果单元格中没有图块，则返回 :ref:`INVALID_CELL<class_TileMap_constant_INVALID_CELL>`\ 。

----

.. _class_TileMap_method_get_collision_layer_bit:

- :ref:`bool<class_bool>` **get_collision_layer_bit** **(** :ref:`int<class_int>` bit **)** |const|

如果指定碰撞层的比特位被设置，返回 ``true``\ 。

----

.. _class_TileMap_method_get_collision_mask_bit:

- :ref:`bool<class_bool>` **get_collision_mask_bit** **(** :ref:`int<class_int>` bit **)** |const|

如果指定碰撞遮罩比特位被设置，返回 ``true``\ 。

----

.. _class_TileMap_method_get_used_cells:

- :ref:`Array<class_Array>` **get_used_cells** **(** **)** |const|

返回一个\ :ref:`Vector2<class_Vector2>`\ 数组，其中包含图块集中所有单元格的位置（图块索引非\ ``-1``\ ）。

----

.. _class_TileMap_method_get_used_cells_by_id:

- :ref:`Array<class_Array>` **get_used_cells_by_id** **(** :ref:`int<class_int>` id **)** |const|

返回所有具有\ ``id``\ 中指定的图块索引的单元格的数组。

----

.. _class_TileMap_method_get_used_rect:

- :ref:`Rect2<class_Rect2>` **get_used_rect** **(** **)**

返回一个包围着地图中已使用非空图块的矩形。

----

.. _class_TileMap_method_is_cell_transposed:

- :ref:`bool<class_bool>` **is_cell_transposed** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

如果指定单元格被转置，即X轴和Y轴互换，则返回\ ``true``\ 。

----

.. _class_TileMap_method_is_cell_x_flipped:

- :ref:`bool<class_bool>` **is_cell_x_flipped** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

如果指定单元格在X轴上被翻转，则返回\ ``true``\ 。

----

.. _class_TileMap_method_is_cell_y_flipped:

- :ref:`bool<class_bool>` **is_cell_y_flipped** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y **)** |const|

如果指定单元格在Y轴上被翻转，则返回\ ``true``\ 。

----

.. _class_TileMap_method_map_to_world:

- :ref:`Vector2<class_Vector2>` **map_to_world** **(** :ref:`Vector2<class_Vector2>` map_position, :ref:`bool<class_bool>` ignore_half_ofs=false **)** |const|

返回与指定的图块地图（基于网格）坐标相对应的单元格左上角的局部坐标。

要获得全局坐标，请使用\ :ref:`Node2D.to_global<class_Node2D_method_to_global>`\ 。

::

    var local_position = my_tilemap.map_to_world(map_position)
    var global_position = my_tilemap.to_global(local_position)

可以选择忽略图块地图的半偏移。

----

.. _class_TileMap_method_set_cell:

- void **set_cell** **(** :ref:`int<class_int>` x, :ref:`int<class_int>` y, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false, :ref:`Vector2<class_Vector2>` autotile_coord=Vector2( 0, 0 ) **)**

设置由Vector2给出的单元格的图块索引。

\ ``-1``\ 的索引将清除该单元。

也可以选择翻转、移位，或者指定自动图块坐标。自动图块坐标指的是子图块的列和行。

\ **注意：** 由于性能原因，导航多边形和碰撞形状等数据不会立即更新。

如果你需要这些被立即更新，你可以调用\ :ref:`update_dirty_quadrants<class_TileMap_method_update_dirty_quadrants>`\ 。

重写该方法会在内部重写它，允许在放置/移除图块时实现自定义逻辑。

::

    func set_cell(x, y, tile, flip_x=false, flip_y=false, transpose=false, autotile_coord=Vector2()):
        # 在这里写下你的自定义逻辑。 
        # 调用默认方法:
        .set_cell(x, y, tile, flip_x, flip_y, transpose, autotile_coord)

----

.. _class_TileMap_method_set_cellv:

- void **set_cellv** **(** :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` tile, :ref:`bool<class_bool>` flip_x=false, :ref:`bool<class_bool>` flip_y=false, :ref:`bool<class_bool>` transpose=false **)**

设置给定单元格的瓦片索引。

索引\ ``-1``\ 会清除该单元。

也可以选择翻转或转置图块。

\ **注意：** 由于性能原因，导航多边形和碰撞形状等数据不会立即更新。

如果你需要立即更新这些数据，可以调用\ :ref:`update_dirty_quadrants<class_TileMap_method_update_dirty_quadrants>`\ 。

----

.. _class_TileMap_method_set_collision_layer_bit:

- void **set_collision_layer_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

设置指定碰撞层bit位。

----

.. _class_TileMap_method_set_collision_mask_bit:

- void **set_collision_mask_bit** **(** :ref:`int<class_int>` bit, :ref:`bool<class_bool>` value **)**

设置指定碰撞遮罩bit位。

----

.. _class_TileMap_method_update_bitmask_area:

- void **update_bitmask_area** **(** :ref:`Vector2<class_Vector2>` position **)**

对基于网格的X和Y坐标所引用的单元格，及其相邻单元格，应用自动平移规则。

----

.. _class_TileMap_method_update_bitmask_region:

- void **update_bitmask_region** **(** :ref:`Vector2<class_Vector2>` start=Vector2( 0, 0 ), :ref:`Vector2<class_Vector2>` end=Vector2( 0, 0 ) **)**

对指定区域内的单元格应用自动平移规则，由基于网格的X和Y坐标指定。

用无效的或缺失的参数调用时，自动平铺规则应用于整个图块地图。

----

.. _class_TileMap_method_update_dirty_quadrants:

- void **update_dirty_quadrants** **(** **)**

更新图块地图的象限，允许如导航和碰撞形状等内容，在修改后立即使用。

----

.. _class_TileMap_method_world_to_map:

- :ref:`Vector2<class_Vector2>` **world_to_map** **(** :ref:`Vector2<class_Vector2>` world_position **)** |const|

返回与指定的局部坐标相对应的图块地图坐标，基于网格。

要使用这个全局坐标，首先要用\ :ref:`Node2D.to_local<class_Node2D_method_to_local>`\ 确定局部坐标。

::

    var local_position = my_tilemap.to_local(global_position)
    var map_position = my_tilemap.world_to_map(local_position)

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
