:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the AnimationTree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AnimationTree:

AnimationTree
=============

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

用于 :ref:`AnimationPlayer<class_AnimationPlayer>` 中高级动画过渡的节点。

描述
----

用于 :ref:`AnimationPlayer<class_AnimationPlayer>` 中高级动画过渡的节点。

\ **注意：**\ 与 :ref:`AnimationPlayer<class_AnimationPlayer>` 连接时，该 :ref:`AnimationPlayer<class_AnimationPlayer>` 的一些属性和方法将不会像预期的那样发挥作用。播放和过渡应该只使用 ``AnimationTree`` 和组成它的 :ref:`AnimationNode<class_AnimationNode>` 来处理。\ :ref:`AnimationPlayer<class_AnimationPlayer>` 节点应仅用于添加、删除和编辑动画。

教程
----

- :doc:`Using AnimationTree <../tutorials/animation/animation_tree>`

- `Third Person Shooter Demo <https://godotengine.org/asset-library/asset/678>`__

属性
----

+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`bool<class_bool>`                                              | :ref:`active<class_AnimationTree_property_active>`                       | ``false``        |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>`                                      | :ref:`anim_player<class_AnimationTree_property_anim_player>`             | ``NodePath("")`` |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`AnimationProcessMode<enum_AnimationTree_AnimationProcessMode>` | :ref:`process_mode<class_AnimationTree_property_process_mode>`           | ``1``            |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`NodePath<class_NodePath>`                                      | :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>` | ``NodePath("")`` |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+
| :ref:`AnimationNode<class_AnimationNode>`                            | :ref:`tree_root<class_AnimationTree_property_tree_root>`                 |                  |
+----------------------------------------------------------------------+--------------------------------------------------------------------------+------------------+

方法
----

+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                              | :ref:`advance<class_AnimationTree_method_advance>` **(** :ref:`float<class_float>` delta **)**                                                              |
+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform<class_Transform>` | :ref:`get_root_motion_transform<class_AnimationTree_method_get_root_motion_transform>` **(** **)** |const|                                                  |
+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                              | :ref:`rename_parameter<class_AnimationTree_method_rename_parameter>` **(** :ref:`String<class_String>` old_name, :ref:`String<class_String>` new_name **)** |
+-----------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_AnimationTree_AnimationProcessMode:

.. _class_AnimationTree_constant_ANIMATION_PROCESS_PHYSICS:

.. _class_AnimationTree_constant_ANIMATION_PROCESS_IDLE:

.. _class_AnimationTree_constant_ANIMATION_PROCESS_MANUAL:

enum **AnimationProcessMode**:

- **ANIMATION_PROCESS_PHYSICS** = **0** --- 在物理帧期间进行动画（即 :ref:`Node._physics_process<class_Node_method__physics_process>`\ ）。

- **ANIMATION_PROCESS_IDLE** = **1** --- 在空闲帧期间进行动画（即 :ref:`Node._process<class_Node_method__process>`\ ）。

- **ANIMATION_PROCESS_MANUAL** = **2** --- 只能手动进行动画（见 :ref:`advance<class_AnimationTree_method_advance>`\ ）。

属性说明
--------

.. _class_AnimationTree_property_active:

- :ref:`bool<class_bool>` **active**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_active(value) |
+-----------+-------------------+
| *Getter*  | is_active()       |
+-----------+-------------------+

如果 ``true`` 时，\ ``AnimationTree`` 将执行逻辑处理。

----

.. _class_AnimationTree_property_anim_player:

- :ref:`NodePath<class_NodePath>` **anim_player**

+-----------+-----------------------------+
| *Default* | ``NodePath("")``            |
+-----------+-----------------------------+
| *Setter*  | set_animation_player(value) |
+-----------+-----------------------------+
| *Getter*  | get_animation_player()      |
+-----------+-----------------------------+

用于动画的 :ref:`AnimationPlayer<class_AnimationPlayer>` 的路径。

----

.. _class_AnimationTree_property_process_mode:

- :ref:`AnimationProcessMode<enum_AnimationTree_AnimationProcessMode>` **process_mode**

+-----------+-------------------------+
| *Default* | ``1``                   |
+-----------+-------------------------+
| *Setter*  | set_process_mode(value) |
+-----------+-------------------------+
| *Getter*  | get_process_mode()      |
+-----------+-------------------------+

该 ``AnimationTree`` 的处理模式。可用的模式见 :ref:`AnimationProcessMode<enum_AnimationTree_AnimationProcessMode>`\ 。

----

.. _class_AnimationTree_property_root_motion_track:

- :ref:`NodePath<class_NodePath>` **root_motion_track**

+-----------+------------------------------+
| *Default* | ``NodePath("")``             |
+-----------+------------------------------+
| *Setter*  | set_root_motion_track(value) |
+-----------+------------------------------+
| *Getter*  | get_root_motion_track()      |
+-----------+------------------------------+

用于根部运动的动画轨道的路径。路径必须是指向节点的场景树有效路径，必须从将实现动画的节点的父节点开始指定。要指定控件属性或骨骼的轨道，请在路径后附加其名称，用 ``":"`` 隔开。例如，\ ``"character/skeleton:ankle"`` 或 ``"character/mesh:transform/local"``\ 。

如果轨道的类型是 :ref:`Animation.TYPE_TRANSFORM<class_Animation_constant_TYPE_TRANSFORM>`\ ，那么将取消视觉上的变换，其动画将看起来留在原地。参阅 :ref:`get_root_motion_transform<class_AnimationTree_method_get_root_motion_transform>` 和 :ref:`RootMotionView<class_RootMotionView>`\ 。

----

.. _class_AnimationTree_property_tree_root:

- :ref:`AnimationNode<class_AnimationNode>` **tree_root**

+----------+----------------------+
| *Setter* | set_tree_root(value) |
+----------+----------------------+
| *Getter* | get_tree_root()      |
+----------+----------------------+

该 ``AnimationTree`` 的根动画节点。见 :ref:`AnimationNode<class_AnimationNode>`\ 。

方法说明
--------

.. _class_AnimationTree_method_advance:

- void **advance** **(** :ref:`float<class_float>` delta **)**

手动将动画前进指定的时间（单位为秒）。

----

.. _class_AnimationTree_method_get_root_motion_transform:

- :ref:`Transform<class_Transform>` **get_root_motion_transform** **(** **)** |const|

检索\ :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>`\ 的运动，作为一个可以在其他地方使用的\ :ref:`Transform<class_Transform>`\ 。如果\ :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>`\ 不是一个\ :ref:`Animation.TYPE_TRANSFORM<class_Animation_constant_TYPE_TRANSFORM>`\ 类型轨道的路径，返回一个变换ID。参阅\ :ref:`root_motion_track<class_AnimationTree_property_root_motion_track>`\ 和\ :ref:`RootMotionView<class_RootMotionView>`\ 。

----

.. _class_AnimationTree_method_rename_parameter:

- void **rename_parameter** **(** :ref:`String<class_String>` old_name, :ref:`String<class_String>` new_name **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
