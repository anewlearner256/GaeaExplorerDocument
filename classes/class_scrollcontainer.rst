:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the ScrollContainer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_ScrollContainer:

ScrollContainer
===============

**Inherits:** :ref:`Container<class_Container>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`EditorInspector<class_EditorInspector>`

用于显示可滚动元素（例如列表）的辅助节点。

描述
----

滚动容器节点，用于包含 :ref:`Control<class_Control>` 子节点。 滚动容器将在需要时自动创建滚动条子项（\ :ref:`HScrollBar<class_HScrollBar>`\ 、\ :ref:`VScrollBar<class_VScrollBar>` 或两者），且仅在滚动容器区域内绘制控件。滚动条将自动绘制在右侧或底部，即垂直或水平，并允许拖动以在滚动容器内移动可视控件及其子项。滚动条还将根据控件相对于滚动容器的 :ref:`Control.rect_min_size<class_Control_property_rect_min_size>` 自动调整抓取器的大小。与 :ref:`Panel<class_Panel>` 控件配合使用效果很好。您可以将子项的大小标志设置为 ``EXPAND``\ ，当滚动容器的大小更大（滚动对于所选维度不可见），它们将放大到滚动容器的大小。

属性
----

+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`follow_focus<class_ScrollContainer_property_follow_focus>`                           | ``false``                                                                     |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | rect_clip_content                                                                          | ``true`` (overrides :ref:`Control<class_Control_property_rect_clip_content>`) |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>`   | :ref:`scroll_deadzone<class_ScrollContainer_property_scroll_deadzone>`                     | ``0``                                                                         |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>`   | :ref:`scroll_horizontal<class_ScrollContainer_property_scroll_horizontal>`                 | ``0``                                                                         |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`scroll_horizontal_enabled<class_ScrollContainer_property_scroll_horizontal_enabled>` | ``true``                                                                      |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>`   | :ref:`scroll_vertical<class_ScrollContainer_property_scroll_vertical>`                     | ``0``                                                                         |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`scroll_vertical_enabled<class_ScrollContainer_property_scroll_vertical_enabled>`     | ``true``                                                                      |
+-------------------------+--------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------+

方法
----

+-------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
| void                                | :ref:`ensure_control_visible<class_ScrollContainer_method_ensure_control_visible>` **(** :ref:`Control<class_Control>` control **)** |
+-------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`HScrollBar<class_HScrollBar>` | :ref:`get_h_scrollbar<class_ScrollContainer_method_get_h_scrollbar>` **(** **)**                                                     |
+-------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`VScrollBar<class_VScrollBar>` | :ref:`get_v_scrollbar<class_ScrollContainer_method_get_v_scrollbar>` **(** **)**                                                     |
+-------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+

主题属性
--------

+---------------------------------+-------------------------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`bg<class_ScrollContainer_theme_style_bg>` |
+---------------------------------+-------------------------------------------------+

信号
----

.. _class_ScrollContainer_signal_scroll_ended:

- **scroll_ended** **(** **)**

滚动停止时发出。

----

.. _class_ScrollContainer_signal_scroll_started:

- **scroll_started** **(** **)**

滚动开始时发出。

属性说明
--------

.. _class_ScrollContainer_property_follow_focus:

- :ref:`bool<class_bool>` **follow_focus**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_follow_focus(value) |
+-----------+-------------------------+
| *Getter*  | is_following_focus()    |
+-----------+-------------------------+

如果 ``true``\ ，则 ScrollContainer 将自动滚动到获得焦点的子项（包括间接子项）以确保它们完全可见。

----

.. _class_ScrollContainer_property_scroll_deadzone:

- :ref:`int<class_int>` **scroll_deadzone**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_deadzone(value) |
+-----------+---------------------+
| *Getter*  | get_deadzone()      |
+-----------+---------------------+

----

.. _class_ScrollContainer_property_scroll_horizontal:

- :ref:`int<class_int>` **scroll_horizontal**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_h_scroll(value) |
+-----------+---------------------+
| *Getter*  | get_h_scroll()      |
+-----------+---------------------+

当前水平滚动值。

----

.. _class_ScrollContainer_property_scroll_horizontal_enabled:

- :ref:`bool<class_bool>` **scroll_horizontal_enabled**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_enable_h_scroll(value) |
+-----------+----------------------------+
| *Getter*  | is_h_scroll_enabled()      |
+-----------+----------------------------+

如果 ``true``\ ，启用水平滚动。

----

.. _class_ScrollContainer_property_scroll_vertical:

- :ref:`int<class_int>` **scroll_vertical**

+-----------+---------------------+
| *Default* | ``0``               |
+-----------+---------------------+
| *Setter*  | set_v_scroll(value) |
+-----------+---------------------+
| *Getter*  | get_v_scroll()      |
+-----------+---------------------+

当前垂直滚动值。

----

.. _class_ScrollContainer_property_scroll_vertical_enabled:

- :ref:`bool<class_bool>` **scroll_vertical_enabled**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_enable_v_scroll(value) |
+-----------+----------------------------+
| *Getter*  | is_v_scroll_enabled()      |
+-----------+----------------------------+

如果 ``true``\ ，则启用垂直滚动。

方法说明
--------

.. _class_ScrollContainer_method_ensure_control_visible:

- void **ensure_control_visible** **(** :ref:`Control<class_Control>` control **)**

保证给定的 ``control`` 控件可见（必须是 ScrollContainer 的直接或间接子节点）。会被 :ref:`follow_focus<class_ScrollContainer_property_follow_focus>` 使用。

\ **注意：**\ 在同一帧内刚被加入的节点上无效。如果你希望滚动至新加的子节点，就必须使用 :ref:`SceneTree.idle_frame<class_SceneTree_signal_idle_frame>` 等待至下一帧：

::

    add_child(child_node)
    yield(get_tree(), "idle_frame")
    ensure_control_visible(child_node)

----

.. _class_ScrollContainer_method_get_h_scrollbar:

- :ref:`HScrollBar<class_HScrollBar>` **get_h_scrollbar** **(** **)**

返回此\ ``ScrollContainer``\ 的水平滚动条\ :ref:`HScrollBar<class_HScrollBar>`\ 。

\ **警告：** 这是一个必须的内部节点，移除和释放它可能会导致崩溃。如果你想禁用水平滚动条，请使用\ :ref:`scroll_horizontal_enabled<class_ScrollContainer_property_scroll_horizontal_enabled>`\ 。如果你只想隐藏它，则使用其\ :ref:`CanvasItem.visible<class_CanvasItem_property_visible>`\ 属性。

----

.. _class_ScrollContainer_method_get_v_scrollbar:

- :ref:`VScrollBar<class_VScrollBar>` **get_v_scrollbar** **(** **)**

返回此\ ``ScrollContainer``\ 的垂直滚动条\ :ref:`VScrollBar<class_VScrollBar>`\ 。

\ **警告：** 这是一个必需的内部节点，移除和释放它可能会导致崩溃。如果你想禁用垂直滚动条，请使用\ :ref:`scroll_vertical_enabled<class_ScrollContainer_property_scroll_vertical_enabled>`\ 。如果你只想隐藏它，则使用其\ :ref:`CanvasItem.visible<class_CanvasItem_property_visible>`\ 属性。

Theme Property Descriptions
---------------------------

.. _class_ScrollContainer_theme_style_bg:

- :ref:`StyleBox<class_StyleBox>` **bg**

``ScrollContainer`` 的背景 :ref:`StyleBox<class_StyleBox>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
