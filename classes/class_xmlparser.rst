:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the XMLParser.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_XMLParser:

XMLParser
=========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

用于创建\ `XML <https://en.wikipedia.org/wiki/XML>`__\ 文件解析器的低级类。

描述
----

这个类可以作为制作自定义XML解析器的基础。由于XML是一个非常灵活的标准，这个接口也是低层次的，可被应用于任何可能的模式。

方法
----

+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_attribute_count<class_XMLParser_method_get_attribute_count>` **(** **)** |const|                                                        |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_attribute_name<class_XMLParser_method_get_attribute_name>` **(** :ref:`int<class_int>` idx **)** |const|                                |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_attribute_value<class_XMLParser_method_get_attribute_value>` **(** :ref:`int<class_int>` idx **)** |const|                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_current_line<class_XMLParser_method_get_current_line>` **(** **)** |const|                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_named_attribute_value<class_XMLParser_method_get_named_attribute_value>` **(** :ref:`String<class_String>` name **)** |const|           |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_named_attribute_value_safe<class_XMLParser_method_get_named_attribute_value_safe>` **(** :ref:`String<class_String>` name **)** |const| |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_node_data<class_XMLParser_method_get_node_data>` **(** **)** |const|                                                                    |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`              | :ref:`get_node_name<class_XMLParser_method_get_node_name>` **(** **)** |const|                                                                    |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`get_node_offset<class_XMLParser_method_get_node_offset>` **(** **)** |const|                                                                |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`NodeType<enum_XMLParser_NodeType>` | :ref:`get_node_type<class_XMLParser_method_get_node_type>` **(** **)**                                                                            |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`has_attribute<class_XMLParser_method_has_attribute>` **(** :ref:`String<class_String>` name **)** |const|                                   |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`is_empty<class_XMLParser_method_is_empty>` **(** **)** |const|                                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`open<class_XMLParser_method_open>` **(** :ref:`String<class_String>` file **)**                                                             |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`open_buffer<class_XMLParser_method_open_buffer>` **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**                               |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`read<class_XMLParser_method_read>` **(** **)**                                                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`seek<class_XMLParser_method_seek>` **(** :ref:`int<class_int>` position **)**                                                               |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`skip_section<class_XMLParser_method_skip_section>` **(** **)**                                                                              |
+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_XMLParser_NodeType:

.. _class_XMLParser_constant_NODE_NONE:

.. _class_XMLParser_constant_NODE_ELEMENT:

.. _class_XMLParser_constant_NODE_ELEMENT_END:

.. _class_XMLParser_constant_NODE_TEXT:

.. _class_XMLParser_constant_NODE_COMMENT:

.. _class_XMLParser_constant_NODE_CDATA:

.. _class_XMLParser_constant_NODE_UNKNOWN:

enum **NodeType**:

- **NODE_NONE** = **0** --- 没有节点，未打开文件或缓冲区。

- **NODE_ELEMENT** = **1** --- 元素，即标签。

- **NODE_ELEMENT_END** = **2** --- 元素的末端。

- **NODE_TEXT** = **3** --- 文本节点。

- **NODE_COMMENT** = **4** --- 注释节点。

- **NODE_CDATA** = **5** --- CDATA 内容。

- **NODE_UNKNOWN** = **6** --- 未知节点。

方法说明
--------

.. _class_XMLParser_method_get_attribute_count:

- :ref:`int<class_int>` **get_attribute_count** **(** **)** |const|

获取当前元素中的属性数量。

----

.. _class_XMLParser_method_get_attribute_name:

- :ref:`String<class_String>` **get_attribute_name** **(** :ref:`int<class_int>` idx **)** |const|

获取由\ ``idx``\ 参数中的索引指定的属性名称。

----

.. _class_XMLParser_method_get_attribute_value:

- :ref:`String<class_String>` **get_attribute_value** **(** :ref:`int<class_int>` idx **)** |const|

获取由\ ``idx``\ 参数中的索引指定的属性值。

----

.. _class_XMLParser_method_get_current_line:

- :ref:`int<class_int>` **get_current_line** **(** **)** |const|

获取被解析文件中的当前行（目前未实现）。

----

.. _class_XMLParser_method_get_named_attribute_value:

- :ref:`String<class_String>` **get_named_attribute_value** **(** :ref:`String<class_String>` name **)** |const|

通过名称获取当前元素的某个属性的值。如果该元素没有该属性，将引发一个错误。

----

.. _class_XMLParser_method_get_named_attribute_value_safe:

- :ref:`String<class_String>` **get_named_attribute_value_safe** **(** :ref:`String<class_String>` name **)** |const|

通过名称获取当前元素的某个属性值。如果没有找到该属性，将返回空的\ :ref:`String<class_String>`\ 。

----

.. _class_XMLParser_method_get_node_data:

- :ref:`String<class_String>` **get_node_data** **(** **)** |const|

获取文本节点的内容。若在任何其他类型的节点中，这将引发一个错误。

----

.. _class_XMLParser_method_get_node_name:

- :ref:`String<class_String>` **get_node_name** **(** **)** |const|

获取当前元素节点的名称。如果当前节点类型既不是\ :ref:`NODE_ELEMENT<class_XMLParser_constant_NODE_ELEMENT>`\ 也不是\ :ref:`NODE_ELEMENT_END<class_XMLParser_constant_NODE_ELEMENT_END>`\ ，将引发一个错误。

----

.. _class_XMLParser_method_get_node_offset:

- :ref:`int<class_int>` **get_node_offset** **(** **)** |const|

获取当前节点从文件或缓冲区开始处的字节偏移量。

----

.. _class_XMLParser_method_get_node_type:

- :ref:`NodeType<enum_XMLParser_NodeType>` **get_node_type** **(** **)**

获取当前节点的类型。与\ :ref:`NodeType<enum_XMLParser_NodeType>`\ 常量比较。

----

.. _class_XMLParser_method_has_attribute:

- :ref:`bool<class_bool>` **has_attribute** **(** :ref:`String<class_String>` name **)** |const|

检查当前元素是否有某个属性。

----

.. _class_XMLParser_method_is_empty:

- :ref:`bool<class_bool>` **is_empty** **(** **)** |const|

检查当前元素是否为空，这只适用于完全空的标签，例如\ ``<element\>``\ 。

----

.. _class_XMLParser_method_open:

- :ref:`Error<enum_@GlobalScope_Error>` **open** **(** :ref:`String<class_String>` file **)**

打开一个XML文件进行解析。这将返回一个错误代码。

----

.. _class_XMLParser_method_open_buffer:

- :ref:`Error<enum_@GlobalScope_Error>` **open_buffer** **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**

打开一个XML原始缓冲区进行解析。这将返回一个错误代码。

----

.. _class_XMLParser_method_read:

- :ref:`Error<enum_@GlobalScope_Error>` **read** **(** **)**

读取文件的下一个节点。这将返回一个错误代码。

----

.. _class_XMLParser_method_seek:

- :ref:`Error<enum_@GlobalScope_Error>` **seek** **(** :ref:`int<class_int>` position **)**

将缓冲区光标移动到某一偏移量，注，从开始位置，并在那里读取下一个节点。这将返回一个错误代码。

----

.. _class_XMLParser_method_skip_section:

- void **skip_section** **(** **)**

跳过当前部分。如果该节点包含其他元素，它们将被忽略，光标将跳转到当前元素的结尾处。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
