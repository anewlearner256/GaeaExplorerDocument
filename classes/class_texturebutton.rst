:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TextureButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureButton:

TextureButton
=============

**Inherits:** :ref:`BaseButton<class_BaseButton>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

基于纹理的按钮。支持按下、悬停、停用和焦点状态。

描述
----

``TextureButton`` 的功能与 :ref:`Button<class_Button>` 相同，只是它使用精灵而不是 GaaeExplorer 的 :ref:`Theme<class_Theme>` 主题资源。它的创建速度更快，但它不像更复杂的 :ref:`Control<class_Control>` 那样支持本地化。

“正常”状态必须包含一个纹理（\ :ref:`texture_normal<class_TextureButton_property_texture_normal>`\ ）；其他纹理是可选的。

也请参阅 :ref:`BaseButton<class_BaseButton>`\ ，它包含了与该节点相关的通用属性和方法。

教程
----

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

属性
----

+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                            | :ref:`expand<class_TextureButton_property_expand>`                         | ``false`` |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                            | :ref:`flip_h<class_TextureButton_property_flip_h>`                         | ``false`` |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                            | :ref:`flip_v<class_TextureButton_property_flip_v>`                         | ``false`` |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`StretchMode<enum_TextureButton_StretchMode>` | :ref:`stretch_mode<class_TextureButton_property_stretch_mode>`             | ``0``     |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`BitMap<class_BitMap>`                        | :ref:`texture_click_mask<class_TextureButton_property_texture_click_mask>` |           |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                      | :ref:`texture_disabled<class_TextureButton_property_texture_disabled>`     |           |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                      | :ref:`texture_focused<class_TextureButton_property_texture_focused>`       |           |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                      | :ref:`texture_hover<class_TextureButton_property_texture_hover>`           |           |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                      | :ref:`texture_normal<class_TextureButton_property_texture_normal>`         |           |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+
| :ref:`Texture<class_Texture>`                      | :ref:`texture_pressed<class_TextureButton_property_texture_pressed>`       |           |
+----------------------------------------------------+----------------------------------------------------------------------------+-----------+

枚举
----

.. _enum_TextureButton_StretchMode:

.. _class_TextureButton_constant_STRETCH_SCALE:

.. _class_TextureButton_constant_STRETCH_TILE:

.. _class_TextureButton_constant_STRETCH_KEEP:

.. _class_TextureButton_constant_STRETCH_KEEP_CENTERED:

.. _class_TextureButton_constant_STRETCH_KEEP_ASPECT:

.. _class_TextureButton_constant_STRETCH_KEEP_ASPECT_CENTERED:

.. _class_TextureButton_constant_STRETCH_KEEP_ASPECT_COVERED:

enum **StretchMode**:

- **STRETCH_SCALE** = **0** --- 缩放以适应节点的边界矩形。

- **STRETCH_TILE** = **1** --- 在节点的边界矩形内平铺。

- **STRETCH_KEEP** = **2** --- 纹理保持它的原始尺寸，并保持在边界矩形的左上角。

- **STRETCH_KEEP_CENTERED** = **3** --- 纹理保持其原始大小，并在节点的边界矩形中保持居中。

- **STRETCH_KEEP_ASPECT** = **4** --- 缩放纹理以适应节点的边界矩形，但保持纹理的长宽比。

- **STRETCH_KEEP_ASPECT_CENTERED** = **5** --- 缩放纹理以适应节点的边界矩形，使其居中，并保持长宽比。

- **STRETCH_KEEP_ASPECT_COVERED** = **6** --- 缩放纹理，使较短的一边适应边界矩形。另一边则裁剪到节点的界限内。

属性说明
--------

.. _class_TextureButton_property_expand:

- :ref:`bool<class_bool>` **expand**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_expand(value) |
+-----------+-------------------+
| *Getter*  | get_expand()      |
+-----------+-------------------+

为 ``true`` 时纹理会使用 :ref:`stretch_mode<class_TextureButton_property_stretch_mode>` 拉伸到节点的边界矩形的边缘。为 ``false`` 时纹理将不随节点缩放。

----

.. _class_TextureButton_property_flip_h:

- :ref:`bool<class_bool>` **flip_h**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_h(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_h()    |
+-----------+-------------------+

为 ``true`` 时纹理将被水平翻转。

----

.. _class_TextureButton_property_flip_v:

- :ref:`bool<class_bool>` **flip_v**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_v(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_v()    |
+-----------+-------------------+

为 ``true`` 时纹理将被垂直翻转。

----

.. _class_TextureButton_property_stretch_mode:

- :ref:`StretchMode<enum_TextureButton_StretchMode>` **stretch_mode**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_stretch_mode(value) |
+-----------+-------------------------+
| *Getter*  | get_stretch_mode()      |
+-----------+-------------------------+

控制纹理在你调整节点的边界矩形时的行为，\ **只有在**\ :ref:`expand<class_TextureButton_property_expand>` 为 ``true`` 的情况下。把它设置为 :ref:`StretchMode<enum_TextureButton_StretchMode>` 常量之一。请看常量来了解更多。

----

.. _class_TextureButton_property_texture_click_mask:

- :ref:`BitMap<class_BitMap>` **texture_click_mask**

+----------+-----------------------+
| *Setter* | set_click_mask(value) |
+----------+-----------------------+
| *Getter* | get_click_mask()      |
+----------+-----------------------+

用于点击检测的纯黑白\ :ref:`BitMap<class_BitMap>`\ 图像。在遮罩上，白色像素代表按钮的可点击区域。可用它来创建具有弯曲形状的按钮。

----

.. _class_TextureButton_property_texture_disabled:

- :ref:`Texture<class_Texture>` **texture_disabled**

+----------+-----------------------------+
| *Setter* | set_disabled_texture(value) |
+----------+-----------------------------+
| *Getter* | get_disabled_texture()      |
+----------+-----------------------------+

节点被禁用时显示的纹理。参阅\ :ref:`BaseButton.disabled<class_BaseButton_property_disabled>`\ 。

----

.. _class_TextureButton_property_texture_focused:

- :ref:`Texture<class_Texture>` **texture_focused**

+----------+----------------------------+
| *Setter* | set_focused_texture(value) |
+----------+----------------------------+
| *Getter* | get_focused_texture()      |
+----------+----------------------------+

当节点具有鼠标或键盘焦点时显示的纹理。

----

.. _class_TextureButton_property_texture_hover:

- :ref:`Texture<class_Texture>` **texture_hover**

+----------+--------------------------+
| *Setter* | set_hover_texture(value) |
+----------+--------------------------+
| *Getter* | get_hover_texture()      |
+----------+--------------------------+

当鼠标悬停在节点上时显示的纹理。

----

.. _class_TextureButton_property_texture_normal:

- :ref:`Texture<class_Texture>` **texture_normal**

+----------+---------------------------+
| *Setter* | set_normal_texture(value) |
+----------+---------------------------+
| *Getter* | get_normal_texture()      |
+----------+---------------------------+

节点\ **不处于**\ 禁用、聚焦、悬停、按下状态时，默认显示的纹理。

----

.. _class_TextureButton_property_texture_pressed:

- :ref:`Texture<class_Texture>` **texture_pressed**

+----------+----------------------------+
| *Setter* | set_pressed_texture(value) |
+----------+----------------------------+
| *Getter* | get_pressed_texture()      |
+----------+----------------------------+

如果节点有键盘焦点且玩家按下回车键，或者玩家按下 :ref:`BaseButton.shortcut<class_BaseButton_property_shortcut>` 键，则鼠标悬停在节点上时显示的纹理。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
