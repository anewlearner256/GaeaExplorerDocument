:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the OpenSimplexNoise.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_OpenSimplexNoise:

OpenSimplexNoise
================

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

基于Open Simplex的噪声发生器。

描述
----

这个资源允许你配置和采样一个分形噪声空间。下面是一个简短的使用例子，它配置了一个OpenSimplexNoise，并在不同的位置和维度上得到采样。

::

    var noise = OpenSimplexNoise.new()
    
    # Configure
    noise.seed = randi()
    noise.octaves = 4
    noise.period = 20.0
    noise.persistence = 0.8
    
    # Sample
    print("Values:")
    print(noise.get_noise_2d(1.0, 1.0))
    print(noise.get_noise_3d(0.5, 3.0, 15.0))
    print(noise.get_noise_4d(0.5, 1.9, 4.7, 0.0))

属性
----

+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`lacunarity<class_OpenSimplexNoise_property_lacunarity>`   | ``2.0``  |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`int<class_int>`     | :ref:`octaves<class_OpenSimplexNoise_property_octaves>`         | ``3``    |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`period<class_OpenSimplexNoise_property_period>`           | ``64.0`` |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`float<class_float>` | :ref:`persistence<class_OpenSimplexNoise_property_persistence>` | ``0.5``  |
+---------------------------+-----------------------------------------------------------------+----------+
| :ref:`int<class_int>`     | :ref:`seed<class_OpenSimplexNoise_property_seed>`               | ``0``    |
+---------------------------+-----------------------------------------------------------------+----------+

方法
----

+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>` | :ref:`get_image<class_OpenSimplexNoise_method_get_image>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`Vector2<class_Vector2>` noise_offset=Vector2( 0, 0 ) **)** |const|    |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_1d<class_OpenSimplexNoise_method_get_noise_1d>` **(** :ref:`float<class_float>` x **)** |const|                                                                                        |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_2d<class_OpenSimplexNoise_method_get_noise_2d>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)** |const|                                                           |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_2dv<class_OpenSimplexNoise_method_get_noise_2dv>` **(** :ref:`Vector2<class_Vector2>` pos **)** |const|                                                                                |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_3d<class_OpenSimplexNoise_method_get_noise_3d>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z **)** |const|                              |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_3dv<class_OpenSimplexNoise_method_get_noise_3dv>` **(** :ref:`Vector3<class_Vector3>` pos **)** |const|                                                                                |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`get_noise_4d<class_OpenSimplexNoise_method_get_noise_4d>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z, :ref:`float<class_float>` w **)** |const| |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Image<class_Image>` | :ref:`get_seamless_image<class_OpenSimplexNoise_method_get_seamless_image>` **(** :ref:`int<class_int>` size **)** |const|                                                                             |
+---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_OpenSimplexNoise_property_lacunarity:

- :ref:`float<class_float>` **lacunarity**

+-----------+-----------------------+
| *Default* | ``2.0``               |
+-----------+-----------------------+
| *Setter*  | set_lacunarity(value) |
+-----------+-----------------------+
| *Getter*  | get_lacunarity()      |
+-----------+-----------------------+

在 :ref:`octaves<class_OpenSimplexNoise_property_octaves>` 之间的周期差异。

----

.. _class_OpenSimplexNoise_property_octaves:

- :ref:`int<class_int>` **octaves**

+-----------+--------------------+
| *Default* | ``3``              |
+-----------+--------------------+
| *Setter*  | set_octaves(value) |
+-----------+--------------------+
| *Getter*  | get_octaves()      |
+-----------+--------------------+

采样得到分形噪声的OpenSimplex噪声层数。更高的值导致更详细的噪声，但需要更多的时间来生成。

\ **备注:**\ 最大值为9。

----

.. _class_OpenSimplexNoise_property_period:

- :ref:`float<class_float>` **period**

+-----------+-------------------+
| *Default* | ``64.0``          |
+-----------+-------------------+
| *Setter*  | set_period(value) |
+-----------+-------------------+
| *Getter*  | get_period()      |
+-----------+-------------------+

基本八度的周期。较低的周期会导致更高频率的噪声(在相同距离上的值变化更多)。

----

.. _class_OpenSimplexNoise_property_persistence:

- :ref:`float<class_float>` **persistence**

+-----------+------------------------+
| *Default* | ``0.5``                |
+-----------+------------------------+
| *Setter*  | set_persistence(value) |
+-----------+------------------------+
| *Getter*  | get_persistence()      |
+-----------+------------------------+

不同八度音阶的贡献因子。\ ``persistence``\ 值为1表示所有的八度有相同的贡献，值为0.5表示每个八度的贡献是前一个的一半。

----

.. _class_OpenSimplexNoise_property_seed:

- :ref:`int<class_int>` **seed**

+-----------+-----------------+
| *Default* | ``0``           |
+-----------+-----------------+
| *Setter*  | set_seed(value) |
+-----------+-----------------+
| *Getter*  | get_seed()      |
+-----------+-----------------+

用于生成随机值的种子，不同的种子将生成不同的噪声图。

方法说明
--------

.. _class_OpenSimplexNoise_method_get_image:

- :ref:`Image<class_Image>` **get_image** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`Vector2<class_Vector2>` noise_offset=Vector2( 0, 0 ) **)** |const|

根据当前的噪声参数，生成一个\ :ref:`Image.FORMAT_L8<class_Image_constant_FORMAT_L8>`\ 格式的噪声图像，需要指定其\ ``width`` 和 ``height``\ 。如果指定了\ ``noise_offset``\ ，那么偏移值将作为生成的噪声左上角的坐标。

----

.. _class_OpenSimplexNoise_method_get_noise_1d:

- :ref:`float<class_float>` **get_noise_1d** **(** :ref:`float<class_float>` x **)** |const|

返回给定x坐标处的一维噪声值\ ``[-1,1]``\ 。

\ **注意：**\ 这个方法实际上返回的是固定Y坐标值为0.0的二维噪声值\ ``[-1,1]``\ 。

----

.. _class_OpenSimplexNoise_method_get_noise_2d:

- :ref:`float<class_float>` **get_noise_2d** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)** |const|

返回给定位置的2D噪声值\ ``[-1,1]``\ 。

----

.. _class_OpenSimplexNoise_method_get_noise_2dv:

- :ref:`float<class_float>` **get_noise_2dv** **(** :ref:`Vector2<class_Vector2>` pos **)** |const|

返回给定位置的2D噪声值\ ``[-1,1]``\ 。

----

.. _class_OpenSimplexNoise_method_get_noise_3d:

- :ref:`float<class_float>` **get_noise_3d** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z **)** |const|

返回在给定位置的3D噪声值\ ``[-1,1]``\ 。

----

.. _class_OpenSimplexNoise_method_get_noise_3dv:

- :ref:`float<class_float>` **get_noise_3dv** **(** :ref:`Vector3<class_Vector3>` pos **)** |const|

返回在给定位置的3D噪声值\ ``[-1,1]``\ 。

----

.. _class_OpenSimplexNoise_method_get_noise_4d:

- :ref:`float<class_float>` **get_noise_4d** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z, :ref:`float<class_float>` w **)** |const|

返回指定位置的4D噪声值\ ``[-1,1]``\ 。

----

.. _class_OpenSimplexNoise_method_get_seamless_image:

- :ref:`Image<class_Image>` **get_seamless_image** **(** :ref:`int<class_int>` size **)** |const|

根据当前的噪声参数，以 :ref:`Image.FORMAT_L8<class_Image_constant_FORMAT_L8>` 格式生成可平铺噪声图像。生成的无缝图像始终是方形的（\ ``size``\ × ``size``\ ）。

\ **注意：** 与非无缝噪声相比，无缝噪声的对比度较低。。这是由于噪声使用更高维度来生成无缝噪声的方式。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
