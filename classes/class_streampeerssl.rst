:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the StreamPeerSSL.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_StreamPeerSSL:

StreamPeerSSL
=============

**Inherits:** :ref:`StreamPeer<class_StreamPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

SSL流对等体。

描述
----

SSL 流对等体。此对象可用于连接到 SSL 服务器或接受单个 SSL 客户端连接。

教程
----

- :doc:`../tutorials/networking/ssl_certificates`

属性
----

+-------------------------+----------------------------------------------------------------------------+----------+
| :ref:`bool<class_bool>` | :ref:`blocking_handshake<class_StreamPeerSSL_property_blocking_handshake>` | ``true`` |
+-------------------------+----------------------------------------------------------------------------+----------+

方法
----

+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`accept_stream<class_StreamPeerSSL_method_accept_stream>` **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`CryptoKey<class_CryptoKey>` private_key, :ref:`X509Certificate<class_X509Certificate>` certificate, :ref:`X509Certificate<class_X509Certificate>` chain=null **)**      |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`connect_to_stream<class_StreamPeerSSL_method_connect_to_stream>` **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`bool<class_bool>` validate_certs=false, :ref:`String<class_String>` for_hostname="", :ref:`X509Certificate<class_X509Certificate>` valid_certificate=null **)** |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`disconnect_from_stream<class_StreamPeerSSL_method_disconnect_from_stream>` **(** **)**                                                                                                                                                                                                   |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Status<enum_StreamPeerSSL_Status>` | :ref:`get_status<class_StreamPeerSSL_method_get_status>` **(** **)** |const|                                                                                                                                                                                                                   |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                     | :ref:`poll<class_StreamPeerSSL_method_poll>` **(** **)**                                                                                                                                                                                                                                       |
+------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_StreamPeerSSL_Status:

.. _class_StreamPeerSSL_constant_STATUS_DISCONNECTED:

.. _class_StreamPeerSSL_constant_STATUS_HANDSHAKING:

.. _class_StreamPeerSSL_constant_STATUS_CONNECTED:

.. _class_StreamPeerSSL_constant_STATUS_ERROR:

.. _class_StreamPeerSSL_constant_STATUS_ERROR_HOSTNAME_MISMATCH:

enum **Status**:

- **STATUS_DISCONNECTED** = **0** --- 表示已断开连接的 ``StreamPeerSSL`` 的状态。

- **STATUS_HANDSHAKING** = **1** --- 代表在握手期间\ ``StreamPeerSSL``\ 的状态。

- **STATUS_CONNECTED** = **2** --- 表示连接到主机的 ``StreamPeerSSL`` 的状态。

- **STATUS_ERROR** = **3** --- 代表\ ``StreamPeerSSL``\ 处于错误状态的状态。

- **STATUS_ERROR_HOSTNAME_MISMATCH** = **4** --- 一种错误状态，显示主机提交的SSL证书域与请求验证的域不匹配。

属性说明
--------

.. _class_StreamPeerSSL_property_blocking_handshake:

- :ref:`bool<class_bool>` **blocking_handshake**

+-----------+---------------------------------------+
| *Default* | ``true``                              |
+-----------+---------------------------------------+
| *Setter*  | set_blocking_handshake_enabled(value) |
+-----------+---------------------------------------+
| *Getter*  | is_blocking_handshake_enabled()       |
+-----------+---------------------------------------+

方法说明
--------

.. _class_StreamPeerSSL_method_accept_stream:

- :ref:`Error<enum_@GlobalScope_Error>` **accept_stream** **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`CryptoKey<class_CryptoKey>` private_key, :ref:`X509Certificate<class_X509Certificate>` certificate, :ref:`X509Certificate<class_X509Certificate>` chain=null **)**

使用给定的 ``private_key`` 接受对等连接作为服务器，并向客户端提供给定的 ``certificate``\ 。您可以传递可选的 ``chain`` 参数以提供额外的 CA 链信息以及证书。

----

.. _class_StreamPeerSSL_method_connect_to_stream:

- :ref:`Error<enum_@GlobalScope_Error>` **connect_to_stream** **(** :ref:`StreamPeer<class_StreamPeer>` stream, :ref:`bool<class_bool>` validate_certs=false, :ref:`String<class_String>` for_hostname="", :ref:`X509Certificate<class_X509Certificate>` valid_certificate=null **)**

使用底层 :ref:`StreamPeer<class_StreamPeer>` ``stream`` 连接到对等点。如果 ``validate_certs`` 是 ``true``\ ，\ ``StreamPeerSSL`` 将验证对等方提供的证书是否与 ``for_hostname`` 匹配。

\ **注意：** 由于浏览器限制，HTML5 导出不支持指定自定义 ``valid_certificate``\ 。

----

.. _class_StreamPeerSSL_method_disconnect_from_stream:

- void **disconnect_from_stream** **(** **)**

与主机断开连接。

----

.. _class_StreamPeerSSL_method_get_status:

- :ref:`Status<enum_StreamPeerSSL_Status>` **get_status** **(** **)** |const|

返回连接的状态。有关值，请参阅\ :ref:`Status<enum_StreamPeerSSL_Status>`\ 。

----

.. _class_StreamPeerSSL_method_poll:

- void **poll** **(** **)**

轮询连接以检查传入的字节。在 :ref:`StreamPeer.get_available_bytes<class_StreamPeer_method_get_available_bytes>` 之前调用它以使其正常工作。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
