:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the PoolIntArray.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_PoolIntArray:

PoolIntArray
============

整数\ :ref:`int<class_int>`\ 的\ :ref:`Array<class_Array>`\ 的集合。

描述
----

一个专门用于保存整数值的\ :ref:`Array<class_Array>`\ （\ :ref:`int<class_int>`\ ）。对内存的使用进行了优化，不会使内存碎片化。

\ **注意:** 这种类型是通过值传递的，而不是引用。

\ **注意:** 这个类型仅限于有符号的32位整数，这意味着它只能在\ ``[-2^31, 2^31 - 1]``\ 的区间取值，即\ ``[-2147483648, 2147483647]``\ 。超过这些界限就会被包起来。相比之下，\ :ref:`int<class_int>`\ 使用有符号的64位整数，可以容纳大得多的值。

方法
----

+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolIntArray<class_PoolIntArray>` | :ref:`PoolIntArray<class_PoolIntArray_method_PoolIntArray>` **(** :ref:`Array<class_Array>` from **)**                |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`append<class_PoolIntArray_method_append>` **(** :ref:`int<class_int>` integer **)**                             |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`append_array<class_PoolIntArray_method_append_array>` **(** :ref:`PoolIntArray<class_PoolIntArray>` array **)** |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                 | :ref:`empty<class_PoolIntArray_method_empty>` **(** **)**                                                             |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                   | :ref:`insert<class_PoolIntArray_method_insert>` **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` integer **)**  |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`invert<class_PoolIntArray_method_invert>` **(** **)**                                                           |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`push_back<class_PoolIntArray_method_push_back>` **(** :ref:`int<class_int>` integer **)**                       |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`remove<class_PoolIntArray_method_remove>` **(** :ref:`int<class_int>` idx **)**                                 |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`resize<class_PoolIntArray_method_resize>` **(** :ref:`int<class_int>` idx **)**                                 |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`set<class_PoolIntArray_method_set>` **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` integer **)**        |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                   | :ref:`size<class_PoolIntArray_method_size>` **(** **)**                                                               |
+-----------------------------------------+-----------------------------------------------------------------------------------------------------------------------+

方法说明
--------

.. _class_PoolIntArray_method_PoolIntArray:

- :ref:`PoolIntArray<class_PoolIntArray>` **PoolIntArray** **(** :ref:`Array<class_Array>` from **)**

构建新的\ ``PoolIntArray``\ 。你可以选择传入一个通用的\ :ref:`Array<class_Array>`\ ，它将被转换。

----

.. _class_PoolIntArray_method_append:

- void **append** **(** :ref:`int<class_int>` integer **)**

向数组末尾追加一个元素（\ :ref:`push_back<class_PoolIntArray_method_push_back>` 的别名）。

----

.. _class_PoolIntArray_method_append_array:

- void **append_array** **(** :ref:`PoolIntArray<class_PoolIntArray>` array **)**

在这个数组的最后添加\ ``PoolIntArray``\ 。

----

.. _class_PoolIntArray_method_empty:

- :ref:`bool<class_bool>` **empty** **(** **)**

该数组为空时，返回 ``true``\ 。

----

.. _class_PoolIntArray_method_insert:

- :ref:`int<class_int>` **insert** **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` integer **)**

在数组中的指定位置插入一个新的int。这个位置必须是有效的，或者在数组的末端（\ ``idx == size()``\ ）。

----

.. _class_PoolIntArray_method_invert:

- void **invert** **(** **)**

将数组中的元素逆序排列。

----

.. _class_PoolIntArray_method_push_back:

- void **push_back** **(** :ref:`int<class_int>` integer **)**

将一个值添加到数组中。

----

.. _class_PoolIntArray_method_remove:

- void **remove** **(** :ref:`int<class_int>` idx **)**

从数组中删除位于索引的元素。

----

.. _class_PoolIntArray_method_resize:

- void **resize** **(** :ref:`int<class_int>` idx **)**

设置数组的大小。如果数组增长，则保留数组末尾的元素。如果数组缩小，则将数组截断为新大小。

\ **注意：** 添加的元素不会自动初始化为 0，并且会包含垃圾，即不确定值。

----

.. _class_PoolIntArray_method_set:

- void **set** **(** :ref:`int<class_int>` idx, :ref:`int<class_int>` integer **)**

更改给定索引处的 int。

----

.. _class_PoolIntArray_method_size:

- :ref:`int<class_int>` **size** **(** **)**

返回数组大小。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
