:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the AudioStreamPlayer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioStreamPlayer:

AudioStreamPlayer
=================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

非定位地播放音频。

描述
----

以非位置方式支持播放音频流。

要在位置上播放音频，请使用\ :ref:`AudioStreamPlayer2D<class_AudioStreamPlayer2D>`\ 或\ :ref:`AudioStreamPlayer3D<class_AudioStreamPlayer3D>`\ 而不是\ ``AudioStreamPlayer``\ 。

教程
----

- :doc:`Audio streams <../tutorials/audio/audio_streams>`

- `2D Dodge The Creeps Demo <https://godotengine.org/asset-library/asset/515>`__

- `Audio Device Changer Demo <https://godotengine.org/asset-library/asset/525>`__

- `Audio Generator Demo <https://godotengine.org/asset-library/asset/526>`__

- `Audio Mic Record Demo <https://godotengine.org/asset-library/asset/527>`__

- `Audio Spectrum Demo <https://godotengine.org/asset-library/asset/528>`__

属性
----

+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`                            | :ref:`autoplay<class_AudioStreamPlayer_property_autoplay>`           | ``false``    |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`String<class_String>`                        | :ref:`bus<class_AudioStreamPlayer_property_bus>`                     | ``"Master"`` |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`MixTarget<enum_AudioStreamPlayer_MixTarget>` | :ref:`mix_target<class_AudioStreamPlayer_property_mix_target>`       | ``0``        |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`                          | :ref:`pitch_scale<class_AudioStreamPlayer_property_pitch_scale>`     | ``1.0``      |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`                            | :ref:`playing<class_AudioStreamPlayer_property_playing>`             | ``false``    |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`AudioStream<class_AudioStream>`              | :ref:`stream<class_AudioStreamPlayer_property_stream>`               |              |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`                            | :ref:`stream_paused<class_AudioStreamPlayer_property_stream_paused>` | ``false``    |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`                          | :ref:`volume_db<class_AudioStreamPlayer_property_volume_db>`         | ``0.0``      |
+----------------------------------------------------+----------------------------------------------------------------------+--------------+

方法
----

+-------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                             | :ref:`get_playback_position<class_AudioStreamPlayer_method_get_playback_position>` **(** **)**           |
+-------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| :ref:`AudioStreamPlayback<class_AudioStreamPlayback>` | :ref:`get_stream_playback<class_AudioStreamPlayer_method_get_stream_playback>` **(** **)**               |
+-------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| void                                                  | :ref:`play<class_AudioStreamPlayer_method_play>` **(** :ref:`float<class_float>` from_position=0.0 **)** |
+-------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| void                                                  | :ref:`seek<class_AudioStreamPlayer_method_seek>` **(** :ref:`float<class_float>` to_position **)**       |
+-------------------------------------------------------+----------------------------------------------------------------------------------------------------------+
| void                                                  | :ref:`stop<class_AudioStreamPlayer_method_stop>` **(** **)**                                             |
+-------------------------------------------------------+----------------------------------------------------------------------------------------------------------+

信号
----

.. _class_AudioStreamPlayer_signal_finished:

- **finished** **(** **)**

当音频停止播放时发出。

枚举
----

.. _enum_AudioStreamPlayer_MixTarget:

.. _class_AudioStreamPlayer_constant_MIX_TARGET_STEREO:

.. _class_AudioStreamPlayer_constant_MIX_TARGET_SURROUND:

.. _class_AudioStreamPlayer_constant_MIX_TARGET_CENTER:

enum **MixTarget**:

- **MIX_TARGET_STEREO** = **0** --- 音频将只在第一个频道播放。

- **MIX_TARGET_SURROUND** = **1** --- 音频将在所有环绕声频道播放。

- **MIX_TARGET_CENTER** = **2** --- 音频将在第二通道，也就是通常的中央播放。

属性说明
--------

.. _class_AudioStreamPlayer_property_autoplay:

- :ref:`bool<class_bool>` **autoplay**

+-----------+-----------------------+
| *Default* | ``false``             |
+-----------+-----------------------+
| *Setter*  | set_autoplay(value)   |
+-----------+-----------------------+
| *Getter*  | is_autoplay_enabled() |
+-----------+-----------------------+

如果\ ``true``\ ，则在添加到场景树时播放音频。

----

.. _class_AudioStreamPlayer_property_bus:

- :ref:`String<class_String>` **bus**

+-----------+----------------+
| *Default* | ``"Master"``   |
+-----------+----------------+
| *Setter*  | set_bus(value) |
+-----------+----------------+
| *Getter*  | get_bus()      |
+-----------+----------------+

播放此音频的总线。

----

.. _class_AudioStreamPlayer_property_mix_target:

- :ref:`MixTarget<enum_AudioStreamPlayer_MixTarget>` **mix_target**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_mix_target(value) |
+-----------+-----------------------+
| *Getter*  | get_mix_target()      |
+-----------+-----------------------+

如果音频配置有两个以上的扬声器，则设置目标通道。请参阅\ :ref:`MixTarget<enum_AudioStreamPlayer_MixTarget>`\ 常量。

----

.. _class_AudioStreamPlayer_property_pitch_scale:

- :ref:`float<class_float>` **pitch_scale**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_pitch_scale(value) |
+-----------+------------------------+
| *Getter*  | get_pitch_scale()      |
+-----------+------------------------+

音频的音高和节奏，作为音频样本的采样率的倍数。

----

.. _class_AudioStreamPlayer_property_playing:

- :ref:`bool<class_bool>` **playing**

+-----------+--------------+
| *Default* | ``false``    |
+-----------+--------------+
| *Getter*  | is_playing() |
+-----------+--------------+

如果\ ``true``\ ，则播放音频。

----

.. _class_AudioStreamPlayer_property_stream:

- :ref:`AudioStream<class_AudioStream>` **stream**

+----------+-------------------+
| *Setter* | set_stream(value) |
+----------+-------------------+
| *Getter* | get_stream()      |
+----------+-------------------+

要播放的\ :ref:`AudioStream<class_AudioStream>`\ 对象。

----

.. _class_AudioStreamPlayer_property_stream_paused:

- :ref:`bool<class_bool>` **stream_paused**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_stream_paused(value) |
+-----------+--------------------------+
| *Getter*  | get_stream_paused()      |
+-----------+--------------------------+

如果 ``true``\ ，则暂停播放。您可以通过将 ``stream_paused`` 设置为 ``false`` 来恢复播放。

----

.. _class_AudioStreamPlayer_property_volume_db:

- :ref:`float<class_float>` **volume_db**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_volume_db(value) |
+-----------+----------------------+
| *Getter*  | get_volume_db()      |
+-----------+----------------------+

音量，单位为dB。

方法说明
--------

.. _class_AudioStreamPlayer_method_get_playback_position:

- :ref:`float<class_float>` **get_playback_position** **(** **)**

返回\ :ref:`AudioStream<class_AudioStream>`\ 中的位置，单位为秒。

----

.. _class_AudioStreamPlayer_method_get_stream_playback:

- :ref:`AudioStreamPlayback<class_AudioStreamPlayback>` **get_stream_playback** **(** **)**

返回与此\ ``AudioStreamPlayer``\ 关联的\ :ref:`AudioStreamPlayback<class_AudioStreamPlayback>`\ 对象。

----

.. _class_AudioStreamPlayer_method_play:

- void **play** **(** :ref:`float<class_float>` from_position=0.0 **)**

从给定的\ ``from_position``\ 播放音频，以秒为单位。

----

.. _class_AudioStreamPlayer_method_seek:

- void **seek** **(** :ref:`float<class_float>` to_position **)**

设置音频的播放位置，以秒为单位。

----

.. _class_AudioStreamPlayer_method_stop:

- void **stop** **(** **)**

停止音频。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
