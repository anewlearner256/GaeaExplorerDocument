:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the VideoPlayer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_VideoPlayer:

VideoPlayer
===========

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

用于播放视频流的控件。

描述
----

用于播放使用\ :ref:`VideoStream<class_VideoStream>`\ 资源视频流的控件节点。

支持的视频格式有 `WebM <https://www.webmproject.org/>`__ (``.webm``, :ref:`VideoStreamWebm<class_VideoStreamWebm>`), `Ogg Theora <https://www.theora.org/>`__ (``.ogv``, :ref:`VideoStreamTheora<class_VideoStreamTheora>` ) 以及任何通过GDNative插件使用\ :ref:`VideoStreamGDNative<class_VideoStreamGDNative>`\ 公开的格式。

\ **注意：** 由于一个错误，VideoPlayer还不支持本地化重映射。

\ **警告：** 在HTML5上，视频播放\ *将*\ 表现不佳，因为缺少特定架构的汇编优化，特别是对于VP8/VP9。

属性
----

+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`int<class_int>`                 | :ref:`audio_track<class_VideoPlayer_property_audio_track>`         | ``0``        |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`               | :ref:`autoplay<class_VideoPlayer_property_autoplay>`               | ``false``    |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`int<class_int>`                 | :ref:`buffering_msec<class_VideoPlayer_property_buffering_msec>`   | ``500``      |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`String<class_String>`           | :ref:`bus<class_VideoPlayer_property_bus>`                         | ``"Master"`` |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`               | :ref:`expand<class_VideoPlayer_property_expand>`                   | ``true``     |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`               | :ref:`paused<class_VideoPlayer_property_paused>`                   | ``false``    |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`VideoStream<class_VideoStream>` | :ref:`stream<class_VideoPlayer_property_stream>`                   |              |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`stream_position<class_VideoPlayer_property_stream_position>` |              |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`volume<class_VideoPlayer_property_volume>`                   |              |
+---------------------------------------+--------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`volume_db<class_VideoPlayer_property_volume_db>`             | ``0.0``      |
+---------------------------------------+--------------------------------------------------------------------+--------------+

方法
----

+-------------------------------+------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`   | :ref:`get_stream_name<class_VideoPlayer_method_get_stream_name>` **(** **)** |const|     |
+-------------------------------+------------------------------------------------------------------------------------------+
| :ref:`Texture<class_Texture>` | :ref:`get_video_texture<class_VideoPlayer_method_get_video_texture>` **(** **)** |const| |
+-------------------------------+------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_playing<class_VideoPlayer_method_is_playing>` **(** **)** |const|               |
+-------------------------------+------------------------------------------------------------------------------------------+
| void                          | :ref:`play<class_VideoPlayer_method_play>` **(** **)**                                   |
+-------------------------------+------------------------------------------------------------------------------------------+
| void                          | :ref:`stop<class_VideoPlayer_method_stop>` **(** **)**                                   |
+-------------------------------+------------------------------------------------------------------------------------------+

信号
----

.. _class_VideoPlayer_signal_finished:

- **finished** **(** **)**

播放结束时触发。

属性说明
--------

.. _class_VideoPlayer_property_audio_track:

- :ref:`int<class_int>` **audio_track**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_audio_track(value) |
+-----------+------------------------+
| *Getter*  | get_audio_track()      |
+-----------+------------------------+

要播放的嵌入式音轨。

----

.. _class_VideoPlayer_property_autoplay:

- :ref:`bool<class_bool>` **autoplay**

+-----------+---------------------+
| *Default* | ``false``           |
+-----------+---------------------+
| *Setter*  | set_autoplay(value) |
+-----------+---------------------+
| *Getter*  | has_autoplay()      |
+-----------+---------------------+

如果\ ``true``\ ，当场景加载时开始播放。

----

.. _class_VideoPlayer_property_buffering_msec:

- :ref:`int<class_int>` **buffering_msec**

+-----------+---------------------------+
| *Default* | ``500``                   |
+-----------+---------------------------+
| *Setter*  | set_buffering_msec(value) |
+-----------+---------------------------+
| *Getter*  | get_buffering_msec()      |
+-----------+---------------------------+

播放时存储在缓冲区的时间，以毫秒计。

----

.. _class_VideoPlayer_property_bus:

- :ref:`String<class_String>` **bus**

+-----------+----------------+
| *Default* | ``"Master"``   |
+-----------+----------------+
| *Setter*  | set_bus(value) |
+-----------+----------------+
| *Getter*  | get_bus()      |
+-----------+----------------+

用于声音播放的音频总线。

----

.. _class_VideoPlayer_property_expand:

- :ref:`bool<class_bool>` **expand**

+-----------+-------------------+
| *Default* | ``true``          |
+-----------+-------------------+
| *Setter*  | set_expand(value) |
+-----------+-------------------+
| *Getter*  | has_expand()      |
+-----------+-------------------+

如果\ ``true``\ ，视频会缩放到控件的尺寸。否则，控件的最小尺寸将被自动调整以匹配视频流的尺寸。

----

.. _class_VideoPlayer_property_paused:

- :ref:`bool<class_bool>` **paused**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_paused(value) |
+-----------+-------------------+
| *Getter*  | is_paused()       |
+-----------+-------------------+

如果\ ``true``\ ，则暂停视频。

----

.. _class_VideoPlayer_property_stream:

- :ref:`VideoStream<class_VideoStream>` **stream**

+----------+-------------------+
| *Setter* | set_stream(value) |
+----------+-------------------+
| *Getter* | get_stream()      |
+----------+-------------------+

指定的视频流。支持的格式见描述。

----

.. _class_VideoPlayer_property_stream_position:

- :ref:`float<class_float>` **stream_position**

+----------+----------------------------+
| *Setter* | set_stream_position(value) |
+----------+----------------------------+
| *Getter* | get_stream_position()      |
+----------+----------------------------+

流的当前位置，以秒为单位。

\ **注意：** 更改此值不会产生任何影响，因为搜索尚未实现，除了由 GDNative 附加组件实现的视频格式。

----

.. _class_VideoPlayer_property_volume:

- :ref:`float<class_float>` **volume**

+----------+-------------------+
| *Setter* | set_volume(value) |
+----------+-------------------+
| *Getter* | get_volume()      |
+----------+-------------------+

音频音量为线性值。

----

.. _class_VideoPlayer_property_volume_db:

- :ref:`float<class_float>` **volume_db**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_volume_db(value) |
+-----------+----------------------+
| *Getter*  | get_volume_db()      |
+-----------+----------------------+

音频音量，单位是dB。

方法说明
--------

.. _class_VideoPlayer_method_get_stream_name:

- :ref:`String<class_String>` **get_stream_name** **(** **)** |const|

返回视频流的名称，如果没有指定视频流，则返回\ ``"<No Stream>"``\ 。

----

.. _class_VideoPlayer_method_get_video_texture:

- :ref:`Texture<class_Texture>` **get_video_texture** **(** **)** |const|

将当前帧作为\ :ref:`Texture<class_Texture>`\ 返回。

----

.. _class_VideoPlayer_method_is_playing:

- :ref:`bool<class_bool>` **is_playing** **(** **)** |const|

如果视频正在播放，返回\ ``true`` 。

\ **注意：** 如果在播放过程中暂停，视频仍被认为在播放。

----

.. _class_VideoPlayer_method_play:

- void **play** **(** **)**

从头开始播放视频。如果视频暂停，这不会取消暂停。

----

.. _class_VideoPlayer_method_stop:

- void **stop** **(** **)**

停止视频播放并将视频流位置设置为0。

\ **注意：** 虽然视频流位置将被设置为0，但视频流的第一帧不会成为当前帧。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
