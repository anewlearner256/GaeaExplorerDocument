:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the GeometryInstance.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_GeometryInstance:

GeometryInstance
================

**Inherits:** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CPUParticles<class_CPUParticles>`, :ref:`CSGShape<class_CSGShape>`, :ref:`ImmediateGeometry<class_ImmediateGeometry>`, :ref:`MeshInstance<class_MeshInstance>`, :ref:`MultiMeshInstance<class_MultiMeshInstance>`, :ref:`Particles<class_Particles>`, :ref:`SpriteBase3D<class_SpriteBase3D>`

基于几何图形的视觉实例的基础节点。

描述
----

基于几何图形的视觉实例的基础节点。分享一些共同的机制，如可见性和自定义材质。

属性
----

+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`ShadowCastingSetting<enum_GeometryInstance_ShadowCastingSetting>` | :ref:`cast_shadow<class_GeometryInstance_property_cast_shadow>`               | ``1``     |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                               | :ref:`extra_cull_margin<class_GeometryInstance_property_extra_cull_margin>`   | ``0.0``   |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                                 | :ref:`generate_lightmap<class_GeometryInstance_property_generate_lightmap>`   | ``true``  |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`LightmapScale<enum_GeometryInstance_LightmapScale>`               | :ref:`lightmap_scale<class_GeometryInstance_property_lightmap_scale>`         | ``0``     |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                               | :ref:`lod_max_distance<class_GeometryInstance_property_lod_max_distance>`     | ``0.0``   |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                               | :ref:`lod_max_hysteresis<class_GeometryInstance_property_lod_max_hysteresis>` | ``0.0``   |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                               | :ref:`lod_min_distance<class_GeometryInstance_property_lod_min_distance>`     | ``0.0``   |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>`                                               | :ref:`lod_min_hysteresis<class_GeometryInstance_property_lod_min_hysteresis>` | ``0.0``   |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`Material<class_Material>`                                         | :ref:`material_overlay<class_GeometryInstance_property_material_overlay>`     |           |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`Material<class_Material>`                                         | :ref:`material_override<class_GeometryInstance_property_material_override>`   |           |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`                                                 | :ref:`use_in_baked_light<class_GeometryInstance_property_use_in_baked_light>` | ``false`` |
+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+-----------+

方法
----

+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`get_flag<class_GeometryInstance_method_get_flag>` **(** :ref:`Flags<enum_GeometryInstance_Flags>` flag **)** |const|                        |
+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_custom_aabb<class_GeometryInstance_method_set_custom_aabb>` **(** :ref:`AABB<class_AABB>` aabb **)**                                    |
+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`set_flag<class_GeometryInstance_method_set_flag>` **(** :ref:`Flags<enum_GeometryInstance_Flags>` flag, :ref:`bool<class_bool>` value **)** |
+-------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_GeometryInstance_LightmapScale:

.. _class_GeometryInstance_constant_LIGHTMAP_SCALE_1X:

.. _class_GeometryInstance_constant_LIGHTMAP_SCALE_2X:

.. _class_GeometryInstance_constant_LIGHTMAP_SCALE_4X:

.. _class_GeometryInstance_constant_LIGHTMAP_SCALE_8X:

.. _class_GeometryInstance_constant_LIGHTMAP_SCALE_MAX:

enum **LightmapScale**:

- **LIGHTMAP_SCALE_1X** = **0** --- 生成的光照贴图纹理将具有原始大小。

- **LIGHTMAP_SCALE_2X** = **1** --- 生成的光照贴图纹理将是每个轴上的 2 倍。

- **LIGHTMAP_SCALE_4X** = **2** --- 生成的光照贴图纹理将是每个轴上的 4 倍。

- **LIGHTMAP_SCALE_8X** = **3** --- 生成的光照贴图纹理将是每个轴上的 8 倍。

- **LIGHTMAP_SCALE_MAX** = **4**

----

.. _enum_GeometryInstance_ShadowCastingSetting:

.. _class_GeometryInstance_constant_SHADOW_CASTING_SETTING_OFF:

.. _class_GeometryInstance_constant_SHADOW_CASTING_SETTING_ON:

.. _class_GeometryInstance_constant_SHADOW_CASTING_SETTING_DOUBLE_SIDED:

.. _class_GeometryInstance_constant_SHADOW_CASTING_SETTING_SHADOWS_ONLY:

enum **ShadowCastingSetting**:

- **SHADOW_CASTING_SETTING_OFF** = **0** --- 将不会投射任何阴影。

- **SHADOW_CASTING_SETTING_ON** = **1** --- 将从GeometryInstance中的所有可见面投射阴影。

将考虑剔除，所以在投射阴影时，没有被渲染的面将不会被考虑在内。

- **SHADOW_CASTING_SETTING_DOUBLE_SIDED** = **2** --- 将从GeometryInstance中的所有可见面投射阴影。

不会考虑剔除，所以在投射阴影时，所有的面都会被考虑在内。

- **SHADOW_CASTING_SETTING_SHADOWS_ONLY** = **3** --- 只显示从这个物体投射出来的阴影。

换句话说，实际的网格将不可见，只有网格投影可见。

----

.. _enum_GeometryInstance_Flags:

.. _class_GeometryInstance_constant_FLAG_USE_BAKED_LIGHT:

.. _class_GeometryInstance_constant_FLAG_DRAW_NEXT_FRAME_IF_VISIBLE:

.. _class_GeometryInstance_constant_FLAG_MAX:

enum **Flags**:

- **FLAG_USE_BAKED_LIGHT** = **0** --- 将允许在使用\ :ref:`GIProbe<class_GIProbe>`\ 或\ :ref:`BakedLightmap<class_BakedLightmap>`\ 进行灯光烘焙时使用GeometryInstance几何实例。

- **FLAG_DRAW_NEXT_FRAME_IF_VISIBLE** = **1** --- 在此类中未使用，公开以与 :ref:`InstanceFlags<enum_VisualServer_InstanceFlags>` 保持一致。

- **FLAG_MAX** = **2** --- 表示\ :ref:`Flags<enum_GeometryInstance_Flags>`\ 枚举的大小。

属性说明
--------

.. _class_GeometryInstance_property_cast_shadow:

- :ref:`ShadowCastingSetting<enum_GeometryInstance_ShadowCastingSetting>` **cast_shadow**

+-----------+---------------------------------+
| *Default* | ``1``                           |
+-----------+---------------------------------+
| *Setter*  | set_cast_shadows_setting(value) |
+-----------+---------------------------------+
| *Getter*  | get_cast_shadows_setting()      |
+-----------+---------------------------------+

选择的阴影投射标志。转到 :ref:`ShadowCastingSetting<enum_GeometryInstance_ShadowCastingSetting>` 来查看该属性可能的值。

----

.. _class_GeometryInstance_property_extra_cull_margin:

- :ref:`float<class_float>` **extra_cull_margin**

+-----------+------------------------------+
| *Default* | ``0.0``                      |
+-----------+------------------------------+
| *Setter*  | set_extra_cull_margin(value) |
+-----------+------------------------------+
| *Getter*  | get_extra_cull_margin()      |
+-----------+------------------------------+

添加到 GeometryInstance 的包围盒（\ :ref:`AABB<class_AABB>`\ ）的额外距离，以增加其剔除盒。

----

.. _class_GeometryInstance_property_generate_lightmap:

- :ref:`bool<class_bool>` **generate_lightmap**

+-----------+------------------------------+
| *Default* | ``true``                     |
+-----------+------------------------------+
| *Setter*  | set_generate_lightmap(value) |
+-----------+------------------------------+
| *Getter*  | get_generate_lightmap()      |
+-----------+------------------------------+

当禁用时，计算间接光照时将考虑网格，但产生的光照贴图不会被保存。适用于仅有发光材质或阴影投射器。

----

.. _class_GeometryInstance_property_lightmap_scale:

- :ref:`LightmapScale<enum_GeometryInstance_LightmapScale>` **lightmap_scale**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_lightmap_scale(value) |
+-----------+---------------------------+
| *Getter*  | get_lightmap_scale()      |
+-----------+---------------------------+

生成的烘焙光照贴图的缩放系数。对增加某些网格实例的细节很有用。

----

.. _class_GeometryInstance_property_lod_max_distance:

- :ref:`float<class_float>` **lod_max_distance**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_lod_max_distance(value) |
+-----------+-----------------------------+
| *Getter*  | get_lod_max_distance()      |
+-----------+-----------------------------+

GeometryInstance3D的最大LOD距离。

\ **注意：** 这个属性目前没有任何作用。

----

.. _class_GeometryInstance_property_lod_max_hysteresis:

- :ref:`float<class_float>` **lod_max_hysteresis**

+-----------+-------------------------------+
| *Default* | ``0.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_lod_max_hysteresis(value) |
+-----------+-------------------------------+
| *Getter*  | get_lod_max_hysteresis()      |
+-----------+-------------------------------+

GeometryInstance3D的最大LOD 边距。

\ **注意：** 这个属性目前没有任何作用。

----

.. _class_GeometryInstance_property_lod_min_distance:

- :ref:`float<class_float>` **lod_min_distance**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_lod_min_distance(value) |
+-----------+-----------------------------+
| *Getter*  | get_lod_min_distance()      |
+-----------+-----------------------------+

GeometryInstance3D的最小LOD距离。

\ **注意：** 这个属性目前没有任何作用。

----

.. _class_GeometryInstance_property_lod_min_hysteresis:

- :ref:`float<class_float>` **lod_min_hysteresis**

+-----------+-------------------------------+
| *Default* | ``0.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_lod_min_hysteresis(value) |
+-----------+-------------------------------+
| *Getter*  | get_lod_min_hysteresis()      |
+-----------+-------------------------------+

GeometryInstance3D的最小LOD 边距。

\ **注意：** 这个属性目前没有任何作用。

----

.. _class_GeometryInstance_property_material_overlay:

- :ref:`Material<class_Material>` **material_overlay**

+----------+-----------------------------+
| *Setter* | set_material_overlay(value) |
+----------+-----------------------------+
| *Getter* | get_material_overlay()      |
+----------+-----------------------------+

The material overlay for the whole geometry.

If a material is assigned to this property, it will be rendered on top of any other active material for all the surfaces.

----

.. _class_GeometryInstance_property_material_override:

- :ref:`Material<class_Material>` **material_override**

+----------+------------------------------+
| *Setter* | set_material_override(value) |
+----------+------------------------------+
| *Getter* | get_material_override()      |
+----------+------------------------------+

整个几何体的材质覆盖。

如果一个材质被分配给这个属性，它将会被用来代替在网格的任何材质槽中设置的任何材质。

----

.. _class_GeometryInstance_property_use_in_baked_light:

- :ref:`bool<class_bool>` **use_in_baked_light**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，则在使用 :ref:`GIProbe<class_GIProbe>` 或 :ref:`BakedLightmap<class_BakedLightmap>` 烘焙灯光时将使用此 GeometryInstance。

方法说明
--------

.. _class_GeometryInstance_method_get_flag:

- :ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_GeometryInstance_Flags>` flag **)** |const|

返回为此对象设置的\ :ref:`Flags<enum_GeometryInstance_Flags>` 。

----

.. _class_GeometryInstance_method_set_custom_aabb:

- void **set_custom_aabb** **(** :ref:`AABB<class_AABB>` aabb **)**

用一个自定义的包围盒覆盖这个节点的包围盒。设置一个\ :ref:`AABB<class_AABB>`\ ，去删除它，所有字段设置为零。

----

.. _class_GeometryInstance_method_set_flag:

- void **set_flag** **(** :ref:`Flags<enum_GeometryInstance_Flags>` flag, :ref:`bool<class_bool>` value **)**

设置指定的\ :ref:`Flags<enum_GeometryInstance_Flags>`\ 。参阅\ :ref:`Flags<enum_GeometryInstance_Flags>`\ 选项。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
