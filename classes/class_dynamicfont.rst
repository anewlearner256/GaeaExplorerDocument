:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the DynamicFont.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_DynamicFont:

DynamicFont
===========

**Inherits:** :ref:`Font<class_Font>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

DynamicFont 在运行时渲染矢量字体文件。

描述
----

DynamicFont 在运行时动态渲染矢量字体文件，而不是像 :ref:`BitmapFont<class_BitmapFont>` 那样使用预渲染的纹理图集。通过放弃 :ref:`BitmapFont<class_BitmapFont>` 更快的加载时间，换取在运行时改变字体大小和间距等参数的能力。使用 :ref:`DynamicFontData<class_DynamicFontData>` 引用字体文件路径。DynamicFont 还支持定义若干备用字体，这些字体将在主字体不支持显示某个字符时使用。

DynamicFont 使用 `FreeType <https://www.freetype.org/>`__ 库进行光栅化处理。支持的格式有 TrueType（\ ``.ttf``\ ）、OpenType（\ ``.otf``\ ）和 Web Open Font Format 1（\ ``.woff``\ ）。\ *不支持* Web Open Font Format 2（\ ``.woff2``\ ）。

::

    var dynamic_font = DynamicFont.new()
    dynamic_font.font_data = load("res://BarlowCondensed-Bold.ttf")
    dynamic_font.size = 64
    $"Label".set("custom_fonts/font", dynamic_font)

\ **注意：**\ DynamicFont 尚不支持字偶距、从右到左的排版、合字、文本变形、可变字体和可选字体等功能。如果你想把可选的字体功能“烘焙”进一个 TTF 字体文件，可以使用 `FontForge <https://fontforge.org/>`__\ 。在 FontForge 中，使用\ **文件 > 生成字体**\ ，点击\ **选项**\ ，选择需要的功能，然后生成字体。

教程
----

- `3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__

属性
----

+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_bottom<class_DynamicFont_property_extra_spacing_bottom>` | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_char<class_DynamicFont_property_extra_spacing_char>`     | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_space<class_DynamicFont_property_extra_spacing_space>`   | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`extra_spacing_top<class_DynamicFont_property_extra_spacing_top>`       | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`DynamicFontData<class_DynamicFontData>` | :ref:`font_data<class_DynamicFont_property_font_data>`                       |                         |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                     | :ref:`outline_color<class_DynamicFont_property_outline_color>`               | ``Color( 1, 1, 1, 1 )`` |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`outline_size<class_DynamicFont_property_outline_size>`                 | ``0``                   |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                         | :ref:`size<class_DynamicFont_property_size>`                                 | ``16``                  |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`use_filter<class_DynamicFont_property_use_filter>`                     | ``false``               |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                       | :ref:`use_mipmaps<class_DynamicFont_property_use_mipmaps>`                   | ``false``               |
+-----------------------------------------------+------------------------------------------------------------------------------+-------------------------+

方法
----

+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`add_fallback<class_DynamicFont_method_add_fallback>` **(** :ref:`DynamicFontData<class_DynamicFontData>` data **)**                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_available_chars<class_DynamicFont_method_get_available_chars>` **(** **)** |const|                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`DynamicFontData<class_DynamicFontData>` | :ref:`get_fallback<class_DynamicFont_method_get_fallback>` **(** :ref:`int<class_int>` idx **)** |const|                                             |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_fallback_count<class_DynamicFont_method_get_fallback_count>` **(** **)** |const|                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_spacing<class_DynamicFont_method_get_spacing>` **(** :ref:`int<class_int>` type **)** |const|                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`remove_fallback<class_DynamicFont_method_remove_fallback>` **(** :ref:`int<class_int>` idx **)**                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_fallback<class_DynamicFont_method_set_fallback>` **(** :ref:`int<class_int>` idx, :ref:`DynamicFontData<class_DynamicFontData>` data **)** |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_spacing<class_DynamicFont_method_set_spacing>` **(** :ref:`int<class_int>` type, :ref:`int<class_int>` value **)**                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_DynamicFont_SpacingType:

.. _class_DynamicFont_constant_SPACING_TOP:

.. _class_DynamicFont_constant_SPACING_BOTTOM:

.. _class_DynamicFont_constant_SPACING_CHAR:

.. _class_DynamicFont_constant_SPACING_SPACE:

enum **SpacingType**:

- **SPACING_TOP** = **0** --- 顶部间距。

- **SPACING_BOTTOM** = **1** --- 底部间距。

- **SPACING_CHAR** = **2** --- 每个字符的间距。

- **SPACING_SPACE** = **3** --- 空格字符的间距。

属性说明
--------

.. _class_DynamicFont_property_extra_spacing_bottom:

- :ref:`int<class_int>` **extra_spacing_bottom**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

底部的额外间距，单位为像素。

----

.. _class_DynamicFont_property_extra_spacing_char:

- :ref:`int<class_int>` **extra_spacing_char**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

每个字符的额外间距，单位为像素。

这可以是负数，使字符之间的距离更小。

----

.. _class_DynamicFont_property_extra_spacing_space:

- :ref:`int<class_int>` **extra_spacing_space**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

空格字符的额外间距，单位是像素，除了\ :ref:`extra_spacing_char<class_DynamicFont_property_extra_spacing_char>`\ 。

这可以是负数，使字符之间的距离更小。

----

.. _class_DynamicFont_property_extra_spacing_top:

- :ref:`int<class_int>` **extra_spacing_top**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_spacing(value) |
+-----------+--------------------+
| *Getter*  | get_spacing()      |
+-----------+--------------------+

顶部的额外间距，单位为像素。

----

.. _class_DynamicFont_property_font_data:

- :ref:`DynamicFontData<class_DynamicFontData>` **font_data**

+----------+----------------------+
| *Setter* | set_font_data(value) |
+----------+----------------------+
| *Getter* | get_font_data()      |
+----------+----------------------+

字体数据。

----

.. _class_DynamicFont_property_outline_color:

- :ref:`Color<class_Color>` **outline_color**

+-----------+--------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``  |
+-----------+--------------------------+
| *Setter*  | set_outline_color(value) |
+-----------+--------------------------+
| *Getter*  | get_outline_color()      |
+-----------+--------------------------+

字体轮廓的颜色。

\ **注意：**\ 建议将此值保留为默认值，以便您可以在各个控件中对其进行调整。例如，如果在此处将轮廓设为黑色，则无法使用Label的字体轮廓调制主题项来更改其颜色。

----

.. _class_DynamicFont_property_outline_size:

- :ref:`int<class_int>` **outline_size**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_outline_size(value) |
+-----------+-------------------------+
| *Getter*  | get_outline_size()      |
+-----------+-------------------------+

字体轮廓的厚度，单位为像素（与字体大小无关）。

----

.. _class_DynamicFont_property_size:

- :ref:`int<class_int>` **size**

+-----------+-----------------+
| *Default* | ``16``          |
+-----------+-----------------+
| *Setter*  | set_size(value) |
+-----------+-----------------+
| *Getter*  | get_size()      |
+-----------+-----------------+

字体大小，单位为像素。

----

.. _class_DynamicFont_property_use_filter:

- :ref:`bool<class_bool>` **use_filter**

+-----------+-----------------------+
| *Default* | ``false``             |
+-----------+-----------------------+
| *Setter*  | set_use_filter(value) |
+-----------+-----------------------+
| *Getter*  | get_use_filter()      |
+-----------+-----------------------+

为 ``true`` 时将使用过滤功能。如果字体过度采样被禁用或无效，这将使字体在缩放时变得模糊，而非像素化。当在尺寸随时变化的控件中使用字体时，建议启用这个功能，除非是像素设计。

----

.. _class_DynamicFont_property_use_mipmaps:

- :ref:`bool<class_bool>` **use_mipmaps**

+-----------+------------------------+
| *Default* | ``false``              |
+-----------+------------------------+
| *Setter*  | set_use_mipmaps(value) |
+-----------+------------------------+
| *Getter*  | get_use_mipmaps()      |
+-----------+------------------------+

为 ``true`` 时将使用多级渐远纹理。在字体过度采样被禁用或无效时，可改善字体缩小时的表现。

方法说明
--------

.. _class_DynamicFont_method_add_fallback:

- void **add_fallback** **(** :ref:`DynamicFontData<class_DynamicFontData>` data **)**

添加一个后备字体。

----

.. _class_DynamicFont_method_get_available_chars:

- :ref:`String<class_String>` **get_available_chars** **(** **)** |const|

返回一个包含主字体和后备字体中所有可用字符的字符串。

如果多个字体中包含同一个字符，那么它在返回的字符串第一次出现的位置。

----

.. _class_DynamicFont_method_get_fallback:

- :ref:`DynamicFontData<class_DynamicFontData>` **get_fallback** **(** :ref:`int<class_int>` idx **)** |const|

返回位于索引\ ``idx``\ 处的后备字体。

----

.. _class_DynamicFont_method_get_fallback_count:

- :ref:`int<class_int>` **get_fallback_count** **(** **)** |const|

返回后备字体的数量。

----

.. _class_DynamicFont_method_get_spacing:

- :ref:`int<class_int>` **get_spacing** **(** :ref:`int<class_int>` type **)** |const|

返回给定\ ``type``\ 的间距(参阅\ :ref:`SpacingType<enum_DynamicFont_SpacingType>`)。

----

.. _class_DynamicFont_method_remove_fallback:

- void **remove_fallback** **(** :ref:`int<class_int>` idx **)**

移除位于索引\ ``idx``\ 处的后备字体。

----

.. _class_DynamicFont_method_set_fallback:

- void **set_fallback** **(** :ref:`int<class_int>` idx, :ref:`DynamicFontData<class_DynamicFontData>` data **)**

设置索引\ ``idx``\ 处的后备字体。

----

.. _class_DynamicFont_method_set_spacing:

- void **set_spacing** **(** :ref:`int<class_int>` type, :ref:`int<class_int>` value **)**

给\ ``type``\ 设置间距(参阅\ :ref:`SpacingType<enum_DynamicFont_SpacingType>`)为\ ``value``\ ，单位为像素(与字体大小无关)。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
