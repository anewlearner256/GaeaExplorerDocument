:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Tree.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Tree:

Tree
====

**Inherits:** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

控件显示项目树。

描述
----

这展示了一个可以选择、展开和折叠的项目树。该树可以有多列的自定义控件，如文本编辑、按钮和弹出窗口。它对于结构化显示和互动很有用。

树通过代码建立，使用\ :ref:`TreeItem<class_TreeItem>`\ 对象来构建结构。它们有一个单独根节点，但如果添加一个虚拟的隐藏根节点，就可以模拟多个根。

::

    func _ready():
        var tree = Tree.new()
        var root = tree.create_item()
        tree.set_hide_root(true)
        var child1 = tree.create_item(root)
        var child2 = tree.create_item(root)
        var subchild1 = tree.create_item(child1)
        subchild1.set_text(0, "Subchild1")

要遍历一个\ ``Tree``\ 对象中的所有\ :ref:`TreeItem<class_TreeItem>`\ 对象，在通过\ :ref:`get_root<class_Tree_method_get_root>`\ 获得根之后，使用\ :ref:`TreeItem.get_next<class_TreeItem_method_get_next>`\ 和\ :ref:`TreeItem.get_children<class_TreeItem_method_get_children>`\ 方法。你可以对一个\ :ref:`TreeItem<class_TreeItem>`\ 使用\ :ref:`Object.free<class_Object_method_free>`\ 来把它从\ ``Tree``\ 中移除。

属性
----

+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`allow_reselect<class_Tree_property_allow_reselect>`               | ``false``                                                                     |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`allow_rmb_select<class_Tree_property_allow_rmb_select>`           | ``false``                                                                     |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`column_titles_visible<class_Tree_property_column_titles_visible>` | ``false``                                                                     |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`columns<class_Tree_property_columns>`                             | ``1``                                                                         |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`int<class_int>`                    | :ref:`drop_mode_flags<class_Tree_property_drop_mode_flags>`             | ``0``                                                                         |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`FocusMode<enum_Control_FocusMode>` | focus_mode                                                              | ``2`` (overrides :ref:`Control<class_Control_property_focus_mode>`)           |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`hide_folding<class_Tree_property_hide_folding>`                   | ``false``                                                                     |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | :ref:`hide_root<class_Tree_property_hide_root>`                         | ``false``                                                                     |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                  | rect_clip_content                                                       | ``true`` (overrides :ref:`Control<class_Control_property_rect_clip_content>`) |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`SelectMode<enum_Tree_SelectMode>`  | :ref:`select_mode<class_Tree_property_select_mode>`                     | ``0``                                                                         |
+------------------------------------------+-------------------------------------------------------------------------+-------------------------------------------------------------------------------+

方法
----

+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`clear<class_Tree_method_clear>` **(** **)**                                                                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`create_item<class_Tree_method_create_item>` **(** :ref:`Object<class_Object>` parent=null, :ref:`int<class_int>` idx=-1 **)**                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`         | :ref:`edit_selected<class_Tree_method_edit_selected>` **(** **)**                                                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`ensure_cursor_is_visible<class_Tree_method_ensure_cursor_is_visible>` **(** **)**                                                               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_column_at_position<class_Tree_method_get_column_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                    |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`     | :ref:`get_column_title<class_Tree_method_get_column_title>` **(** :ref:`int<class_int>` column **)** |const|                                          |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_column_width<class_Tree_method_get_column_width>` **(** :ref:`int<class_int>` column **)** |const|                                          |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`       | :ref:`get_custom_popup_rect<class_Tree_method_get_custom_popup_rect>` **(** **)** |const|                                                             |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_drop_section_at_position<class_Tree_method_get_drop_section_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|        |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_edited<class_Tree_method_get_edited>` **(** **)** |const|                                                                                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_edited_column<class_Tree_method_get_edited_column>` **(** **)** |const|                                                                     |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`       | :ref:`get_item_area_rect<class_Tree_method_get_item_area_rect>` **(** :ref:`Object<class_Object>` item, :ref:`int<class_int>` column=-1 **)** |const| |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_item_at_position<class_Tree_method_get_item_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                        |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_next_selected<class_Tree_method_get_next_selected>` **(** :ref:`Object<class_Object>` from **)**                                            |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_pressed_button<class_Tree_method_get_pressed_button>` **(** **)** |const|                                                                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_root<class_Tree_method_get_root>` **(** **)**                                                                                               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`   | :ref:`get_scroll<class_Tree_method_get_scroll>` **(** **)** |const|                                                                                   |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TreeItem<class_TreeItem>` | :ref:`get_selected<class_Tree_method_get_selected>` **(** **)** |const|                                                                               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`           | :ref:`get_selected_column<class_Tree_method_get_selected_column>` **(** **)** |const|                                                                 |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`scroll_to_item<class_Tree_method_scroll_to_item>` **(** :ref:`Object<class_Object>` item **)**                                                  |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_expand<class_Tree_method_set_column_expand>` **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**                |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_min_width<class_Tree_method_set_column_min_width>` **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**         |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                            | :ref:`set_column_title<class_Tree_method_set_column_title>` **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**               |
+---------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------+

主题属性
--------

+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`custom_button_font_highlight<class_Tree_theme_color_custom_button_font_highlight>` | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`drop_position_color<class_Tree_theme_color_drop_position_color>`                   | ``Color( 1, 0.3, 0.2, 1 )``      |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color<class_Tree_theme_color_font_color>`                                     | ``Color( 0.69, 0.69, 0.69, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_selected<class_Tree_theme_color_font_color_selected>`                   | ``Color( 1, 1, 1, 1 )``          |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`guide_color<class_Tree_theme_color_guide_color>`                                   | ``Color( 0, 0, 0, 0.1 )``        |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`relationship_line_color<class_Tree_theme_color_relationship_line_color>`           | ``Color( 0.27, 0.27, 0.27, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`title_button_color<class_Tree_theme_color_title_button_color>`                     | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`button_margin<class_Tree_theme_constant_button_margin>`                            | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`draw_guides<class_Tree_theme_constant_draw_guides>`                                | ``1``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`draw_relationship_lines<class_Tree_theme_constant_draw_relationship_lines>`        | ``0``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`hseparation<class_Tree_theme_constant_hseparation>`                                | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`item_margin<class_Tree_theme_constant_item_margin>`                                | ``12``                           |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`scroll_border<class_Tree_theme_constant_scroll_border>`                            | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`scroll_speed<class_Tree_theme_constant_scroll_speed>`                              | ``12``                           |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`vseparation<class_Tree_theme_constant_vseparation>`                                | ``4``                            |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Font<class_Font>`         | :ref:`font<class_Tree_theme_font_font>`                                                  |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Font<class_Font>`         | :ref:`title_button_font<class_Tree_theme_font_title_button_font>`                        |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`arrow<class_Tree_theme_icon_arrow>`                                                |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`arrow_collapsed<class_Tree_theme_icon_arrow_collapsed>`                            |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`checked<class_Tree_theme_icon_checked>`                                            |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`select_arrow<class_Tree_theme_icon_select_arrow>`                                  |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`unchecked<class_Tree_theme_icon_unchecked>`                                        |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`Texture<class_Texture>`   | :ref:`updown<class_Tree_theme_icon_updown>`                                              |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`bg<class_Tree_theme_style_bg>`                                                     |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`bg_focus<class_Tree_theme_style_bg_focus>`                                         |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`button_pressed<class_Tree_theme_style_button_pressed>`                             |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`cursor<class_Tree_theme_style_cursor>`                                             |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`cursor_unfocused<class_Tree_theme_style_cursor_unfocused>`                         |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`custom_button<class_Tree_theme_style_custom_button>`                               |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`custom_button_hover<class_Tree_theme_style_custom_button_hover>`                   |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`custom_button_pressed<class_Tree_theme_style_custom_button_pressed>`               |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`selected<class_Tree_theme_style_selected>`                                         |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`selected_focus<class_Tree_theme_style_selected_focus>`                             |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`title_button_hover<class_Tree_theme_style_title_button_hover>`                     |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`title_button_normal<class_Tree_theme_style_title_button_normal>`                   |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`title_button_pressed<class_Tree_theme_style_title_button_pressed>`                 |                                  |
+---------------------------------+------------------------------------------------------------------------------------------+----------------------------------+

信号
----

.. _class_Tree_signal_button_pressed:

- **button_pressed** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`int<class_int>` id **)**

当树中按钮被按下时触发，参阅\ :ref:`TreeItem.add_button<class_TreeItem_method_add_button>`\ 。

----

.. _class_Tree_signal_cell_selected:

- **cell_selected** **(** **)**

当单元格被选中时触发。

----

.. _class_Tree_signal_column_title_pressed:

- **column_title_pressed** **(** :ref:`int<class_int>` column **)**

当列的标题被按下时触发。

----

.. _class_Tree_signal_custom_popup_edited:

- **custom_popup_edited** **(** :ref:`bool<class_bool>` arrow_clicked **)**

当具有\ :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>`\ 的单元格被点击，进行编辑时触发。

----

.. _class_Tree_signal_empty_rmb:

- **empty_rmb** **(** :ref:`Vector2<class_Vector2>` position **)**

当在树的空白处按下鼠标右键时触发。

----

.. _class_Tree_signal_empty_tree_rmb_selected:

- **empty_tree_rmb_selected** **(** :ref:`Vector2<class_Vector2>` position **)**

如果鼠标右键选择处于活动状态，并且树是空的，则在按下鼠标右键时触发。

----

.. _class_Tree_signal_item_activated:

- **item_activated** **(** **)**

当一个项目的标签被双击时触发。

----

.. _class_Tree_signal_item_collapsed:

- **item_collapsed** **(** :ref:`TreeItem<class_TreeItem>` item **)**

当一个项目的折叠箭头被点击折叠时触发。

----

.. _class_Tree_signal_item_custom_button_pressed:

- **item_custom_button_pressed** **(** **)**

当自定义按钮被按下时触发，即在\ :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>`\ 模式单元格中。

----

.. _class_Tree_signal_item_double_clicked:

- **item_double_clicked** **(** **)**

当项目的图标被双击时触发。

----

.. _class_Tree_signal_item_edited:

- **item_edited** **(** **)**

当项目被编辑时触发。

----

.. _class_Tree_signal_item_rmb_edited:

- **item_rmb_edited** **(** **)**

当使用鼠标右键编辑项目时触发。

----

.. _class_Tree_signal_item_rmb_selected:

- **item_rmb_selected** **(** :ref:`Vector2<class_Vector2>` position **)**

当用鼠标右键选择项目时触发。

----

.. _class_Tree_signal_item_selected:

- **item_selected** **(** **)**

当项目被选中时触发。

----

.. _class_Tree_signal_multi_selected:

- **multi_selected** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`bool<class_bool>` selected **)**

如果\ ``select_mode``\ 是\ :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>`\ ，则触发代替\ ``item_selected``\ 。

----

.. _class_Tree_signal_nothing_selected:

- **nothing_selected** **(** **)**

当鼠标左键点击未选择任何项目时触发。

枚举
----

.. _enum_Tree_SelectMode:

.. _class_Tree_constant_SELECT_SINGLE:

.. _class_Tree_constant_SELECT_ROW:

.. _class_Tree_constant_SELECT_MULTI:

enum **SelectMode**:

- **SELECT_SINGLE** = **0** --- 允许一次选择一个单元格。从项的角度看，只允许选择一个项。而且在所选项中只有一列被选中。

在这种模式下，焦点光标总被隐藏，被定位在当前的选择处，使当前的选择项成为当前的焦点项。

- **SELECT_ROW** = **1** --- 允许一次选择单行。从项的角度看，只允许选择单个项。而所有的列都被选择在所选项中。

在这种模式下，焦点光标总被隐藏，被定位在当前选择的第一列，使当前选择项成为当前焦点项。

- **SELECT_MULTI** = **2** --- 允许同时选择多个单元格。从项的角度看，允许选择多个项。而且每个被选中的项中可以有多个列被选中。

在这种模式下，焦点光标可见，光标下的项或列不一定被选中。

----

.. _enum_Tree_DropModeFlags:

.. _class_Tree_constant_DROP_MODE_DISABLED:

.. _class_Tree_constant_DROP_MODE_ON_ITEM:

.. _class_Tree_constant_DROP_MODE_INBETWEEN:

enum **DropModeFlags**:

- **DROP_MODE_DISABLED** = **0** --- 禁用所有放置部分，但仍然允许通过\ :ref:`get_drop_section_at_position<class_Tree_method_get_drop_section_at_position>`\ 检测 "物品上" 的放置部分。

\ **注意：**\ 这是默认的标志，当与其他标志结合时，它没有效果。

- **DROP_MODE_ON_ITEM** = **1** --- 启用 "项目上" 的放置部分。这个放置部分覆盖整个项。

当与\ :ref:`DROP_MODE_INBETWEEN<class_Tree_constant_DROP_MODE_INBETWEEN>`\ 结合使用时，这个放置部分的高度减半，并保持垂直居中。

- **DROP_MODE_INBETWEEN** = **2** --- 启用 "项目上方" 和 "项目下方" 的放置部分。"项目上方" 的放置部分覆盖项目的上半部分，"项目下方" 的放置部分覆盖下半部分。

当与\ :ref:`DROP_MODE_ON_ITEM<class_Tree_constant_DROP_MODE_ON_ITEM>`\ 结合时，这些放置部分的高度减半，并相应地停留在顶部或底部。

属性说明
--------

.. _class_Tree_property_allow_reselect:

- :ref:`bool<class_bool>` **allow_reselect**

+-----------+---------------------------+
| *Default* | ``false``                 |
+-----------+---------------------------+
| *Setter*  | set_allow_reselect(value) |
+-----------+---------------------------+
| *Getter*  | get_allow_reselect()      |
+-----------+---------------------------+

如果\ ``true``\ ，可以再次选择当前选定的单元。

----

.. _class_Tree_property_allow_rmb_select:

- :ref:`bool<class_bool>` **allow_rmb_select**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_allow_rmb_select(value) |
+-----------+-----------------------------+
| *Getter*  | get_allow_rmb_select()      |
+-----------+-----------------------------+

如果\ ``true``\ ，鼠标右键点击可以选择项目。

----

.. _class_Tree_property_column_titles_visible:

- :ref:`bool<class_bool>` **column_titles_visible**

+-----------+----------------------------------+
| *Default* | ``false``                        |
+-----------+----------------------------------+
| *Setter*  | set_column_titles_visible(value) |
+-----------+----------------------------------+
| *Getter*  | are_column_titles_visible()      |
+-----------+----------------------------------+

如果\ ``true``\ ，列标题可见。

----

.. _class_Tree_property_columns:

- :ref:`int<class_int>` **columns**

+-----------+--------------------+
| *Default* | ``1``              |
+-----------+--------------------+
| *Setter*  | set_columns(value) |
+-----------+--------------------+
| *Getter*  | get_columns()      |
+-----------+--------------------+

列数。

----

.. _class_Tree_property_drop_mode_flags:

- :ref:`int<class_int>` **drop_mode_flags**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_drop_mode_flags(value) |
+-----------+----------------------------+
| *Getter*  | get_drop_mode_flags()      |
+-----------+----------------------------+

作为一个标志的OR组合的放置模式。参阅\ :ref:`DropModeFlags<enum_Tree_DropModeFlags>`\ 常量。一旦拖动完成，将恢复到\ :ref:`DROP_MODE_DISABLED<class_Tree_constant_DROP_MODE_DISABLED>`\ 。建议在\ :ref:`Control.can_drop_data<class_Control_method_can_drop_data>`\ 中设置这个。

控件放置部分，即根据鼠标位置决定和绘制可能的放置位置。

----

.. _class_Tree_property_hide_folding:

- :ref:`bool<class_bool>` **hide_folding**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_hide_folding(value) |
+-----------+-------------------------+
| *Getter*  | is_folding_hidden()     |
+-----------+-------------------------+

如果\ ``true``\ ，隐藏折叠箭头。

----

.. _class_Tree_property_hide_root:

- :ref:`bool<class_bool>` **hide_root**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_hide_root(value) |
+-----------+----------------------+
| *Getter*  | is_root_hidden()     |
+-----------+----------------------+

如果\ ``true``\ ，则隐藏树的根节点。

----

.. _class_Tree_property_select_mode:

- :ref:`SelectMode<enum_Tree_SelectMode>` **select_mode**

+-----------+------------------------+
| *Default* | ``0``                  |
+-----------+------------------------+
| *Setter*  | set_select_mode(value) |
+-----------+------------------------+
| *Getter*  | get_select_mode()      |
+-----------+------------------------+

允许单选或多选。参阅\ :ref:`SelectMode<enum_Tree_SelectMode>`\ 常量。

方法说明
--------

.. _class_Tree_method_clear:

- void **clear** **(** **)**

清除树。这将删除所有项目。

----

.. _class_Tree_method_create_item:

- :ref:`TreeItem<class_TreeItem>` **create_item** **(** :ref:`Object<class_Object>` parent=null, :ref:`int<class_int>` idx=-1 **)**

在树中创建一个项目，并将其作为\ ``parent``\ 的一个子项。

如果\ ``parent``\ 是\ ``null``\ ，根项将是父项，如果树是空的，新项将是根本身。

新项将是父项的\ ``idx``\ 个子顶，如果没有足够的兄弟姐妹，它将是最后一个子项。

----

.. _class_Tree_method_edit_selected:

- :ref:`bool<class_bool>` **edit_selected** **(** **)**

编辑选中的树项，就像它被点击一样。该项必须通过\ :ref:`TreeItem.set_editable<class_TreeItem_method_set_editable>`\ 设置为可编辑。其可被编辑，则返回\ ``true``\ 。如果没有项被选中，则失败。

----

.. _class_Tree_method_ensure_cursor_is_visible:

- void **ensure_cursor_is_visible** **(** **)**

使当前获得焦点的单元可见。

如果有必要，将滚动树。在\ :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>`\ 模式下，不会做水平滚动，因为所选行中的所有单元都按逻辑获得焦点。

\ **注意：**\ 尽管这个方法的名称是这样的，但焦点光标本身只在 :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` 模式下可见。

----

.. _class_Tree_method_get_column_at_position:

- :ref:`int<class_int>` **get_column_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回在\ ``position``\ 的列索引，如果那里没有项目，则返回-1。

----

.. _class_Tree_method_get_column_title:

- :ref:`String<class_String>` **get_column_title** **(** :ref:`int<class_int>` column **)** |const|

返回列的标题。

----

.. _class_Tree_method_get_column_width:

- :ref:`int<class_int>` **get_column_width** **(** :ref:`int<class_int>` column **)** |const|

返回列的宽度，单位是像素。

----

.. _class_Tree_method_get_custom_popup_rect:

- :ref:`Rect2<class_Rect2>` **get_custom_popup_rect** **(** **)** |const|

返回自定义弹出窗口的矩形。帮助创建显示弹出式的自定义单元格控件。参阅\ :ref:`TreeItem.set_cell_mode<class_TreeItem_method_set_cell_mode>`\ 。

----

.. _class_Tree_method_get_drop_section_at_position:

- :ref:`int<class_int>` **get_drop_section_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回位于\ ``position``\ 的放置部分，如果没有项目，则返回-100。

在 "项目上方"、"项目之上"和 "项目下方"的放置部分将分别返回-1、0或1的值。请参阅\ :ref:`DropModeFlags<enum_Tree_DropModeFlags>`\ 以了解每个放置部分的描述。

要获得返回的放置部分相对项，请使用\ :ref:`get_item_at_position<class_Tree_method_get_item_at_position>`\ 。

----

.. _class_Tree_method_get_edited:

- :ref:`TreeItem<class_TreeItem>` **get_edited** **(** **)** |const|

返回当前被编辑的项。可以和\ :ref:`item_edited<class_Tree_signal_item_edited>`\ 一起使用，获得被修改的项。

::

    func _ready():
        $Tree.item_edited.connect(on_Tree_item_edited)
    
    func on_Tree_item_edited():
        print($Tree.get_edited()) # This item just got edited (e.g. checked).

----

.. _class_Tree_method_get_edited_column:

- :ref:`int<class_int>` **get_edited_column** **(** **)** |const|

返回当前编辑项的列。

----

.. _class_Tree_method_get_item_area_rect:

- :ref:`Rect2<class_Rect2>` **get_item_area_rect** **(** :ref:`Object<class_Object>` item, :ref:`int<class_int>` column=-1 **)** |const|

返回指定项目的矩形区域。如果\ ``column``\ 被指定，只得到该列的位置和大小，否则得到包含所有列的矩形。

----

.. _class_Tree_method_get_item_at_position:

- :ref:`TreeItem<class_TreeItem>` **get_item_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回指定位置，即相对于树的原点位置的树中项。

----

.. _class_Tree_method_get_next_selected:

- :ref:`TreeItem<class_TreeItem>` **get_next_selected** **(** :ref:`Object<class_Object>` from **)**

返回指定项后的下一个选择项，如果到达终点则返回\ ``null``\ 。

如果\ ``from``\ 是\ ``null``\ ，将返回第一个被选中的项。

----

.. _class_Tree_method_get_pressed_button:

- :ref:`int<class_int>` **get_pressed_button** **(** **)** |const|

返回最后按下的按钮的索引。

----

.. _class_Tree_method_get_root:

- :ref:`TreeItem<class_TreeItem>` **get_root** **(** **)**

返回树的根项，如果树是空的，则返回\ ``null``\ 。

----

.. _class_Tree_method_get_scroll:

- :ref:`Vector2<class_Vector2>` **get_scroll** **(** **)** |const|

返回当前的滚动位置。

----

.. _class_Tree_method_get_selected:

- :ref:`TreeItem<class_TreeItem>` **get_selected** **(** **)** |const|

返回当前的焦点项，如果没有焦点项，则返回\ ``null``\ 。

在\ :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>`\ 和\ :ref:`SELECT_SINGLE<class_Tree_constant_SELECT_SINGLE>`\ 模式下，焦点项与选择项相同。在\ :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>`\ 模式下，焦点项是焦点光标下的项目，不一定被选中。

要获得当前选中项，请使用\ :ref:`get_next_selected<class_Tree_method_get_next_selected>`\ 。

----

.. _class_Tree_method_get_selected_column:

- :ref:`int<class_int>` **get_selected_column** **(** **)** |const|

返回当前获得焦点的列，如果没有焦点列，则返回-1。

在\ :ref:`SELECT_SINGLE<class_Tree_constant_SELECT_SINGLE>`\ 模式下，焦点列是被选中的列。在\ :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>`\ 模式下，如果有任意项被选中，焦点列总是0。在\ :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>`\ 模式下，焦点列是焦点光标下的列，但不一定有列被选中。

要判断一个项的某一列是否被选中，请使用\ :ref:`TreeItem.is_selected<class_TreeItem_method_is_selected>`\ 。

----

.. _class_Tree_method_scroll_to_item:

- void **scroll_to_item** **(** :ref:`Object<class_Object>` item **)**

使 ``Tree`` 跳转到指定的项。

----

.. _class_Tree_method_set_column_expand:

- void **set_column_expand** **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**

如果 ``true``\ ，该列将拥有 :ref:`Control<class_Control>` 的“Expand”标志。拥有“Expand”标志的列，将以类似于 :ref:`Control.size_flags_stretch_ratio<class_Control_property_size_flags_stretch_ratio>` 的方式使用其“min_width”最小宽度。

----

.. _class_Tree_method_set_column_min_width:

- void **set_column_min_width** **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**

设置一个列的最小宽度。拥有“Expand”标志的列将以类似于 :ref:`Control.size_flags_stretch_ratio<class_Control_property_size_flags_stretch_ratio>` 的方式使用其“min_width”最小宽度。

----

.. _class_Tree_method_set_column_title:

- void **set_column_title** **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**

设置一个列的标题。

Theme Property Descriptions
---------------------------

.. _class_Tree_theme_color_custom_button_font_highlight:

- :ref:`Color<class_Color>` **custom_button_font_highlight**

+-----------+----------------------------------+
| *Default* | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+-----------+----------------------------------+

当\ :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>`\ 模式的单元格被悬停时的文本\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_Tree_theme_color_drop_position_color:

- :ref:`Color<class_Color>` **drop_position_color**

+-----------+-----------------------------+
| *Default* | ``Color( 1, 0.3, 0.2, 1 )`` |
+-----------+-----------------------------+

用于绘制可能的放置位置的\ :ref:`Color<class_Color>`\ 颜色。有关放置位置的描述，参阅\ :ref:`DropModeFlags<enum_Tree_DropModeFlags>`\ 常量。

----

.. _class_Tree_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.69, 0.69, 0.69, 1 )`` |
+-----------+----------------------------------+

项目的默认文本颜色 :ref:`Color<class_Color>`\ 。

----

.. _class_Tree_theme_color_font_color_selected:

- :ref:`Color<class_Color>` **font_color_selected**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

选择项目时使用的文本颜色\ :ref:`Color<class_Color>`\ 。

----

.. _class_Tree_theme_color_guide_color:

- :ref:`Color<class_Color>` **guide_color**

+-----------+---------------------------+
| *Default* | ``Color( 0, 0, 0, 0.1 )`` |
+-----------+---------------------------+

参考线的\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_Tree_theme_color_relationship_line_color:

- :ref:`Color<class_Color>` **relationship_line_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.27, 0.27, 0.27, 1 )`` |
+-----------+----------------------------------+

关系线的\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_Tree_theme_color_title_button_color:

- :ref:`Color<class_Color>` **title_button_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+-----------+----------------------------------+

标题按钮的默认文本\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_Tree_theme_constant_button_margin:

- :ref:`int<class_int>` **button_margin**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

一个单元中每个按钮之间的水平空间。

----

.. _class_Tree_theme_constant_draw_guides:

- :ref:`int<class_int>` **draw_guides**

+-----------+-------+
| *Default* | ``1`` |
+-----------+-------+

如果不为零就绘制参考线，这作为一个布尔值。参考线是在每个项的底部画的一条水平线。

----

.. _class_Tree_theme_constant_draw_relationship_lines:

- :ref:`int<class_int>` **draw_relationship_lines**

+-----------+-------+
| *Default* | ``0`` |
+-----------+-------+

如果不为零，则绘制关系线，这作为一个布尔值。关系线在子项的开始处绘制，以显示层次结构。

----

.. _class_Tree_theme_constant_hseparation:

- :ref:`int<class_int>` **hseparation**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

项目单元之间的水平空间。这也用作禁用折叠时项目开头的边距。

----

.. _class_Tree_theme_constant_item_margin:

- :ref:`int<class_int>` **item_margin**

+-----------+--------+
| *Default* | ``12`` |
+-----------+--------+

项目开头的水平边距。在项目启用折叠功能时使用。

----

.. _class_Tree_theme_constant_scroll_border:

- :ref:`int<class_int>` **scroll_border**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

拖动时，鼠标指针与控件边框之间触发边框滚动的最大距离。

----

.. _class_Tree_theme_constant_scroll_speed:

- :ref:`int<class_int>` **scroll_speed**

+-----------+--------+
| *Default* | ``12`` |
+-----------+--------+

边框滚动的速度。

----

.. _class_Tree_theme_constant_vseparation:

- :ref:`int<class_int>` **vseparation**

+-----------+-------+
| *Default* | ``4`` |
+-----------+-------+

每个项内的垂直填充，即项内容与上或下边框之间的距离。

----

.. _class_Tree_theme_font_font:

- :ref:`Font<class_Font>` **font**

项目文本的字体 :ref:`Font<class_Font>` 。

----

.. _class_Tree_theme_font_title_button_font:

- :ref:`Font<class_Font>` **title_button_font**

标题按钮文本的\ :ref:`Font<class_Font>`\ 字体。

----

.. _class_Tree_theme_icon_arrow:

- :ref:`Texture<class_Texture>` **arrow**

当一个可折叠的项没有被折叠时，使用的箭头图标。

----

.. _class_Tree_theme_icon_arrow_collapsed:

- :ref:`Texture<class_Texture>` **arrow_collapsed**

当一个可折叠的项被折叠时，使用的箭头图标。

----

.. _class_Tree_theme_icon_checked:

- :ref:`Texture<class_Texture>` **checked**

当\ :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>`\ 模式单元格被选中时，显示的选中图标。

----

.. _class_Tree_theme_icon_select_arrow:

- :ref:`Texture<class_Texture>` **select_arrow**

为\ :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>`\ 模式单元显示的箭头图标。

----

.. _class_Tree_theme_icon_unchecked:

- :ref:`Texture<class_Texture>` **unchecked**

当\ :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>`\ 模式单元未被选中时，要显示的选中图标。

----

.. _class_Tree_theme_icon_updown:

- :ref:`Texture<class_Texture>` **updown**

为\ :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>`\ 模式单元显示的向下箭头图标。

----

.. _class_Tree_theme_style_bg:

- :ref:`StyleBox<class_StyleBox>` **bg**

``Tree``\ 的默认\ :ref:`StyleBox<class_StyleBox>`\ ，即在控件没有获得焦点时使用。

----

.. _class_Tree_theme_style_bg_focus:

- :ref:`StyleBox<class_StyleBox>` **bg_focus**

当\ ``Tree``\ 获得焦点时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_button_pressed:

- :ref:`StyleBox<class_StyleBox>` **button_pressed**

当树中的按钮被按下时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_cursor:

- :ref:`StyleBox<class_StyleBox>` **cursor**

当\ ``Tree``\ 获得焦点时，用于光标的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_cursor_unfocused:

- :ref:`StyleBox<class_StyleBox>` **cursor_unfocused**

当\ ``Tree``\ 未获聚焦时，用于光标的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_custom_button:

- :ref:`StyleBox<class_StyleBox>` **custom_button**

为\ :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>`\ 模式的单元格默认的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_custom_button_hover:

- :ref:`StyleBox<class_StyleBox>` **custom_button_hover**

当\ :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>`\ 模式的单元格被悬停时的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_custom_button_pressed:

- :ref:`StyleBox<class_StyleBox>` **custom_button_pressed**

当\ :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>`\ 模式的单元格被按下时的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_selected:

- :ref:`StyleBox<class_StyleBox>` **selected**

所选项的\ :ref:`StyleBox<class_StyleBox>`\ ，当\ ``Tree``\ 没有获得焦点时使用。

----

.. _class_Tree_theme_style_selected_focus:

- :ref:`StyleBox<class_StyleBox>` **selected_focus**

所选项目的\ :ref:`StyleBox<class_StyleBox>`\ ，在\ ``Tree``\ 获得焦点时使用。

----

.. _class_Tree_theme_style_title_button_hover:

- :ref:`StyleBox<class_StyleBox>` **title_button_hover**

当标题按钮被悬停时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_title_button_normal:

- :ref:`StyleBox<class_StyleBox>` **title_button_normal**

标题按钮的默认\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_Tree_theme_style_title_button_pressed:

- :ref:`StyleBox<class_StyleBox>` **title_button_pressed**

当标题按钮被按下时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
