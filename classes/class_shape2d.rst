:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Shape2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Shape2D:

Shape2D
=======

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CapsuleShape2D<class_CapsuleShape2D>`, :ref:`CircleShape2D<class_CircleShape2D>`, :ref:`ConcavePolygonShape2D<class_ConcavePolygonShape2D>`, :ref:`ConvexPolygonShape2D<class_ConvexPolygonShape2D>`, :ref:`LineShape2D<class_LineShape2D>`, :ref:`RayShape2D<class_RayShape2D>`, :ref:`RectangleShape2D<class_RectangleShape2D>`, :ref:`SegmentShape2D<class_SegmentShape2D>`

所有2D形状的基类。

描述
----

所有2D形状的基类。所有的2D形状类型都继承于此。

教程
----

- :doc:`../tutorials/physics/physics_introduction`

属性
----

+---------------------------+----------------------------------------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`custom_solver_bias<class_Shape2D_property_custom_solver_bias>` | ``0.0`` |
+---------------------------+----------------------------------------------------------------------+---------+

方法
----

+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`collide<class_Shape2D_method_collide>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**                                                                                                                                                   |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`collide_and_get_contacts<class_Shape2D_method_collide_and_get_contacts>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**                                                                                                                 |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`collide_with_motion<class_Shape2D_method_collide_with_motion>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**                                   |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Array<class_Array>` | :ref:`collide_with_motion_and_get_contacts<class_Shape2D_method_collide_with_motion_and_get_contacts>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)** |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                      | :ref:`draw<class_Shape2D_method_draw>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Color<class_Color>` color **)**                                                                                                                                                                                                                                     |
+---------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Shape2D_property_custom_solver_bias:

- :ref:`float<class_float>` **custom_solver_bias**

+-----------+-------------------------------+
| *Default* | ``0.0``                       |
+-----------+-------------------------------+
| *Setter*  | set_custom_solver_bias(value) |
+-----------+-------------------------------+
| *Getter*  | get_custom_solver_bias()      |
+-----------+-------------------------------+

形状的自定义求解器偏差。

方法说明
--------

.. _class_Shape2D_method_collide:

- :ref:`bool<class_bool>` **collide** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**

如果这个形状与另一个形状发生碰撞，返回\ ``true``\ 。

这个方法需要这个形状的变换矩阵（\ ``local_xform``\ ），要检查碰撞的形状（\ ``with_shape``\ ），以及那个形状的变换矩阵（\ ``shape_xform``\ ）。

----

.. _class_Shape2D_method_collide_and_get_contacts:

- :ref:`Array<class_Array>` **collide_and_get_contacts** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**

返回这个形状与另一个形状相接触的点的列表。如果没有碰撞，则列表为空。

这个方法需要这个形状的变换矩阵（\ ``local_xform``\ ），要检查碰撞的形状（\ ``with_shape``\ ），以及那个形状的变换矩阵（\ ``shape_xform``\ ）。

----

.. _class_Shape2D_method_collide_with_motion:

- :ref:`bool<class_bool>` **collide_with_motion** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**

如果应用一个给定的运动，返回这个形状是否会与另一个形状发生碰撞。

这个方法需要这个形状的变换矩阵（\ ``local_xform``\ ），要在这个形状上测试的运动（\ ``local_motion``\ ），检查碰撞的形状（\ ``with_shape``\ ），那个形状的变换矩阵（\ ``shape_xform``\ ），以及用于测试其他物体的运动（\ ``shape_motion``\ ）。

----

.. _class_Shape2D_method_collide_with_motion_and_get_contacts:

- :ref:`Array<class_Array>` **collide_with_motion_and_get_contacts** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**

如果应用了给定的移动，则返回此形状将与另一个形状接触的点的列表。如果没有碰撞，则列表为空。

这个方法需要这个形状的变换矩阵（\ ``local_xform``\ ），这个形状上测试的运动（\ ``local_motion``\ ），检查碰撞的形状（\ ``with_shape`` )、那个形状的变换矩阵 (``shape_xform``)，以及在另一个对象上测试的运动 (``shape_motion``)。

----

.. _class_Shape2D_method_draw:

- void **draw** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Color<class_Color>` color **)**

用\ :ref:`VisualServer<class_VisualServer>`\ API在\ :ref:`CanvasItem<class_CanvasItem>`\ 上绘制实体形状，并填充指定的\ ``color``\ 。确切的绘制方法是每个形状特有的，无法配置。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
