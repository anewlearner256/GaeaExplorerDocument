:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the BakedLightmap.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_BakedLightmap:

BakedLightmap
=============

**Inherits:** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

场景的预渲染间接光照贴图。

描述
----

烘焙光照贴图是向场景添加间接（或烘焙）光照的替代工作流程。与 :ref:`GIProbe<class_GIProbe>` 方法不同，烘焙光照贴图在低端 PC 和移动设备上运行良好，因为它们在运行时几乎不消耗资源。

\ **程序化生成：** 烘焙光照贴图的功能只在编辑器中可用。也就是说，\ ``BakedLightmap`` 不适合程序化生成、用户搭建的关卡。想要支持程序化生成或者用户搭建关卡，请使用 :ref:`GIProbe<class_GIProbe>`\ 。

\ **注意：** 由于光照贴图的工作原理，大多数属性只有在光照贴图再次烘焙后才会看到效果。

教程
----

- :doc:`../tutorials/3d/baked_lightmaps`

属性
----

+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`atlas_generate<class_BakedLightmap_property_atlas_generate>`                                                   | ``true``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                                      | :ref:`atlas_max_size<class_BakedLightmap_property_atlas_max_size>`                                                   | ``4096``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`bias<class_BakedLightmap_property_bias>`                                                                       | ``0.005``                 |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`bounce_indirect_energy<class_BakedLightmap_property_bounce_indirect_energy>`                                   | ``1.0``                   |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`int<class_int>`                                      | :ref:`bounces<class_BakedLightmap_property_bounces>`                                                                 | ``3``                     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`capture_cell_size<class_BakedLightmap_property_capture_cell_size>`                                             | ``0.5``                   |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`capture_enabled<class_BakedLightmap_property_capture_enabled>`                                                 | ``true``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`capture_propagation<class_BakedLightmap_property_capture_propagation>`                                         | ``1.0``                   |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>`         | :ref:`capture_quality<class_BakedLightmap_property_capture_quality>`                                                 | ``1``                     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`default_texels_per_unit<class_BakedLightmap_property_default_texels_per_unit>`                                 | ``16.0``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`environment_custom_color<class_BakedLightmap_property_environment_custom_color>`                               |                           |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`float<class_float>`                                  | :ref:`environment_custom_energy<class_BakedLightmap_property_environment_custom_energy>`                             |                           |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Sky<class_Sky>`                                      | :ref:`environment_custom_sky<class_BakedLightmap_property_environment_custom_sky>`                                   |                           |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`environment_custom_sky_rotation_degrees<class_BakedLightmap_property_environment_custom_sky_rotation_degrees>` |                           |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Color<class_Color>`                                  | :ref:`environment_min_light<class_BakedLightmap_property_environment_min_light>`                                     | ``Color( 0, 0, 0, 1 )``   |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`EnvironmentMode<enum_BakedLightmap_EnvironmentMode>` | :ref:`environment_mode<class_BakedLightmap_property_environment_mode>`                                               | ``0``                     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`Vector3<class_Vector3>`                              | :ref:`extents<class_BakedLightmap_property_extents>`                                                                 | ``Vector3( 10, 10, 10 )`` |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`String<class_String>`                                | :ref:`image_path<class_BakedLightmap_property_image_path>`                                                           |                           |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`BakedLightmapData<class_BakedLightmapData>`          | :ref:`light_data<class_BakedLightmap_property_light_data>`                                                           |                           |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>`         | :ref:`quality<class_BakedLightmap_property_quality>`                                                                 | ``1``                     |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`use_color<class_BakedLightmap_property_use_color>`                                                             | ``true``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`use_denoiser<class_BakedLightmap_property_use_denoiser>`                                                       | ``true``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+
| :ref:`bool<class_bool>`                                    | :ref:`use_hdr<class_BakedLightmap_property_use_hdr>`                                                                 | ``true``                  |
+------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------+---------------------------+

方法
----

+------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`BakeError<enum_BakedLightmap_BakeError>` | :ref:`bake<class_BakedLightmap_method_bake>` **(** :ref:`Node<class_Node>` from_node=null, :ref:`String<class_String>` data_save_path="" **)** |
+------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_BakedLightmap_BakeQuality:

.. _class_BakedLightmap_constant_BAKE_QUALITY_LOW:

.. _class_BakedLightmap_constant_BAKE_QUALITY_MEDIUM:

.. _class_BakedLightmap_constant_BAKE_QUALITY_HIGH:

.. _class_BakedLightmap_constant_BAKE_QUALITY_ULTRA:

enum **BakeQuality**:

- **BAKE_QUALITY_LOW** = **0** --- 最低烘焙质量模式。计算速度最快。

- **BAKE_QUALITY_MEDIUM** = **1** --- 默认烘焙质量模式。

- **BAKE_QUALITY_HIGH** = **2** --- 更高的烘焙质量模式。需要更长的时间来计算。

- **BAKE_QUALITY_ULTRA** = **3** --- 最高的烘烤质量模式。需要最长的时间来计算。

----

.. _enum_BakedLightmap_BakeError:

.. _class_BakedLightmap_constant_BAKE_ERROR_OK:

.. _class_BakedLightmap_constant_BAKE_ERROR_NO_SAVE_PATH:

.. _class_BakedLightmap_constant_BAKE_ERROR_NO_MESHES:

.. _class_BakedLightmap_constant_BAKE_ERROR_CANT_CREATE_IMAGE:

.. _class_BakedLightmap_constant_BAKE_ERROR_LIGHTMAP_SIZE:

.. _class_BakedLightmap_constant_BAKE_ERROR_INVALID_MESH:

.. _class_BakedLightmap_constant_BAKE_ERROR_USER_ABORTED:

.. _class_BakedLightmap_constant_BAKE_ERROR_NO_LIGHTMAPPER:

.. _class_BakedLightmap_constant_BAKE_ERROR_NO_ROOT:

enum **BakeError**:

- **BAKE_ERROR_OK** = **0** --- 烘焙成功。

- **BAKE_ERROR_NO_SAVE_PATH** = **1** --- 如果没有找到合适的保存路径，则返回。这可能发生在没有指定\ :ref:`image_path<class_BakedLightmap_property_image_path>`\ 或者保存位置无效的情况下。

- **BAKE_ERROR_NO_MESHES** = **2** --- 当前未使用.

- **BAKE_ERROR_CANT_CREATE_IMAGE** = **3** --- 当烘焙器不能将每个网格的纹理保存到文件时返回。

- **BAKE_ERROR_LIGHTMAP_SIZE** = **4** --- 生成的光照贴图尺寸过大。

- **BAKE_ERROR_INVALID_MESH** = **5** --- 有些网格包含\ ``[0,1]``\ 范围以外的UV2值。

- **BAKE_ERROR_USER_ABORTED** = **6** --- 如果用户取消了烘烤，则返回。

- **BAKE_ERROR_NO_LIGHTMAPPER** = **7** --- 如果不能创建光照贴图器，则返回。除非你使用的是自定义的光照贴图器，否则请将此报告为bug。

- **BAKE_ERROR_NO_ROOT** = **8** --- 没有根节点可以开始烘焙。要么提供\ ``from_node``\ 参数，要么将此节点附加到一个被用作根节点的父节点。

----

.. _enum_BakedLightmap_EnvironmentMode:

.. _class_BakedLightmap_constant_ENVIRONMENT_MODE_DISABLED:

.. _class_BakedLightmap_constant_ENVIRONMENT_MODE_SCENE:

.. _class_BakedLightmap_constant_ENVIRONMENT_MODE_CUSTOM_SKY:

.. _class_BakedLightmap_constant_ENVIRONMENT_MODE_CUSTOM_COLOR:

enum **EnvironmentMode**:

- **ENVIRONMENT_MODE_DISABLED** = **0** --- 烘焙过程中不使用任何环境。

- **ENVIRONMENT_MODE_SCENE** = **1** --- 烘焙环境会自动从当前场景中获取。

- **ENVIRONMENT_MODE_CUSTOM_SKY** = **2** --- 在烘焙过程中使用自定义天空作为环境。

- **ENVIRONMENT_MODE_CUSTOM_COLOR** = **3** --- 烘焙过程中使用自定义纯色作为环境。

属性说明
--------

.. _class_BakedLightmap_property_atlas_generate:

- :ref:`bool<class_bool>` **atlas_generate**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_generate_atlas(value)   |
+-----------+-----------------------------+
| *Getter*  | is_generate_atlas_enabled() |
+-----------+-----------------------------+

启用后，光照贴图会将所有网格的纹理合并为一个大的分层纹理。 GLES2 不支持。

----

.. _class_BakedLightmap_property_atlas_max_size:

- :ref:`int<class_int>` **atlas_max_size**

+-----------+---------------------------+
| *Default* | ``4096``                  |
+-----------+---------------------------+
| *Setter*  | set_max_atlas_size(value) |
+-----------+---------------------------+
| *Getter*  | get_max_atlas_size()      |
+-----------+---------------------------+

每个光照贴图层的最大尺寸，仅在启用 :ref:`atlas_generate<class_BakedLightmap_property_atlas_generate>` 时使用。

----

.. _class_BakedLightmap_property_bias:

- :ref:`float<class_float>` **bias**

+-----------+-----------------+
| *Default* | ``0.005``       |
+-----------+-----------------+
| *Setter*  | set_bias(value) |
+-----------+-----------------+
| *Getter*  | get_bias()      |
+-----------+-----------------+

在烘焙过程中使用光线投射偏置来避免浮点数精度问题。

----

.. _class_BakedLightmap_property_bounce_indirect_energy:

- :ref:`float<class_float>` **bounce_indirect_energy**

+-----------+-----------------------------------+
| *Default* | ``1.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_bounce_indirect_energy(value) |
+-----------+-----------------------------------+
| *Getter*  | get_bounce_indirect_energy()      |
+-----------+-----------------------------------+

每次反弹的能量乘数。较高的值将使间接照明更亮。 ``1.0`` 的值表示与物理相一致的行为，但在使用少量反弹时，可以使用更高的值使间接照明传播更明显。这可用于通过降低\ :ref:`bounces<class_BakedLightmap_property_bounces>`\ 的数量然后增加 :ref:`bounce_indirect_energy<class_BakedLightmap_property_bounce_indirect_energy>` 来加快烘焙时间。与 :ref:`BakedLightmapData.energy<class_BakedLightmapData_property_energy>` 不同，此属性不会影响灯光节点、自发光材质和环境发出的直接光照。

\ **注意：** :ref:`bounce_indirect_energy<class_BakedLightmap_property_bounce_indirect_energy>` 仅在\ :ref:`bounces<class_BakedLightmap_property_bounces>` 设置为大于或等于\ ``1``\ 的值时有效。

----

.. _class_BakedLightmap_property_bounces:

- :ref:`int<class_int>` **bounces**

+-----------+--------------------+
| *Default* | ``3``              |
+-----------+--------------------+
| *Setter*  | set_bounces(value) |
+-----------+--------------------+
| *Getter*  | get_bounces()      |
+-----------+--------------------+

烘焙过程中考虑的光线反射次数。参阅 :ref:`bounce_indirect_energy<class_BakedLightmap_property_bounce_indirect_energy>`\ 。

----

.. _class_BakedLightmap_property_capture_cell_size:

- :ref:`float<class_float>` **capture_cell_size**

+-----------+------------------------------+
| *Default* | ``0.5``                      |
+-----------+------------------------------+
| *Setter*  | set_capture_cell_size(value) |
+-----------+------------------------------+
| *Getter*  | get_capture_cell_size()      |
+-----------+------------------------------+

用于实时捕获动态对象信息的网格大小。

----

.. _class_BakedLightmap_property_capture_enabled:

- :ref:`bool<class_bool>` **capture_enabled**

+-----------+----------------------------+
| *Default* | ``true``                   |
+-----------+----------------------------+
| *Setter*  | set_capture_enabled(value) |
+-----------+----------------------------+
| *Getter*  | get_capture_enabled()      |
+-----------+----------------------------+

启用后，将计算包含场景照明信息的八叉树。然后此八叉树将用于照亮场景中的动态对象。

----

.. _class_BakedLightmap_property_capture_propagation:

- :ref:`float<class_float>` **capture_propagation**

+-----------+--------------------------------+
| *Default* | ``1.0``                        |
+-----------+--------------------------------+
| *Setter*  | set_capture_propagation(value) |
+-----------+--------------------------------+
| *Getter*  | get_capture_propagation()      |
+-----------+--------------------------------+

偏置值，用于减少捕获的八叉树中的光传播量。

----

.. _class_BakedLightmap_property_capture_quality:

- :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>` **capture_quality**

+-----------+----------------------------+
| *Default* | ``1``                      |
+-----------+----------------------------+
| *Setter*  | set_capture_quality(value) |
+-----------+----------------------------+
| *Getter*  | get_capture_quality()      |
+-----------+----------------------------+

捕获数据的烘焙质量。

----

.. _class_BakedLightmap_property_default_texels_per_unit:

- :ref:`float<class_float>` **default_texels_per_unit**

+-----------+------------------------------------+
| *Default* | ``16.0``                           |
+-----------+------------------------------------+
| *Setter*  | set_default_texels_per_unit(value) |
+-----------+------------------------------------+
| *Getter*  | get_default_texels_per_unit()      |
+-----------+------------------------------------+

如果烘焙后的网格没有UV2的尺寸提示，这个值将被用来粗略计算出合适的光照贴图尺寸。

----

.. _class_BakedLightmap_property_environment_custom_color:

- :ref:`Color<class_Color>` **environment_custom_color**

+----------+-------------------------------------+
| *Setter* | set_environment_custom_color(value) |
+----------+-------------------------------------+
| *Getter* | get_environment_custom_color()      |
+----------+-------------------------------------+

:ref:`environment_mode<class_BakedLightmap_property_environment_mode>` 设置为 :ref:`ENVIRONMENT_MODE_CUSTOM_COLOR<class_BakedLightmap_constant_ENVIRONMENT_MODE_CUSTOM_COLOR>` 时的环境颜色。

----

.. _class_BakedLightmap_property_environment_custom_energy:

- :ref:`float<class_float>` **environment_custom_energy**

+----------+--------------------------------------+
| *Setter* | set_environment_custom_energy(value) |
+----------+--------------------------------------+
| *Getter* | get_environment_custom_energy()      |
+----------+--------------------------------------+

:ref:`environment_mode<class_BakedLightmap_property_environment_mode>` 设置为 :ref:`ENVIRONMENT_MODE_CUSTOM_COLOR<class_BakedLightmap_constant_ENVIRONMENT_MODE_CUSTOM_COLOR>` 或 :ref:`ENVIRONMENT_MODE_CUSTOM_SKY<class_BakedLightmap_constant_ENVIRONMENT_MODE_CUSTOM_SKY>` 时的能量比例系数。

----

.. _class_BakedLightmap_property_environment_custom_sky:

- :ref:`Sky<class_Sky>` **environment_custom_sky**

+----------+-----------------------------------+
| *Setter* | set_environment_custom_sky(value) |
+----------+-----------------------------------+
| *Getter* | get_environment_custom_sky()      |
+----------+-----------------------------------+

当 :ref:`environment_mode<class_BakedLightmap_property_environment_mode>` 设置为 :ref:`ENVIRONMENT_MODE_CUSTOM_SKY<class_BakedLightmap_constant_ENVIRONMENT_MODE_CUSTOM_SKY>` 时要使用的 :ref:`Sky<class_Sky>` 资源。

----

.. _class_BakedLightmap_property_environment_custom_sky_rotation_degrees:

- :ref:`Vector3<class_Vector3>` **environment_custom_sky_rotation_degrees**

+----------+----------------------------------------------------+
| *Setter* | set_environment_custom_sky_rotation_degrees(value) |
+----------+----------------------------------------------------+
| *Getter* | get_environment_custom_sky_rotation_degrees()      |
+----------+----------------------------------------------------+

烘焙自定义天空的旋转。

----

.. _class_BakedLightmap_property_environment_min_light:

- :ref:`Color<class_Color>` **environment_min_light**

+-----------+----------------------------------+
| *Default* | ``Color( 0, 0, 0, 1 )``          |
+-----------+----------------------------------+
| *Setter*  | set_environment_min_light(value) |
+-----------+----------------------------------+
| *Getter*  | get_environment_min_light()      |
+-----------+----------------------------------+

所有光照贴图纹理元素的最小环境光。这不考虑场景几何体的任何遮挡，它只是确保所有光照贴图纹理元素上的光量最小。可用于阴影颜色的艺术控制。

----

.. _class_BakedLightmap_property_environment_mode:

- :ref:`EnvironmentMode<enum_BakedLightmap_EnvironmentMode>` **environment_mode**

+-----------+-----------------------------+
| *Default* | ``0``                       |
+-----------+-----------------------------+
| *Setter*  | set_environment_mode(value) |
+-----------+-----------------------------+
| *Getter*  | get_environment_mode()      |
+-----------+-----------------------------+

决定烘焙时使用哪个环境。

----

.. _class_BakedLightmap_property_extents:

- :ref:`Vector3<class_Vector3>` **extents**

+-----------+---------------------------+
| *Default* | ``Vector3( 10, 10, 10 )`` |
+-----------+---------------------------+
| *Setter*  | set_extents(value)        |
+-----------+---------------------------+
| *Getter*  | get_extents()             |
+-----------+---------------------------+

烘焙光照贴图的大小。只有该区域内的网格才会包含在烘焙光照贴图中，也用作动态光照捕获区域的边界。

----

.. _class_BakedLightmap_property_image_path:

- :ref:`String<class_String>` **image_path**

+----------+-----------------------+
| *Setter* | set_image_path(value) |
+----------+-----------------------+
| *Getter* | get_image_path()      |
+----------+-----------------------+

已废弃，在以前的版本中，它决定了光照贴图的保存位置。

----

.. _class_BakedLightmap_property_light_data:

- :ref:`BakedLightmapData<class_BakedLightmapData>` **light_data**

+----------+-----------------------+
| *Setter* | set_light_data(value) |
+----------+-----------------------+
| *Getter* | get_light_data()      |
+----------+-----------------------+

计算出的光照数据。

----

.. _class_BakedLightmap_property_quality:

- :ref:`BakeQuality<enum_BakedLightmap_BakeQuality>` **quality**

+-----------+-------------------------+
| *Default* | ``1``                   |
+-----------+-------------------------+
| *Setter*  | set_bake_quality(value) |
+-----------+-------------------------+
| *Getter*  | get_bake_quality()      |
+-----------+-------------------------+

决定在不正确的光照烘烤中每一个纹理元素的采样量。可以在项目设置中配置每个质量级别的采样量。

----

.. _class_BakedLightmap_property_use_color:

- :ref:`bool<class_bool>` **use_color**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_use_color(value) |
+-----------+----------------------+
| *Getter*  | is_using_color()     |
+-----------+----------------------+

在光照贴图纹理中存储全色值。禁用时，光照贴图纹理将存储单个亮度通道。如果场景仅包含白光或者您不介意在间接照明中丢失颜色信息，则可以禁用以减少磁盘使用量。

----

.. _class_BakedLightmap_property_use_denoiser:

- :ref:`bool<class_bool>` **use_denoiser**

+-----------+-------------------------+
| *Default* | ``true``                |
+-----------+-------------------------+
| *Setter*  | set_use_denoiser(value) |
+-----------+-------------------------+
| *Getter*  | is_using_denoiser()     |
+-----------+-------------------------+

启用后，将使用光照贴图降噪器来减少基于Monte Carlo的全局照明固有的噪声。

----

.. _class_BakedLightmap_property_use_hdr:

- :ref:`bool<class_bool>` **use_hdr**

+-----------+--------------------+
| *Default* | ``true``           |
+-----------+--------------------+
| *Setter*  | set_use_hdr(value) |
+-----------+--------------------+
| *Getter*  | is_using_hdr()     |
+-----------+--------------------+

如果 ``true``\ ，则以高动态范围格式 (EXR) 存储光照贴图纹理。如果 ``false``\ ，则将光照贴图纹理存储在低动态范围的 PNG 图像中。这可以设置为 ``false`` 以减少磁盘占用，但超过 1.0 的光照值将被限制，你可能会看到因精度降低而导致的条纹。

\ **注意：** 将 :ref:`use_hdr<class_BakedLightmap_property_use_hdr>` 设置为 ``true`` 即使使用 GLES2 后端或 :ref:`ProjectSettings.rendering/quality/depth/hdr<class_ProjectSettings_property_rendering/quality/depth/hdr>` 为 ``false，也会降低光照贴图条纹``\ 。

方法说明
--------

.. _class_BakedLightmap_method_bake:

- :ref:`BakeError<enum_BakedLightmap_BakeError>` **bake** **(** :ref:`Node<class_Node>` from_node=null, :ref:`String<class_String>` data_save_path="" **)**

烘焙光照贴图，从给定的\ ``from_node``\ 根节点扫描，并将产生的\ :ref:`BakedLightmapData<class_BakedLightmapData>`\ 保存在\ ``data_save_path``\ 中。如果没有提供根节点，此节点的父节点将作为根节点。如果没有提供保存路径，将尝试匹配当前\ :ref:`light_data<class_BakedLightmap_property_light_data>`\ 的路径。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
