:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the CanvasLayer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_CanvasLayer:

CanvasLayer
===========

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`ParallaxBackground<class_ParallaxBackground>`

画布绘图层。

描述
----

画布绘图层。 ``CanvasLayer``\ 的直接或间接子级的\ :ref:`CanvasItem<class_CanvasItem>`\ 节点将在该层中绘制。该层是定义绘制顺序的数字索引。默认的2D场景的索引为0，因此将在下面绘制索引为-1的\ ``CanvasLayer``\ ，在上面绘制索引为1的\ ``CanvasLayer``\ 。这对于HUD（在1+层或更高层中）或背景（在-1层或更低层中）非常有用。

教程
----

- :doc:`Viewport and canvas transforms <../tutorials/2d/2d_transforms>`

- :doc:`Canvas layers <../tutorials/2d/canvas_layers>`

- `2D Dodge The Creeps Demo <https://godotengine.org/asset-library/asset/515>`__

属性
----

+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`Node<class_Node>`               | :ref:`custom_viewport<class_CanvasLayer_property_custom_viewport>`               |                                     |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`bool<class_bool>`               | :ref:`follow_viewport_enable<class_CanvasLayer_property_follow_viewport_enable>` | ``false``                           |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`float<class_float>`             | :ref:`follow_viewport_scale<class_CanvasLayer_property_follow_viewport_scale>`   | ``1.0``                             |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`int<class_int>`                 | :ref:`layer<class_CanvasLayer_property_layer>`                                   | ``1``                               |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`offset<class_CanvasLayer_property_offset>`                                 | ``Vector2( 0, 0 )``                 |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`float<class_float>`             | :ref:`rotation<class_CanvasLayer_property_rotation>`                             | ``0.0``                             |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`float<class_float>`             | :ref:`rotation_degrees<class_CanvasLayer_property_rotation_degrees>`             | ``0.0``                             |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`scale<class_CanvasLayer_property_scale>`                                   | ``Vector2( 1, 1 )``                 |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`transform<class_CanvasLayer_property_transform>`                           | ``Transform2D( 1, 0, 0, 1, 0, 0 )`` |
+---------------------------------------+----------------------------------------------------------------------------------+-------------------------------------+

方法
----

+-----------------------+----------------------------------------------------------------------------+
| :ref:`RID<class_RID>` | :ref:`get_canvas<class_CanvasLayer_method_get_canvas>` **(** **)** |const| |
+-----------------------+----------------------------------------------------------------------------+

属性说明
--------

.. _class_CanvasLayer_property_custom_viewport:

- :ref:`Node<class_Node>` **custom_viewport**

+----------+----------------------------+
| *Setter* | set_custom_viewport(value) |
+----------+----------------------------+
| *Getter* | get_custom_viewport()      |
+----------+----------------------------+

分配给\ ``CanvasLayer``\ 的自定义\ :ref:`Viewport<class_Viewport>`\ 节点。如果\ ``null``\ ，则使用默认的视窗。

----

.. _class_CanvasLayer_property_follow_viewport_enable:

- :ref:`bool<class_bool>` **follow_viewport_enable**

+-----------+----------------------------+
| *Default* | ``false``                  |
+-----------+----------------------------+
| *Setter*  | set_follow_viewport(value) |
+-----------+----------------------------+
| *Getter*  | is_following_viewport()    |
+-----------+----------------------------+

将图层设置为跟随视窗，以模拟伪3D效果。

----

.. _class_CanvasLayer_property_follow_viewport_scale:

- :ref:`float<class_float>` **follow_viewport_scale**

+-----------+----------------------------------+
| *Default* | ``1.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_follow_viewport_scale(value) |
+-----------+----------------------------------+
| *Getter*  | get_follow_viewport_scale()      |
+-----------+----------------------------------+

使用\ :ref:`follow_viewport_enable<class_CanvasLayer_property_follow_viewport_enable>`\ 时，对图层进行缩放。移动到前景的图层应该有增加的比例，而移动到背景的图层应该有减少的比例。

----

.. _class_CanvasLayer_property_layer:

- :ref:`int<class_int>` **layer**

+-----------+------------------+
| *Default* | ``1``            |
+-----------+------------------+
| *Setter*  | set_layer(value) |
+-----------+------------------+
| *Getter*  | get_layer()      |
+-----------+------------------+

绘制顺序的图层索引。首先绘制较低的值。

----

.. _class_CanvasLayer_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

图层的基本偏移量。

----

.. _class_CanvasLayer_property_rotation:

- :ref:`float<class_float>` **rotation**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_rotation(value) |
+-----------+---------------------+
| *Getter*  | get_rotation()      |
+-----------+---------------------+

图层的旋转度（以弧度为单位）。

----

.. _class_CanvasLayer_property_rotation_degrees:

- :ref:`float<class_float>` **rotation_degrees**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_rotation_degrees(value) |
+-----------+-----------------------------+
| *Getter*  | get_rotation_degrees()      |
+-----------+-----------------------------+

图层的旋转度数。

----

.. _class_CanvasLayer_property_scale:

- :ref:`Vector2<class_Vector2>` **scale**

+-----------+---------------------+
| *Default* | ``Vector2( 1, 1 )`` |
+-----------+---------------------+
| *Setter*  | set_scale(value)    |
+-----------+---------------------+
| *Getter*  | get_scale()         |
+-----------+---------------------+

图层的比例。

----

.. _class_CanvasLayer_property_transform:

- :ref:`Transform2D<class_Transform2D>` **transform**

+-----------+-------------------------------------+
| *Default* | ``Transform2D( 1, 0, 0, 1, 0, 0 )`` |
+-----------+-------------------------------------+
| *Setter*  | set_transform(value)                |
+-----------+-------------------------------------+
| *Getter*  | get_transform()                     |
+-----------+-------------------------------------+

图层的变换。

方法说明
--------

.. _class_CanvasLayer_method_get_canvas:

- :ref:`RID<class_RID>` **get_canvas** **(** **)** |const|

返回此层使用的画布的RID。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
