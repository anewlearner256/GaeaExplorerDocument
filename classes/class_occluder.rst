:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Occluder.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Occluder:

Occluder
========

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

允许使用\ :ref:`OccluderShape<class_OccluderShape>`\ 来进行遮挡剔除。

描述
----

放置在场景中的 ``Occluder`` 遮挡器将自动剔除被遮挡器隐藏的对象。这可以通过减少绘制的对象数量来提高性能。

\ ``Occluder`` 是完全动态的，您可以随意移动它们。例如，这意味着您可以在移动的宇宙飞船上放置遮挡物，并让它在飞过时遮挡物体。

您可以在一个场景中放置大量 ``Occluder``\ 。由于剔除数百个遮挡物会适得其反，系统将根据屏幕空间指标自动选择这些遮挡物在任何给定帧期间主动使用。较大的遮挡物以及靠近相机的遮挡物受到青睐。请注意，就屏幕空间而言，靠近相机的小遮挡物可能比远处的大遮挡物更好。

遮挡图元的类型由您添加到 ``Occluder`` 的 :ref:`OccluderShape<class_OccluderShape>` 决定。某些 :ref:`OccluderShape<class_OccluderShape>` 可能允许在单个节点中有多个图元，以提高效率。

尽管 ``Occluder`` 在一般用途中工作，但与门户系统结合使用时，它们也会变得更加强大。遮挡物放置在房间中（基于它们的原点），并且可以阻挡门户（以及整个房间）以及渲染对象。

属性
----

+-------------------------------------------+---------------------------------------------+
| :ref:`OccluderShape<class_OccluderShape>` | :ref:`shape<class_Occluder_property_shape>` |
+-------------------------------------------+---------------------------------------------+

方法
----

+------+----------------------------------------------------------------------------------------------------------------------+
| void | :ref:`resource_changed<class_Occluder_method_resource_changed>` **(** :ref:`Resource<class_Resource>` resource **)** |
+------+----------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Occluder_property_shape:

- :ref:`OccluderShape<class_OccluderShape>` **shape**

+----------+------------------+
| *Setter* | set_shape(value) |
+----------+------------------+
| *Getter* | get_shape()      |
+----------+------------------+

方法说明
--------

.. _class_Occluder_method_resource_changed:

- void **resource_changed** **(** :ref:`Resource<class_Resource>` resource **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
