:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Node2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Node2D:

Node2D
======

**Inherits:** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`AnimatedSprite<class_AnimatedSprite>`, :ref:`AudioStreamPlayer2D<class_AudioStreamPlayer2D>`, :ref:`BackBufferCopy<class_BackBufferCopy>`, :ref:`Bone2D<class_Bone2D>`, :ref:`CPUParticles2D<class_CPUParticles2D>`, :ref:`Camera2D<class_Camera2D>`, :ref:`CanvasModulate<class_CanvasModulate>`, :ref:`CollisionObject2D<class_CollisionObject2D>`, :ref:`CollisionPolygon2D<class_CollisionPolygon2D>`, :ref:`CollisionShape2D<class_CollisionShape2D>`, :ref:`Joint2D<class_Joint2D>`, :ref:`Light2D<class_Light2D>`, :ref:`LightOccluder2D<class_LightOccluder2D>`, :ref:`Line2D<class_Line2D>`, :ref:`Listener2D<class_Listener2D>`, :ref:`MeshInstance2D<class_MeshInstance2D>`, :ref:`MultiMeshInstance2D<class_MultiMeshInstance2D>`, :ref:`Navigation2D<class_Navigation2D>`, :ref:`NavigationPolygonInstance<class_NavigationPolygonInstance>`, :ref:`ParallaxLayer<class_ParallaxLayer>`, :ref:`Particles2D<class_Particles2D>`, :ref:`Path2D<class_Path2D>`, :ref:`PathFollow2D<class_PathFollow2D>`, :ref:`Polygon2D<class_Polygon2D>`, :ref:`Position2D<class_Position2D>`, :ref:`RayCast2D<class_RayCast2D>`, :ref:`RemoteTransform2D<class_RemoteTransform2D>`, :ref:`Skeleton2D<class_Skeleton2D>`, :ref:`Sprite<class_Sprite>`, :ref:`TileMap<class_TileMap>`, :ref:`TouchScreenButton<class_TouchScreenButton>`, :ref:`VisibilityNotifier2D<class_VisibilityNotifier2D>`, :ref:`YSort<class_YSort>`

2D 游戏对象，被所有 2D 相关的节点继承。具有位置、旋转、缩放和 Z 索引。

描述
----

2D 游戏对象，具有变换（位置、旋转、缩放）。所有的 2D 节点，包括物理对象和精灵，都继承自 Node2D。使用 Node2D 作为父节点来移动、缩放和旋转 2D 项目中的子节点。还可以控制节点的渲染顺序。

教程
----

- :doc:`Custom drawing in 2D <../tutorials/2d/custom_drawing_in_2d>`

- `All 2D Demos <https://github.com/godotengine/godot-demo-projects/tree/master/2d>`__

属性
----

+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`global_position<class_Node2D_property_global_position>`                 |                     |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`             | :ref:`global_rotation<class_Node2D_property_global_rotation>`                 |                     |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`             | :ref:`global_rotation_degrees<class_Node2D_property_global_rotation_degrees>` |                     |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`global_scale<class_Node2D_property_global_scale>`                       |                     |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`global_transform<class_Node2D_property_global_transform>`               |                     |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`position<class_Node2D_property_position>`                               | ``Vector2( 0, 0 )`` |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`             | :ref:`rotation<class_Node2D_property_rotation>`                               | ``0.0``             |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`float<class_float>`             | :ref:`rotation_degrees<class_Node2D_property_rotation_degrees>`               | ``0.0``             |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`scale<class_Node2D_property_scale>`                                     | ``Vector2( 1, 1 )`` |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`transform<class_Node2D_property_transform>`                             |                     |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`               | :ref:`z_as_relative<class_Node2D_property_z_as_relative>`                     | ``true``            |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                 | :ref:`z_index<class_Node2D_property_z_index>`                                 | ``0``               |
+---------------------------------------+-------------------------------------------------------------------------------+---------------------+

方法
----

+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`apply_scale<class_Node2D_method_apply_scale>` **(** :ref:`Vector2<class_Vector2>` ratio **)**                                              |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`             | :ref:`get_angle_to<class_Node2D_method_get_angle_to>` **(** :ref:`Vector2<class_Vector2>` point **)** |const|                                    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>` | :ref:`get_relative_transform_to_parent<class_Node2D_method_get_relative_transform_to_parent>` **(** :ref:`Node<class_Node>` parent **)** |const| |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`global_translate<class_Node2D_method_global_translate>` **(** :ref:`Vector2<class_Vector2>` offset **)**                                   |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`look_at<class_Node2D_method_look_at>` **(** :ref:`Vector2<class_Vector2>` point **)**                                                      |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`move_local_x<class_Node2D_method_move_local_x>` **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**          |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`move_local_y<class_Node2D_method_move_local_y>` **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**          |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`rotate<class_Node2D_method_rotate>` **(** :ref:`float<class_float>` radians **)**                                                          |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`to_global<class_Node2D_method_to_global>` **(** :ref:`Vector2<class_Vector2>` local_point **)** |const|                                    |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`         | :ref:`to_local<class_Node2D_method_to_local>` **(** :ref:`Vector2<class_Vector2>` global_point **)** |const|                                     |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                  | :ref:`translate<class_Node2D_method_translate>` **(** :ref:`Vector2<class_Vector2>` offset **)**                                                 |
+---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_Node2D_property_global_position:

- :ref:`Vector2<class_Vector2>` **global_position**

+----------+----------------------------+
| *Setter* | set_global_position(value) |
+----------+----------------------------+
| *Getter* | get_global_position()      |
+----------+----------------------------+

全局位置。

----

.. _class_Node2D_property_global_rotation:

- :ref:`float<class_float>` **global_rotation**

+----------+----------------------------+
| *Setter* | set_global_rotation(value) |
+----------+----------------------------+
| *Getter* | get_global_rotation()      |
+----------+----------------------------+

全局旋转弧度。

----

.. _class_Node2D_property_global_rotation_degrees:

- :ref:`float<class_float>` **global_rotation_degrees**

+----------+------------------------------------+
| *Setter* | set_global_rotation_degrees(value) |
+----------+------------------------------------+
| *Getter* | get_global_rotation_degrees()      |
+----------+------------------------------------+

全局旋转角度。

----

.. _class_Node2D_property_global_scale:

- :ref:`Vector2<class_Vector2>` **global_scale**

+----------+-------------------------+
| *Setter* | set_global_scale(value) |
+----------+-------------------------+
| *Getter* | get_global_scale()      |
+----------+-------------------------+

全局缩放。

----

.. _class_Node2D_property_global_transform:

- :ref:`Transform2D<class_Transform2D>` **global_transform**

+----------+-----------------------------+
| *Setter* | set_global_transform(value) |
+----------+-----------------------------+
| *Getter* | get_global_transform()      |
+----------+-----------------------------+

全局 :ref:`Transform2D<class_Transform2D>`\ 。

----

.. _class_Node2D_property_position:

- :ref:`Vector2<class_Vector2>` **position**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_position(value) |
+-----------+---------------------+
| *Getter*  | get_position()      |
+-----------+---------------------+

位置，相对于父节点。

----

.. _class_Node2D_property_rotation:

- :ref:`float<class_float>` **rotation**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_rotation(value) |
+-----------+---------------------+
| *Getter*  | get_rotation()      |
+-----------+---------------------+

旋转弧度，相对于父节点。

----

.. _class_Node2D_property_rotation_degrees:

- :ref:`float<class_float>` **rotation_degrees**

+-----------+-----------------------------+
| *Default* | ``0.0``                     |
+-----------+-----------------------------+
| *Setter*  | set_rotation_degrees(value) |
+-----------+-----------------------------+
| *Getter*  | get_rotation_degrees()      |
+-----------+-----------------------------+

旋转角度，相对于父节点。

----

.. _class_Node2D_property_scale:

- :ref:`Vector2<class_Vector2>` **scale**

+-----------+---------------------+
| *Default* | ``Vector2( 1, 1 )`` |
+-----------+---------------------+
| *Setter*  | set_scale(value)    |
+-----------+---------------------+
| *Getter*  | get_scale()         |
+-----------+---------------------+

节点的缩放。未缩放时为：\ ``(1, 1)``\ 。

----

.. _class_Node2D_property_transform:

- :ref:`Transform2D<class_Transform2D>` **transform**

+----------+----------------------+
| *Setter* | set_transform(value) |
+----------+----------------------+
| *Getter* | get_transform()      |
+----------+----------------------+

局部 :ref:`Transform2D<class_Transform2D>`\ 。

----

.. _class_Node2D_property_z_as_relative:

- :ref:`bool<class_bool>` **z_as_relative**

+-----------+--------------------------+
| *Default* | ``true``                 |
+-----------+--------------------------+
| *Setter*  | set_z_as_relative(value) |
+-----------+--------------------------+
| *Getter*  | is_z_relative()          |
+-----------+--------------------------+

如果\ ``true``\ ，节点的Z索引是相对于它的父节点的Z索引而言的。如果这个节点的Z索引是2，它的父节点的有效Z索引是3，那么这个节点的有效Z索引将是2+3=5。

----

.. _class_Node2D_property_z_index:

- :ref:`int<class_int>` **z_index**

+-----------+--------------------+
| *Default* | ``0``              |
+-----------+--------------------+
| *Setter*  | set_z_index(value) |
+-----------+--------------------+
| *Getter*  | get_z_index()      |
+-----------+--------------------+

Z 索引。控制节点呈现的顺序。具有较高 Z 索引的节点将显示在其他节点之前。必须介于 :ref:`VisualServer.CANVAS_ITEM_Z_MIN<class_VisualServer_constant_CANVAS_ITEM_Z_MIN>` 和 :ref:`VisualServer.CANVAS_ITEM_Z_MAX<class_VisualServer_constant_CANVAS_ITEM_Z_MAX>` 之间（含）。

方法说明
--------

.. _class_Node2D_method_apply_scale:

- void **apply_scale** **(** :ref:`Vector2<class_Vector2>` ratio **)**

将当前缩放乘以 ``ratio`` 向量。

----

.. _class_Node2D_method_get_angle_to:

- :ref:`float<class_float>` **get_angle_to** **(** :ref:`Vector2<class_Vector2>` point **)** |const|

以弧度为单位返回节点和 ``point`` 之间的角度。

\ `返回的角度的示意图。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/node2d_get_angle_to.png>`__

----

.. _class_Node2D_method_get_relative_transform_to_parent:

- :ref:`Transform2D<class_Transform2D>` **get_relative_transform_to_parent** **(** :ref:`Node<class_Node>` parent **)** |const|

返回相对于此节点的父节点的 :ref:`Transform2D<class_Transform2D>`\ 。

----

.. _class_Node2D_method_global_translate:

- void **global_translate** **(** :ref:`Vector2<class_Vector2>` offset **)**

将 ``offset`` 向量添加到节点的全局位置。

----

.. _class_Node2D_method_look_at:

- void **look_at** **(** :ref:`Vector2<class_Vector2>` point **)**

旋转节点，使其指向 ``point``\ ，请传入全局坐标。

----

.. _class_Node2D_method_move_local_x:

- void **move_local_x** **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**

基于\ :ref:`Node._process<class_Node_method__process>`\ 的\ ``delta``\ ，在节点的X轴上应用一个局部平移。如果\ ``scaled``\ 是\ ``false``\ ，则对运动进行标准化。

----

.. _class_Node2D_method_move_local_y:

- void **move_local_y** **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**

基于\ :ref:`Node._process<class_Node_method__process>`\ 的\ ``delta``\ ，在节点的Y轴上应用一个局部平移。如果\ ``scaled``\ 是\ ``false``\ ，则对运动进行标准化。

----

.. _class_Node2D_method_rotate:

- void **rotate** **(** :ref:`float<class_float>` radians **)**

从节点的当前旋转开始，以弧度为单位，对节点进行旋转。

----

.. _class_Node2D_method_to_global:

- :ref:`Vector2<class_Vector2>` **to_global** **(** :ref:`Vector2<class_Vector2>` local_point **)** |const|

将提供的本地位置转换为全局坐标空间的位置。例如，对子节点的位置应用这个方法将正确地把它们的位置转换到全局坐标空间，但对节点自己的位置应用这个方法将得到一个不正确的结果，因为它将把节点自己的变换纳入它的全局位置。

----

.. _class_Node2D_method_to_local:

- :ref:`Vector2<class_Vector2>` **to_local** **(** :ref:`Vector2<class_Vector2>` global_point **)** |const|

将提供的全局位置转换为本地坐标空间的位置。例如，它适合于确定子节点的位置，但不适合于确定其自身相对于父节点的位置。

----

.. _class_Node2D_method_translate:

- void **translate** **(** :ref:`Vector2<class_Vector2>` offset **)**

通过给定的 ``offset`` 将节点在本地坐标中进行变换。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
