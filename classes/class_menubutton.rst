:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the MenuButton.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_MenuButton:

MenuButton
==========

**Inherits:** :ref:`Button<class_Button>` **<** :ref:`BaseButton<class_BaseButton>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

点击后会弹出 :ref:`PopupMenu<class_PopupMenu>` 的特殊按钮。

描述
----

点击后会弹出 :ref:`PopupMenu<class_PopupMenu>` 的特殊按钮。

可以使用 ``get_popup().add_item("菜单项目名称")`` 在这个 :ref:`PopupMenu<class_PopupMenu>` 中创建新项目。你也可以直接从编辑器中创建它们。要做到这点，选择 ``MenuButton`` 节点，然后在 2D 编辑器顶部的工具栏中，点击\ **项目**\ ，然后点击弹出窗口中的\ **添加**\ 。你将能够赋予每个项目新的属性。

与该节点相关的常用属性和方法请参阅 :ref:`BaseButton<class_BaseButton>`\ 。

属性
----

+-----------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`ActionMode<enum_BaseButton_ActionMode>` | action_mode                                                       | ``0`` (overrides :ref:`BaseButton<class_BaseButton_property_action_mode>`)    |
+-----------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | flat                                                              | ``true`` (overrides :ref:`Button<class_Button_property_flat>`)                |
+-----------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`FocusMode<enum_Control_FocusMode>`      | focus_mode                                                        | ``0`` (overrides :ref:`Control<class_Control_property_focus_mode>`)           |
+-----------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`switch_on_hover<class_MenuButton_property_switch_on_hover>` | ``false``                                                                     |
+-----------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | toggle_mode                                                       | ``true`` (overrides :ref:`BaseButton<class_BaseButton_property_toggle_mode>`) |
+-----------------------------------------------+-------------------------------------------------------------------+-------------------------------------------------------------------------------+

方法
----

+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------+
| :ref:`PopupMenu<class_PopupMenu>` | :ref:`get_popup<class_MenuButton_method_get_popup>` **(** **)** |const|                                                  |
+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------+
| void                              | :ref:`set_disable_shortcuts<class_MenuButton_method_set_disable_shortcuts>` **(** :ref:`bool<class_bool>` disabled **)** |
+-----------------------------------+--------------------------------------------------------------------------------------------------------------------------+

主题属性
--------

+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color<class_MenuButton_theme_color_font_color>`                   | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_disabled<class_MenuButton_theme_color_font_color_disabled>` | ``Color( 1, 1, 1, 0.3 )``        |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_focus<class_MenuButton_theme_color_font_color_focus>`       | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_hover<class_MenuButton_theme_color_font_color_hover>`       | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`Color<class_Color>`       | :ref:`font_color_pressed<class_MenuButton_theme_color_font_color_pressed>`   | ``Color( 1, 1, 1, 1 )``          |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`int<class_int>`           | :ref:`hseparation<class_MenuButton_theme_constant_hseparation>`              | ``3``                            |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`Font<class_Font>`         | :ref:`font<class_MenuButton_theme_font_font>`                                |                                  |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`disabled<class_MenuButton_theme_style_disabled>`                       |                                  |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`focus<class_MenuButton_theme_style_focus>`                             |                                  |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`hover<class_MenuButton_theme_style_hover>`                             |                                  |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`normal<class_MenuButton_theme_style_normal>`                           |                                  |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+
| :ref:`StyleBox<class_StyleBox>` | :ref:`pressed<class_MenuButton_theme_style_pressed>`                         |                                  |
+---------------------------------+------------------------------------------------------------------------------+----------------------------------+

信号
----

.. _class_MenuButton_signal_about_to_show:

- **about_to_show** **(** **)**

当此MenuButton的\ :ref:`PopupMenu<class_PopupMenu>`\ 即将显示时触发。

属性说明
--------

.. _class_MenuButton_property_switch_on_hover:

- :ref:`bool<class_bool>` **switch_on_hover**

+-----------+----------------------------+
| *Default* | ``false``                  |
+-----------+----------------------------+
| *Setter*  | set_switch_on_hover(value) |
+-----------+----------------------------+
| *Getter*  | is_switch_on_hover()       |
+-----------+----------------------------+

如果\ ``true``\ ，当光标悬停在同一父级中也启用了\ ``switch_on_hover``\ 的另一个\ ``MenuButton``\ 上方时，它将关闭当前的\ ``MenuButton``\ 并打开另一个。

方法说明
--------

.. _class_MenuButton_method_get_popup:

- :ref:`PopupMenu<class_PopupMenu>` **get_popup** **(** **)** |const|

返回这个按钮中包含的 :ref:`PopupMenu<class_PopupMenu>`\ 。

\ **警告：**\ 这是一个必需的内部节点，移除和释放它可能会导致崩溃。如果你想隐藏它或它的任何子节点，请使用其 :ref:`CanvasItem.visible<class_CanvasItem_property_visible>` 属性。

----

.. _class_MenuButton_method_set_disable_shortcuts:

- void **set_disable_shortcuts** **(** :ref:`bool<class_bool>` disabled **)**

如果\ ``true``\ ，快捷方式将被禁用，无法用于触发按钮。

Theme Property Descriptions
---------------------------

.. _class_MenuButton_theme_color_font_color:

- :ref:`Color<class_Color>` **font_color**

+-----------+----------------------------------+
| *Default* | ``Color( 0.88, 0.88, 0.88, 1 )`` |
+-----------+----------------------------------+

``MenuButton``\ 默认的字体\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_MenuButton_theme_color_font_color_disabled:

- :ref:`Color<class_Color>` **font_color_disabled**

+-----------+---------------------------+
| *Default* | ``Color( 1, 1, 1, 0.3 )`` |
+-----------+---------------------------+

``MenuButton``\ 被禁用时的字体\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_MenuButton_theme_color_font_color_focus:

- :ref:`Color<class_Color>` **font_color_focus**

+-----------+----------------------------------+
| *Default* | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+-----------+----------------------------------+

当\ ``MenuButton``\ 获得焦点时使用的文本\ :ref:`Color<class_Color>`\ 。只替换按钮的正常文本颜色。禁用、悬停和按下状态优先于这个颜色。

----

.. _class_MenuButton_theme_color_font_color_hover:

- :ref:`Color<class_Color>` **font_color_hover**

+-----------+----------------------------------+
| *Default* | ``Color( 0.94, 0.94, 0.94, 1 )`` |
+-----------+----------------------------------+

当鼠标在 ``MenuButton`` 上悬停时使用的字体 :ref:`Color<class_Color>` 颜色。

----

.. _class_MenuButton_theme_color_font_color_pressed:

- :ref:`Color<class_Color>` **font_color_pressed**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+

当\ ``MenuButton``\ 被按下时使用的字体\ :ref:`Color<class_Color>`\ 颜色。

----

.. _class_MenuButton_theme_constant_hseparation:

- :ref:`int<class_int>` **hseparation**

+-----------+-------+
| *Default* | ``3`` |
+-----------+-------+

``MenuButton``\ 的文字和图标之间的水平间隙。

----

.. _class_MenuButton_theme_font_font:

- :ref:`Font<class_Font>` **font**

``MenuButton``\ 文本的\ :ref:`Font<class_Font>`\ 。

----

.. _class_MenuButton_theme_style_disabled:

- :ref:`StyleBox<class_StyleBox>` **disabled**

当\ ``MenuButton``\ 被禁用时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。

----

.. _class_MenuButton_theme_style_focus:

- :ref:`StyleBox<class_StyleBox>` **focus**

当\ ``MenuButton``\ 被聚焦时使用的\ :ref:`StyleBox<class_StyleBox>`\ 。它显示在当前的\ :ref:`StyleBox<class_StyleBox>`\ 上，所以使用\ :ref:`StyleBoxEmpty<class_StyleBoxEmpty>`\ 将只是禁用焦点的视觉效果。

----

.. _class_MenuButton_theme_style_hover:

- :ref:`StyleBox<class_StyleBox>` **hover**

当鼠标在 ``MenuButton`` 上悬停时使用的 :ref:`StyleBox<class_StyleBox>` 样式盒。

----

.. _class_MenuButton_theme_style_normal:

- :ref:`StyleBox<class_StyleBox>` **normal**

``MenuButton``\ 的默认\ :ref:`StyleBox<class_StyleBox>`\ 样式盒。

----

.. _class_MenuButton_theme_style_pressed:

- :ref:`StyleBox<class_StyleBox>` **pressed**

``MenuButton``\ 被按下时的\ :ref:`StyleBox<class_StyleBox>`\ 样式盒。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
