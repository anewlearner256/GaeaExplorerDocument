:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the SpatialMaterial.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SpatialMaterial:

SpatialMaterial
===============

**Inherits:** :ref:`Material<class_Material>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

默认的 3D 渲染材质。

描述
----

这提供了一个默认的材质，具有多种渲染功能和属性，无需编写着色器代码。详情请看下面的教程。

教程
----

- :doc:`../tutorials/3d/spatial_material`

属性
----

+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                                      | :ref:`albedo_color<class_SpatialMaterial_property_albedo_color>`                                     | ``Color( 1, 1, 1, 1 )`` |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`albedo_texture<class_SpatialMaterial_property_albedo_texture>`                                 |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`anisotropy<class_SpatialMaterial_property_anisotropy>`                                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`anisotropy_enabled<class_SpatialMaterial_property_anisotropy_enabled>`                         | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`anisotropy_flowmap<class_SpatialMaterial_property_anisotropy_flowmap>`                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`ao_enabled<class_SpatialMaterial_property_ao_enabled>`                                         | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`ao_light_affect<class_SpatialMaterial_property_ao_light_affect>`                               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`ao_on_uv2<class_SpatialMaterial_property_ao_on_uv2>`                                           |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`ao_texture<class_SpatialMaterial_property_ao_texture>`                                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>`     | :ref:`ao_texture_channel<class_SpatialMaterial_property_ao_texture_channel>`                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`AsyncMode<enum_SpatialMaterial_AsyncMode>`               | :ref:`async_mode<class_SpatialMaterial_property_async_mode>`                                         | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`clearcoat<class_SpatialMaterial_property_clearcoat>`                                           |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`clearcoat_enabled<class_SpatialMaterial_property_clearcoat_enabled>`                           | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`clearcoat_gloss<class_SpatialMaterial_property_clearcoat_gloss>`                               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`clearcoat_texture<class_SpatialMaterial_property_clearcoat_texture>`                           |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`depth_deep_parallax<class_SpatialMaterial_property_depth_deep_parallax>`                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`depth_enabled<class_SpatialMaterial_property_depth_enabled>`                                   | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`depth_flip_binormal<class_SpatialMaterial_property_depth_flip_binormal>`                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`depth_flip_tangent<class_SpatialMaterial_property_depth_flip_tangent>`                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                          | :ref:`depth_max_layers<class_SpatialMaterial_property_depth_max_layers>`                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                          | :ref:`depth_min_layers<class_SpatialMaterial_property_depth_min_layers>`                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`depth_scale<class_SpatialMaterial_property_depth_scale>`                                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`depth_texture<class_SpatialMaterial_property_depth_texture>`                                   |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`detail_albedo<class_SpatialMaterial_property_detail_albedo>`                                   |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`BlendMode<enum_SpatialMaterial_BlendMode>`               | :ref:`detail_blend_mode<class_SpatialMaterial_property_detail_blend_mode>`                           |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`detail_enabled<class_SpatialMaterial_property_detail_enabled>`                                 | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`detail_mask<class_SpatialMaterial_property_detail_mask>`                                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`detail_normal<class_SpatialMaterial_property_detail_normal>`                                   |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`DetailUV<enum_SpatialMaterial_DetailUV>`                 | :ref:`detail_uv_layer<class_SpatialMaterial_property_detail_uv_layer>`                               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`distance_fade_max_distance<class_SpatialMaterial_property_distance_fade_max_distance>`         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`distance_fade_min_distance<class_SpatialMaterial_property_distance_fade_min_distance>`         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`DistanceFadeMode<enum_SpatialMaterial_DistanceFadeMode>` | :ref:`distance_fade_mode<class_SpatialMaterial_property_distance_fade_mode>`                         | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                                      | :ref:`emission<class_SpatialMaterial_property_emission>`                                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`emission_enabled<class_SpatialMaterial_property_emission_enabled>`                             | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`emission_energy<class_SpatialMaterial_property_emission_energy>`                               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`emission_on_uv2<class_SpatialMaterial_property_emission_on_uv2>`                               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`EmissionOperator<enum_SpatialMaterial_EmissionOperator>` | :ref:`emission_operator<class_SpatialMaterial_property_emission_operator>`                           |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`emission_texture<class_SpatialMaterial_property_emission_texture>`                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_albedo_tex_force_srgb<class_SpatialMaterial_property_flags_albedo_tex_force_srgb>`       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_disable_ambient_light<class_SpatialMaterial_property_flags_disable_ambient_light>`       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_do_not_receive_shadows<class_SpatialMaterial_property_flags_do_not_receive_shadows>`     | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_ensure_correct_normals<class_SpatialMaterial_property_flags_ensure_correct_normals>`     | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_fixed_size<class_SpatialMaterial_property_flags_fixed_size>`                             | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_no_depth_test<class_SpatialMaterial_property_flags_no_depth_test>`                       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_transparent<class_SpatialMaterial_property_flags_transparent>`                           | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_unshaded<class_SpatialMaterial_property_flags_unshaded>`                                 | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_use_point_size<class_SpatialMaterial_property_flags_use_point_size>`                     | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_use_shadow_to_opacity<class_SpatialMaterial_property_flags_use_shadow_to_opacity>`       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_vertex_lighting<class_SpatialMaterial_property_flags_vertex_lighting>`                   | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`flags_world_triplanar<class_SpatialMaterial_property_flags_world_triplanar>`                   | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`metallic<class_SpatialMaterial_property_metallic>`                                             | ``0.0``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`metallic_specular<class_SpatialMaterial_property_metallic_specular>`                           | ``0.5``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`metallic_texture<class_SpatialMaterial_property_metallic_texture>`                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>`     | :ref:`metallic_texture_channel<class_SpatialMaterial_property_metallic_texture_channel>`             | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`normal_enabled<class_SpatialMaterial_property_normal_enabled>`                                 | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`normal_scale<class_SpatialMaterial_property_normal_scale>`                                     |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`normal_texture<class_SpatialMaterial_property_normal_texture>`                                 |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`params_alpha_scissor_threshold<class_SpatialMaterial_property_params_alpha_scissor_threshold>` |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`params_billboard_keep_scale<class_SpatialMaterial_property_params_billboard_keep_scale>`       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`BillboardMode<enum_SpatialMaterial_BillboardMode>`       | :ref:`params_billboard_mode<class_SpatialMaterial_property_params_billboard_mode>`                   | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`BlendMode<enum_SpatialMaterial_BlendMode>`               | :ref:`params_blend_mode<class_SpatialMaterial_property_params_blend_mode>`                           | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`CullMode<enum_SpatialMaterial_CullMode>`                 | :ref:`params_cull_mode<class_SpatialMaterial_property_params_cull_mode>`                             | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`DepthDrawMode<enum_SpatialMaterial_DepthDrawMode>`       | :ref:`params_depth_draw_mode<class_SpatialMaterial_property_params_depth_draw_mode>`                 | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`DiffuseMode<enum_SpatialMaterial_DiffuseMode>`           | :ref:`params_diffuse_mode<class_SpatialMaterial_property_params_diffuse_mode>`                       | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`params_grow<class_SpatialMaterial_property_params_grow>`                                       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`params_grow_amount<class_SpatialMaterial_property_params_grow_amount>`                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`params_line_width<class_SpatialMaterial_property_params_line_width>`                           | ``1.0``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`params_point_size<class_SpatialMaterial_property_params_point_size>`                           | ``1.0``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`SpecularMode<enum_SpatialMaterial_SpecularMode>`         | :ref:`params_specular_mode<class_SpatialMaterial_property_params_specular_mode>`                     | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`params_use_alpha_scissor<class_SpatialMaterial_property_params_use_alpha_scissor>`             | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                          | :ref:`particles_anim_h_frames<class_SpatialMaterial_property_particles_anim_h_frames>`               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`particles_anim_loop<class_SpatialMaterial_property_particles_anim_loop>`                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`int<class_int>`                                          | :ref:`particles_anim_v_frames<class_SpatialMaterial_property_particles_anim_v_frames>`               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`proximity_fade_distance<class_SpatialMaterial_property_proximity_fade_distance>`               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`proximity_fade_enable<class_SpatialMaterial_property_proximity_fade_enable>`                   | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`refraction_enabled<class_SpatialMaterial_property_refraction_enabled>`                         | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`refraction_scale<class_SpatialMaterial_property_refraction_scale>`                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`refraction_texture<class_SpatialMaterial_property_refraction_texture>`                         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>`     | :ref:`refraction_texture_channel<class_SpatialMaterial_property_refraction_texture_channel>`         |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`rim<class_SpatialMaterial_property_rim>`                                                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`rim_enabled<class_SpatialMaterial_property_rim_enabled>`                                       | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`rim_texture<class_SpatialMaterial_property_rim_texture>`                                       |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`rim_tint<class_SpatialMaterial_property_rim_tint>`                                             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`roughness<class_SpatialMaterial_property_roughness>`                                           | ``1.0``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`roughness_texture<class_SpatialMaterial_property_roughness_texture>`                           |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>`     | :ref:`roughness_texture_channel<class_SpatialMaterial_property_roughness_texture_channel>`           | ``0``                   |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`subsurf_scatter_enabled<class_SpatialMaterial_property_subsurf_scatter_enabled>`               | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`subsurf_scatter_strength<class_SpatialMaterial_property_subsurf_scatter_strength>`             |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`subsurf_scatter_texture<class_SpatialMaterial_property_subsurf_scatter_texture>`               |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                                      | :ref:`transmission<class_SpatialMaterial_property_transmission>`                                     |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`transmission_enabled<class_SpatialMaterial_property_transmission_enabled>`                     | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Texture<class_Texture>`                                  | :ref:`transmission_texture<class_SpatialMaterial_property_transmission_texture>`                     |                         |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                                  | :ref:`uv1_offset<class_SpatialMaterial_property_uv1_offset>`                                         | ``Vector3( 0, 0, 0 )``  |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                                  | :ref:`uv1_scale<class_SpatialMaterial_property_uv1_scale>`                                           | ``Vector3( 1, 1, 1 )``  |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`uv1_triplanar<class_SpatialMaterial_property_uv1_triplanar>`                                   | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`uv1_triplanar_sharpness<class_SpatialMaterial_property_uv1_triplanar_sharpness>`               | ``1.0``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                                  | :ref:`uv2_offset<class_SpatialMaterial_property_uv2_offset>`                                         | ``Vector3( 0, 0, 0 )``  |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`Vector3<class_Vector3>`                                  | :ref:`uv2_scale<class_SpatialMaterial_property_uv2_scale>`                                           | ``Vector3( 1, 1, 1 )``  |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`uv2_triplanar<class_SpatialMaterial_property_uv2_triplanar>`                                   | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                      | :ref:`uv2_triplanar_sharpness<class_SpatialMaterial_property_uv2_triplanar_sharpness>`               | ``1.0``                 |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`vertex_color_is_srgb<class_SpatialMaterial_property_vertex_color_is_srgb>`                     | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                        | :ref:`vertex_color_use_as_albedo<class_SpatialMaterial_property_vertex_color_use_as_albedo>`         | ``false``               |
+----------------------------------------------------------------+------------------------------------------------------------------------------------------------------+-------------------------+

方法
----

+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_feature<class_SpatialMaterial_method_get_feature>` **(** :ref:`Feature<enum_SpatialMaterial_Feature>` feature **)** |const|                                        |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`get_flag<class_SpatialMaterial_method_get_flag>` **(** :ref:`Flags<enum_SpatialMaterial_Flags>` flag **)** |const|                                                     |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Texture<class_Texture>` | :ref:`get_texture<class_SpatialMaterial_method_get_texture>` **(** :ref:`TextureParam<enum_SpatialMaterial_TextureParam>` param **)** |const|                                |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_feature<class_SpatialMaterial_method_set_feature>` **(** :ref:`Feature<enum_SpatialMaterial_Feature>` feature, :ref:`bool<class_bool>` enable **)**                |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_flag<class_SpatialMaterial_method_set_flag>` **(** :ref:`Flags<enum_SpatialMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**                             |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                          | :ref:`set_texture<class_SpatialMaterial_method_set_texture>` **(** :ref:`TextureParam<enum_SpatialMaterial_TextureParam>` param, :ref:`Texture<class_Texture>` texture **)** |
+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_SpatialMaterial_TextureParam:

.. _class_SpatialMaterial_constant_TEXTURE_ALBEDO:

.. _class_SpatialMaterial_constant_TEXTURE_METALLIC:

.. _class_SpatialMaterial_constant_TEXTURE_ROUGHNESS:

.. _class_SpatialMaterial_constant_TEXTURE_EMISSION:

.. _class_SpatialMaterial_constant_TEXTURE_NORMAL:

.. _class_SpatialMaterial_constant_TEXTURE_RIM:

.. _class_SpatialMaterial_constant_TEXTURE_CLEARCOAT:

.. _class_SpatialMaterial_constant_TEXTURE_FLOWMAP:

.. _class_SpatialMaterial_constant_TEXTURE_AMBIENT_OCCLUSION:

.. _class_SpatialMaterial_constant_TEXTURE_DEPTH:

.. _class_SpatialMaterial_constant_TEXTURE_SUBSURFACE_SCATTERING:

.. _class_SpatialMaterial_constant_TEXTURE_TRANSMISSION:

.. _class_SpatialMaterial_constant_TEXTURE_REFRACTION:

.. _class_SpatialMaterial_constant_TEXTURE_DETAIL_MASK:

.. _class_SpatialMaterial_constant_TEXTURE_DETAIL_ALBEDO:

.. _class_SpatialMaterial_constant_TEXTURE_DETAIL_NORMAL:

.. _class_SpatialMaterial_constant_TEXTURE_MAX:

enum **TextureParam**:

- **TEXTURE_ALBEDO** = **0** --- 指定每个像素颜色的纹理。

- **TEXTURE_METALLIC** = **1** --- 指定每个像素金属值的纹理。

- **TEXTURE_ROUGHNESS** = **2** --- 指定每个像素粗糙度值的纹理。

- **TEXTURE_EMISSION** = **3** --- 指定每个像素发射颜色的纹理。

- **TEXTURE_NORMAL** = **4** --- 指定每像素法向量的纹理。

- **TEXTURE_RIM** = **5** --- 指定每个像素边缘值的纹理。

- **TEXTURE_CLEARCOAT** = **6** --- 指定每像素清漆值的纹理。

- **TEXTURE_FLOWMAP** = **7** --- 指定每个像素流图方向的纹理，用于\ :ref:`anisotropy<class_SpatialMaterial_property_anisotropy>`\ 。

- **TEXTURE_AMBIENT_OCCLUSION** = **8** --- 指定每个像素环境遮挡值的纹理。

- **TEXTURE_DEPTH** = **9** --- 指定每个像素深度的纹理。

- **TEXTURE_SUBSURFACE_SCATTERING** = **10** --- 指定每个像素的亚表面散射的纹理。

- **TEXTURE_TRANSMISSION** = **11** --- 指定每个像素传输颜色的纹理。

- **TEXTURE_REFRACTION** = **12** --- 指定每个像素折射强度的纹理。

- **TEXTURE_DETAIL_MASK** = **13** --- 指定每像素细节蒙版混合值的纹理。

- **TEXTURE_DETAIL_ALBEDO** = **14** --- 指定每个像素细节颜色的纹理。

- **TEXTURE_DETAIL_NORMAL** = **15** --- 指定每个像素细节法线的纹理。

- **TEXTURE_MAX** = **16** --- 表示\ :ref:`TextureParam<enum_SpatialMaterial_TextureParam>`\ 枚举的大小。

----

.. _enum_SpatialMaterial_DetailUV:

.. _class_SpatialMaterial_constant_DETAIL_UV_1:

.. _class_SpatialMaterial_constant_DETAIL_UV_2:

enum **DetailUV**:

- **DETAIL_UV_1** = **0** --- 使用\ ``UV``\ 与细节纹理。

- **DETAIL_UV_2** = **1** --- 使用\ ``UV2``\ 与细节纹理。

----

.. _enum_SpatialMaterial_Feature:

.. _class_SpatialMaterial_constant_FEATURE_TRANSPARENT:

.. _class_SpatialMaterial_constant_FEATURE_EMISSION:

.. _class_SpatialMaterial_constant_FEATURE_NORMAL_MAPPING:

.. _class_SpatialMaterial_constant_FEATURE_RIM:

.. _class_SpatialMaterial_constant_FEATURE_CLEARCOAT:

.. _class_SpatialMaterial_constant_FEATURE_ANISOTROPY:

.. _class_SpatialMaterial_constant_FEATURE_AMBIENT_OCCLUSION:

.. _class_SpatialMaterial_constant_FEATURE_DEPTH_MAPPING:

.. _class_SpatialMaterial_constant_FEATURE_SUBSURACE_SCATTERING:

.. _class_SpatialMaterial_constant_FEATURE_TRANSMISSION:

.. _class_SpatialMaterial_constant_FEATURE_REFRACTION:

.. _class_SpatialMaterial_constant_FEATURE_DETAIL:

.. _class_SpatialMaterial_constant_FEATURE_MAX:

enum **Feature**:

- **FEATURE_TRANSPARENT** = **0** --- 用于设置 :ref:`flags_transparent<class_SpatialMaterial_property_flags_transparent>` 的常量。

- **FEATURE_EMISSION** = **1** --- 用于设置\ :ref:`emission_enabled<class_SpatialMaterial_property_emission_enabled>`\ 的常量。

- **FEATURE_NORMAL_MAPPING** = **2** --- 用于设置\ :ref:`normal_enabled<class_SpatialMaterial_property_normal_enabled>`\ 的常量。

- **FEATURE_RIM** = **3** --- 用于设置\ :ref:`rim_enabled<class_SpatialMaterial_property_rim_enabled>`\ 的常量。

- **FEATURE_CLEARCOAT** = **4** --- 用于设置\ :ref:`clearcoat_enabled<class_SpatialMaterial_property_clearcoat_enabled>`\ 的常量。

- **FEATURE_ANISOTROPY** = **5** --- 用于设置 :ref:`anisotropy_enabled<class_SpatialMaterial_property_anisotropy_enabled>` 的常量。

- **FEATURE_AMBIENT_OCCLUSION** = **6** --- 用于设置\ :ref:`ao_enabled<class_SpatialMaterial_property_ao_enabled>`\ 的常量。

- **FEATURE_DEPTH_MAPPING** = **7** --- 用于设置 :ref:`depth_enabled<class_SpatialMaterial_property_depth_enabled>` 的常量。

- **FEATURE_SUBSURACE_SCATTERING** = **8** --- 用于设置\ :ref:`subsurf_scatter_enabled<class_SpatialMaterial_property_subsurf_scatter_enabled>`\ 的常量。

- **FEATURE_TRANSMISSION** = **9** --- 用于设置 :ref:`transmission_enabled<class_SpatialMaterial_property_transmission_enabled>` 的常量。

- **FEATURE_REFRACTION** = **10** --- 用于设置\ :ref:`refraction_enabled<class_SpatialMaterial_property_refraction_enabled>`\ 的常量。

- **FEATURE_DETAIL** = **11** --- 用于设置\ :ref:`detail_enabled<class_SpatialMaterial_property_detail_enabled>`\ 的常量。

- **FEATURE_MAX** = **12** --- 表示\ :ref:`Feature<enum_SpatialMaterial_Feature>`\ 枚举的大小。

----

.. _enum_SpatialMaterial_BlendMode:

.. _class_SpatialMaterial_constant_BLEND_MODE_MIX:

.. _class_SpatialMaterial_constant_BLEND_MODE_ADD:

.. _class_SpatialMaterial_constant_BLEND_MODE_SUB:

.. _class_SpatialMaterial_constant_BLEND_MODE_MUL:

enum **BlendMode**:

- **BLEND_MODE_MIX** = **0** --- 默认的混合模式。根据对象的alpha值，在背景上混合对象的颜色。

- **BLEND_MODE_ADD** = **1** --- 对象的颜色被添加到背景中。

- **BLEND_MODE_SUB** = **2** --- 从背景中减去对象的颜色。

- **BLEND_MODE_MUL** = **3** --- 对象的颜色与背景相乘。

----

.. _enum_SpatialMaterial_DepthDrawMode:

.. _class_SpatialMaterial_constant_DEPTH_DRAW_OPAQUE_ONLY:

.. _class_SpatialMaterial_constant_DEPTH_DRAW_ALWAYS:

.. _class_SpatialMaterial_constant_DEPTH_DRAW_DISABLED:

.. _class_SpatialMaterial_constant_DEPTH_DRAW_ALPHA_OPAQUE_PREPASS:

enum **DepthDrawMode**:

- **DEPTH_DRAW_OPAQUE_ONLY** = **0** --- 默认的深度绘制模式。深度只针对不透明的对象绘制。

- **DEPTH_DRAW_ALWAYS** = **1** --- 不透明和透明的对象都要计算深度绘制。

- **DEPTH_DRAW_DISABLED** = **2** --- 没有深度的绘制。

- **DEPTH_DRAW_ALPHA_OPAQUE_PREPASS** = **3** --- 对于透明对象，首先对不透明部分进行不透明传递，然后绘制透明度。

----

.. _enum_SpatialMaterial_CullMode:

.. _class_SpatialMaterial_constant_CULL_BACK:

.. _class_SpatialMaterial_constant_CULL_FRONT:

.. _class_SpatialMaterial_constant_CULL_DISABLED:

enum **CullMode**:

- **CULL_BACK** = **0** --- 默认的裁剪模式。当不可见时，对象的背面会被剔除。

- **CULL_FRONT** = **1** --- 物体的正面不可见时，就会被剔除。

- **CULL_DISABLED** = **2** --- 不进行剔除。

----

.. _enum_SpatialMaterial_Flags:

.. _class_SpatialMaterial_constant_FLAG_UNSHADED:

.. _class_SpatialMaterial_constant_FLAG_USE_VERTEX_LIGHTING:

.. _class_SpatialMaterial_constant_FLAG_DISABLE_DEPTH_TEST:

.. _class_SpatialMaterial_constant_FLAG_ALBEDO_FROM_VERTEX_COLOR:

.. _class_SpatialMaterial_constant_FLAG_SRGB_VERTEX_COLOR:

.. _class_SpatialMaterial_constant_FLAG_USE_POINT_SIZE:

.. _class_SpatialMaterial_constant_FLAG_FIXED_SIZE:

.. _class_SpatialMaterial_constant_FLAG_BILLBOARD_KEEP_SCALE:

.. _class_SpatialMaterial_constant_FLAG_UV1_USE_TRIPLANAR:

.. _class_SpatialMaterial_constant_FLAG_UV2_USE_TRIPLANAR:

.. _class_SpatialMaterial_constant_FLAG_AO_ON_UV2:

.. _class_SpatialMaterial_constant_FLAG_EMISSION_ON_UV2:

.. _class_SpatialMaterial_constant_FLAG_USE_ALPHA_SCISSOR:

.. _class_SpatialMaterial_constant_FLAG_TRIPLANAR_USE_WORLD:

.. _class_SpatialMaterial_constant_FLAG_ALBEDO_TEXTURE_FORCE_SRGB:

.. _class_SpatialMaterial_constant_FLAG_DONT_RECEIVE_SHADOWS:

.. _class_SpatialMaterial_constant_FLAG_DISABLE_AMBIENT_LIGHT:

.. _class_SpatialMaterial_constant_FLAG_ENSURE_CORRECT_NORMALS:

.. _class_SpatialMaterial_constant_FLAG_USE_SHADOW_TO_OPACITY:

.. _class_SpatialMaterial_constant_FLAG_MAX:

enum **Flags**:

- **FLAG_UNSHADED** = **0** --- 物体上不使用照明。颜色直接来自 ``ALBEDO``\ 。

- **FLAG_USE_VERTEX_LIGHTING** = **1** --- 光照是按顶点计算的，而不是按像素计算。这可用于以牺牲质量为代价提高着色器的速度。

- **FLAG_DISABLE_DEPTH_TEST** = **2** --- 禁用深度测试，所以这个对象被画在所有其他对象的上面。但是，在绘制顺序中，在它之后绘制的对象可能会覆盖它。

- **FLAG_ALBEDO_FROM_VERTEX_COLOR** = **3** --- 将 ``ALBEDO`` 设置为网格中指定的每顶点颜色。

- **FLAG_SRGB_VERTEX_COLOR** = **4** --- 顶点颜色在sRGB空间，需要转成线性。仅适用于 GLES3 渲染器。

- **FLAG_USE_POINT_SIZE** = **5** --- 使用点大小来改变原始点的大小。同时改变反射率纹理查找，使用 ``POINT_COORD`` 而不是 ``UV``\ 。

- **FLAG_FIXED_SIZE** = **6** --- 按深度缩放对象，使其在屏幕上显示的大小始终相同。

- **FLAG_BILLBOARD_KEEP_SCALE** = **7** --- 着色器将保持为网格的缩放设置。否则，当做广告牌时，缩放会丢失。仅在 :ref:`params_billboard_mode<class_SpatialMaterial_property_params_billboard_mode>` 为 :ref:`BILLBOARD_ENABLED<class_SpatialMaterial_constant_BILLBOARD_ENABLED>` 时适用。

- **FLAG_UV1_USE_TRIPLANAR** = **8** --- 对所有通常会使用\ ``UV``\ 的纹理查找使用三平面纹理查找。

- **FLAG_UV2_USE_TRIPLANAR** = **9** --- 对所有通常会使用\ ``UV2``\ 的纹理查找使用三平面纹理查找。

- **FLAG_AO_ON_UV2** = **11** --- 使用\ ``UV2``\ 坐标从\ :ref:`ao_texture<class_SpatialMaterial_property_ao_texture>`\ 中查找。

- **FLAG_EMISSION_ON_UV2** = **12** --- 使用\ ``UV2``\ 坐标，从\ :ref:`emission_texture<class_SpatialMaterial_property_emission_texture>`\ 中查找。

- **FLAG_USE_ALPHA_SCISSOR** = **13** --- 使用alpha剪刀。由 :ref:`params_use_alpha_scissor<class_SpatialMaterial_property_params_use_alpha_scissor>` 设置。

- **FLAG_TRIPLANAR_USE_WORLD** = **10** --- 在三平面纹理查找中使用世界坐标而不是局部坐标。

- **FLAG_ALBEDO_TEXTURE_FORCE_SRGB** = **14** --- 强制着色器将反射率从sRGB空间转换为线性空间。

- **FLAG_DONT_RECEIVE_SHADOWS** = **15** --- 禁用从其他对象接收阴影。

- **FLAG_DISABLE_AMBIENT_LIGHT** = **17** --- 禁用接收环境光。

- **FLAG_ENSURE_CORRECT_NORMALS** = **16** --- 确保法线显示正确，即使缩放比例不均匀。

- **FLAG_USE_SHADOW_TO_OPACITY** = **18** --- 启用阴影到不透明度功能。

- **FLAG_MAX** = **19** --- 表示\ :ref:`Flags<enum_SpatialMaterial_Flags>`\ 枚举的大小。

----

.. _enum_SpatialMaterial_DiffuseMode:

.. _class_SpatialMaterial_constant_DIFFUSE_BURLEY:

.. _class_SpatialMaterial_constant_DIFFUSE_LAMBERT:

.. _class_SpatialMaterial_constant_DIFFUSE_LAMBERT_WRAP:

.. _class_SpatialMaterial_constant_DIFFUSE_OREN_NAYAR:

.. _class_SpatialMaterial_constant_DIFFUSE_TOON:

enum **DiffuseMode**:

- **DIFFUSE_BURLEY** = **0** --- 默认的漫反射散射算法。

- **DIFFUSE_LAMBERT** = **1** --- 漫散射忽略了粗糙度。

- **DIFFUSE_LAMBERT_WRAP** = **2** --- 当粗糙度增加时，将Lambert延伸到90度以上。

- **DIFFUSE_OREN_NAYAR** = **3** --- 尝试使用粗糙度来模拟微表面处理。

- **DIFFUSE_TOON** = **4** --- 使用硬切口进行照明，平滑度受粗糙度影响。

----

.. _enum_SpatialMaterial_SpecularMode:

.. _class_SpatialMaterial_constant_SPECULAR_SCHLICK_GGX:

.. _class_SpatialMaterial_constant_SPECULAR_BLINN:

.. _class_SpatialMaterial_constant_SPECULAR_PHONG:

.. _class_SpatialMaterial_constant_SPECULAR_TOON:

.. _class_SpatialMaterial_constant_SPECULAR_DISABLED:

enum **SpecularMode**:

- **SPECULAR_SCHLICK_GGX** = **0** --- 默认镜面反射Blob。

- **SPECULAR_BLINN** = **1** --- 旧的镜面算法，为了兼容而加入。

- **SPECULAR_PHONG** = **2** --- 旧的镜面算法，为了兼容而加入。

- **SPECULAR_TOON** = **3** --- 基于粗糙度更改大小的 Toon 斑点。

- **SPECULAR_DISABLED** = **4** --- 无镜面斑点。

----

.. _enum_SpatialMaterial_BillboardMode:

.. _class_SpatialMaterial_constant_BILLBOARD_DISABLED:

.. _class_SpatialMaterial_constant_BILLBOARD_ENABLED:

.. _class_SpatialMaterial_constant_BILLBOARD_FIXED_Y:

.. _class_SpatialMaterial_constant_BILLBOARD_PARTICLES:

enum **BillboardMode**:

- **BILLBOARD_DISABLED** = **0** --- 广告牌模式被禁用。

- **BILLBOARD_ENABLED** = **1** --- 对象的Z轴将始终面向相机。

- **BILLBOARD_FIXED_Y** = **2** --- 对象的X轴将始终面向相机。

- **BILLBOARD_PARTICLES** = **3** --- 当分配给\ :ref:`Particles<class_Particles>`\ 和\ :ref:`CPUParticles<class_CPUParticles>`\ 节点时用于粒子系统。启用\ ``particles_anim_*``\ 属性。

为了播放动画，\ :ref:`ParticlesMaterial.anim_speed<class_ParticlesMaterial_property_anim_speed>`\ 或\ :ref:`CPUParticles.anim_speed<class_CPUParticles_property_anim_speed>`\ 也应该被设置为正值。

----

.. _enum_SpatialMaterial_TextureChannel:

.. _class_SpatialMaterial_constant_TEXTURE_CHANNEL_RED:

.. _class_SpatialMaterial_constant_TEXTURE_CHANNEL_GREEN:

.. _class_SpatialMaterial_constant_TEXTURE_CHANNEL_BLUE:

.. _class_SpatialMaterial_constant_TEXTURE_CHANNEL_ALPHA:

.. _class_SpatialMaterial_constant_TEXTURE_CHANNEL_GRAYSCALE:

enum **TextureChannel**:

- **TEXTURE_CHANNEL_RED** = **0** --- 用来读取纹理的红色通道。

- **TEXTURE_CHANNEL_GREEN** = **1** --- 用来读取纹理的绿色通道。

- **TEXTURE_CHANNEL_BLUE** = **2** --- 用来读取纹理的蓝色通道。

- **TEXTURE_CHANNEL_ALPHA** = **3** --- 用来读取纹理的alpha通道。

- **TEXTURE_CHANNEL_GRAYSCALE** = **4** --- 当前未使用.

----

.. _enum_SpatialMaterial_EmissionOperator:

.. _class_SpatialMaterial_constant_EMISSION_OP_ADD:

.. _class_SpatialMaterial_constant_EMISSION_OP_MULTIPLY:

enum **EmissionOperator**:

- **EMISSION_OP_ADD** = **0** --- 将发射颜色添加到发射纹理的颜色上。

- **EMISSION_OP_MULTIPLY** = **1** --- 将发射颜色乘以发射纹理的颜色。

----

.. _enum_SpatialMaterial_DistanceFadeMode:

.. _class_SpatialMaterial_constant_DISTANCE_FADE_DISABLED:

.. _class_SpatialMaterial_constant_DISTANCE_FADE_PIXEL_ALPHA:

.. _class_SpatialMaterial_constant_DISTANCE_FADE_PIXEL_DITHER:

.. _class_SpatialMaterial_constant_DISTANCE_FADE_OBJECT_DITHER:

enum **DistanceFadeMode**:

- **DISTANCE_FADE_DISABLED** = **0** --- 不要使用距离淡化。

- **DISTANCE_FADE_PIXEL_ALPHA** = **1** --- 根据每个像素与相机的距离，使用alpha通道平滑地淡化对象。

- **DISTANCE_FADE_PIXEL_DITHER** = **2** --- 根据每个像素与相机的距离，使用抖动方法平滑地淡化对象。抖动会根据设定的模式丢弃像素，在不启用透明的情况下平滑淡化。在某些硬件上，这比 :ref:`DISTANCE_FADE_PIXEL_ALPHA<class_SpatialMaterial_constant_DISTANCE_FADE_PIXEL_ALPHA>` 更快。

- **DISTANCE_FADE_OBJECT_DITHER** = **3** --- 根据对象与相机的距离，使用抖动的方法平滑地淡化对象。抖动根据设定的模式丢弃像素，在不启用透明度的情况下平滑淡化。在某些硬件上，这可能比\ :ref:`DISTANCE_FADE_PIXEL_ALPHA<class_SpatialMaterial_constant_DISTANCE_FADE_PIXEL_ALPHA>`\ 更快。

----

.. _enum_SpatialMaterial_AsyncMode:

.. _class_SpatialMaterial_constant_ASYNC_MODE_VISIBLE:

.. _class_SpatialMaterial_constant_ASYNC_MODE_HIDDEN:

enum **AsyncMode**:

- **ASYNC_MODE_VISIBLE** = **0** --- The real conditioned shader needed on each situation will be sent for background compilation. In the meantime, a very complex shader that adapts to every situation will be used ("ubershader"). This ubershader is much slower to render, but will keep the game running without stalling to compile. Once shader compilation is done, the ubershader is replaced by the traditional optimized shader.

- **ASYNC_MODE_HIDDEN** = **1** --- Anything with this material applied won't be rendered while this material's shader is being compiled.

This is useful for optimization, in cases where the visuals won't suffer from having certain non-essential elements missing during the short time their shaders are being compiled.

属性说明
--------

.. _class_SpatialMaterial_property_albedo_color:

- :ref:`Color<class_Color>` **albedo_color**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_albedo(value)       |
+-----------+-------------------------+
| *Getter*  | get_albedo()            |
+-----------+-------------------------+

材质的底色。

----

.. _class_SpatialMaterial_property_albedo_texture:

- :ref:`Texture<class_Texture>` **albedo_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

纹理乘以 :ref:`albedo_color<class_SpatialMaterial_property_albedo_color>`\ 。用于对象的基本纹理。

----

.. _class_SpatialMaterial_property_anisotropy:

- :ref:`float<class_float>` **anisotropy**

+----------+-----------------------+
| *Setter* | set_anisotropy(value) |
+----------+-----------------------+
| *Getter* | get_anisotropy()      |
+----------+-----------------------+

各向异性效应的强度。

----

.. _class_SpatialMaterial_property_anisotropy_enabled:

- :ref:`bool<class_bool>` **anisotropy_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，则启用各向异性。改变镜面小球的形状，并使其与切线空间对齐。此功能需要有网格切线才行。如果网格不包含切线，各向异性的效果就会被破坏。

----

.. _class_SpatialMaterial_property_anisotropy_flowmap:

- :ref:`Texture<class_Texture>` **anisotropy_flowmap**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用于各向异性计算的偏移切线图的纹理。

----

.. _class_SpatialMaterial_property_ao_enabled:

- :ref:`bool<class_bool>` **ao_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，启用环境遮挡。环境遮挡根据 :ref:`ao_texture<class_SpatialMaterial_property_ao_texture>` 使区域变暗。

----

.. _class_SpatialMaterial_property_ao_light_affect:

- :ref:`float<class_float>` **ao_light_affect**

+----------+----------------------------+
| *Setter* | set_ao_light_affect(value) |
+----------+----------------------------+
| *Getter* | get_ao_light_affect()      |
+----------+----------------------------+

环境遮挡对灯光照明的影响程度。如果 ``0``\ ，环境遮挡只影响环境光。如果 ``1``\ ，环境遮挡对灯光的影响和对环境光的影响一样大。这可以用来影响环境遮挡效果的强度，但通常看起来不真实。

----

.. _class_SpatialMaterial_property_ao_on_uv2:

- :ref:`bool<class_bool>` **ao_on_uv2**

+----------+-----------------+
| *Setter* | set_flag(value) |
+----------+-----------------+
| *Getter* | get_flag()      |
+----------+-----------------+

如果 ``true``\ ，请使用 ``UV2`` 坐标从\ :ref:`ao_texture<class_SpatialMaterial_property_ao_texture>`\ 中查找。

----

.. _class_SpatialMaterial_property_ao_texture:

- :ref:`Texture<class_Texture>` **ao_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

定义物体上给定点的环境遮挡量的纹理。

----

.. _class_SpatialMaterial_property_ao_texture_channel:

- :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>` **ao_texture_channel**

+----------+-------------------------------+
| *Setter* | set_ao_texture_channel(value) |
+----------+-------------------------------+
| *Getter* | get_ao_texture_channel()      |
+----------+-------------------------------+

指定 :ref:`ao_texture<class_SpatialMaterial_property_ao_texture>` 的通道，其中存储环境遮挡信息。当您在一个纹理中存储多个效果的信息时，这很有用。例如，如果您将金属效果存储在R通道中，将粗糙度存储在B通道中，将环境遮挡存储在G通道中，就可以减少您使用的纹理数量。

----

.. _class_SpatialMaterial_property_async_mode:

- :ref:`AsyncMode<enum_SpatialMaterial_AsyncMode>` **async_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_async_mode(value) |
+-----------+-----------------------+
| *Getter*  | get_async_mode()      |
+-----------+-----------------------+

If :ref:`ProjectSettings.rendering/gles3/shaders/shader_compilation_mode<class_ProjectSettings_property_rendering/gles3/shaders/shader_compilation_mode>` is ``Synchronous`` (with or without cache), this determines how this material must behave in regards to asynchronous shader compilation.

\ :ref:`ASYNC_MODE_VISIBLE<class_SpatialMaterial_constant_ASYNC_MODE_VISIBLE>` is the default and the best for most cases.

----

.. _class_SpatialMaterial_property_clearcoat:

- :ref:`float<class_float>` **clearcoat**

+----------+----------------------+
| *Setter* | set_clearcoat(value) |
+----------+----------------------+
| *Getter* | get_clearcoat()      |
+----------+----------------------+

设置清漆效果的强度。设置为 ``0`` 与禁用清漆效果相同。

----

.. _class_SpatialMaterial_property_clearcoat_enabled:

- :ref:`bool<class_bool>` **clearcoat_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，则启用清漆渲染。在照明计算中添加二级透明通路，从而导致添加镜面反射斑点。这使得材质看起来好像有一层透明层，可以是有光泽的也可以是粗糙的。

\ **注意：**\ 如果材质将 :ref:`flags_unshaded<class_SpatialMaterial_property_flags_unshaded>` 设置为 ``true``\ ，则透明涂层渲染不可见。

----

.. _class_SpatialMaterial_property_clearcoat_gloss:

- :ref:`float<class_float>` **clearcoat_gloss**

+----------+----------------------------+
| *Setter* | set_clearcoat_gloss(value) |
+----------+----------------------------+
| *Getter* | get_clearcoat_gloss()      |
+----------+----------------------------+

设置清漆通道的粗糙度，数值越高，清漆越光滑，数值越低，清漆越粗糙。值越高，清漆越光滑，值越低，清漆越粗糙。

----

.. _class_SpatialMaterial_property_clearcoat_texture:

- :ref:`Texture<class_Texture>` **clearcoat_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

定义清漆效果的强度和清漆的光泽度的纹理。强度在红色通道中指定，光泽度在绿色通道中指定。

----

.. _class_SpatialMaterial_property_depth_deep_parallax:

- :ref:`bool<class_bool>` **depth_deep_parallax**

+----------+----------------------------------+
| *Setter* | set_depth_deep_parallax(value)   |
+----------+----------------------------------+
| *Getter* | is_depth_deep_parallax_enabled() |
+----------+----------------------------------+

如果 ``true``\ ，着色器将在沿视图射线的多个点上读取深度纹理以确定遮挡和视差。这可能对性能要求很高，但会产生更逼真的深度映射。

----

.. _class_SpatialMaterial_property_depth_enabled:

- :ref:`bool<class_bool>` **depth_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，则启用深度映射（也称为“视差映射”或“高度映射”）。另见 :ref:`normal_enabled<class_SpatialMaterial_property_normal_enabled>`\ 。

\ **注意：**\ 如果在同一材质上使用三平面贴图，则不支持深度贴图。如果启用 :ref:`uv1_triplanar<class_SpatialMaterial_property_uv1_triplanar>`\ ，则 :ref:`depth_enabled<class_SpatialMaterial_property_depth_enabled>` 的值将被忽略。

----

.. _class_SpatialMaterial_property_depth_flip_binormal:

- :ref:`bool<class_bool>` **depth_flip_binormal**

+----------+----------------------------------------------+
| *Setter* | set_depth_deep_parallax_flip_binormal(value) |
+----------+----------------------------------------------+
| *Getter* | get_depth_deep_parallax_flip_binormal()      |
+----------+----------------------------------------------+

如果 ``true``\ ，则在深度效果中使用之前会翻转副法线的方向。如果你对你的副法线的编码方式与深度效果有冲突，这可能是必要的。

----

.. _class_SpatialMaterial_property_depth_flip_tangent:

- :ref:`bool<class_bool>` **depth_flip_tangent**

+----------+---------------------------------------------+
| *Setter* | set_depth_deep_parallax_flip_tangent(value) |
+----------+---------------------------------------------+
| *Getter* | get_depth_deep_parallax_flip_tangent()      |
+----------+---------------------------------------------+

如果 ``true``\ ，切线方向在深度效果中使用前会翻转。如果你对切线的编码方式与深度效果有冲突，这可能是必要的。

----

.. _class_SpatialMaterial_property_depth_max_layers:

- :ref:`int<class_int>` **depth_max_layers**

+----------+-------------------------------------------+
| *Setter* | set_depth_deep_parallax_max_layers(value) |
+----------+-------------------------------------------+
| *Getter* | get_depth_deep_parallax_max_layers()      |
+----------+-------------------------------------------+

使用 :ref:`depth_deep_parallax<class_SpatialMaterial_property_depth_deep_parallax>` 且视图方向垂直于对象表面时使用的层数。较高的数字对性能的要求更高，而较低的数字可能看起来不那么清晰。

----

.. _class_SpatialMaterial_property_depth_min_layers:

- :ref:`int<class_int>` **depth_min_layers**

+----------+-------------------------------------------+
| *Setter* | set_depth_deep_parallax_min_layers(value) |
+----------+-------------------------------------------+
| *Getter* | get_depth_deep_parallax_min_layers()      |
+----------+-------------------------------------------+

使用 :ref:`depth_deep_parallax<class_SpatialMaterial_property_depth_deep_parallax>` 且视图方向平行于对象表面时使用的层数。较高的数字对性能的要求更高，而较低的数字可能看起来不那么清晰。

----

.. _class_SpatialMaterial_property_depth_scale:

- :ref:`float<class_float>` **depth_scale**

+----------+------------------------+
| *Setter* | set_depth_scale(value) |
+----------+------------------------+
| *Getter* | get_depth_scale()      |
+----------+------------------------+

缩放深度偏移效果。更高的数字将创建更大的深度。

----

.. _class_SpatialMaterial_property_depth_texture:

- :ref:`Texture<class_Texture>` **depth_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用来确定某个像素深度的纹理。深度总是存储在红色通道中。

----

.. _class_SpatialMaterial_property_detail_albedo:

- :ref:`Texture<class_Texture>` **detail_albedo**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

指定细节叠加的颜色的纹理。

----

.. _class_SpatialMaterial_property_detail_blend_mode:

- :ref:`BlendMode<enum_SpatialMaterial_BlendMode>` **detail_blend_mode**

+----------+------------------------------+
| *Setter* | set_detail_blend_mode(value) |
+----------+------------------------------+
| *Getter* | get_detail_blend_mode()      |
+----------+------------------------------+

指定 :ref:`detail_albedo<class_SpatialMaterial_property_detail_albedo>` 应如何与当前 ``ALBEDO`` 混合。参阅 :ref:`BlendMode<enum_SpatialMaterial_BlendMode>` 选项。

----

.. _class_SpatialMaterial_property_detail_enabled:

- :ref:`bool<class_bool>` **detail_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果\ ``true``\ ，启用细节叠加。Detail是基于\ :ref:`detail_mask<class_SpatialMaterial_property_detail_mask>`\ 在对象表面混合的第二个纹理。这可以用来给物体增加变化，或者在两种不同的反射率/法线纹理之间进行混合。

----

.. _class_SpatialMaterial_property_detail_mask:

- :ref:`Texture<class_Texture>` **detail_mask**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

纹理用于指定细节纹理与基础纹理的混合方式。

----

.. _class_SpatialMaterial_property_detail_normal:

- :ref:`Texture<class_Texture>` **detail_normal**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

指定细节叠加层每像素法线的纹理。

\ **注意：** GaaeExplorer希望法线贴图使用X +，Y-和Z +坐标。请参阅\ `this page <http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates>`__\ ，以比较流行引擎期望的法线地图坐标。

----

.. _class_SpatialMaterial_property_detail_uv_layer:

- :ref:`DetailUV<enum_SpatialMaterial_DetailUV>` **detail_uv_layer**

+----------+----------------------+
| *Setter* | set_detail_uv(value) |
+----------+----------------------+
| *Getter* | get_detail_uv()      |
+----------+----------------------+

指定细节层是使用\ ``UV``\ 还是\ ``UV2``\ 。选项请参阅\ :ref:`DetailUV<enum_SpatialMaterial_DetailUV>`\ 。

----

.. _class_SpatialMaterial_property_distance_fade_max_distance:

- :ref:`float<class_float>` **distance_fade_max_distance**

+----------+---------------------------------------+
| *Setter* | set_distance_fade_max_distance(value) |
+----------+---------------------------------------+
| *Getter* | get_distance_fade_max_distance()      |
+----------+---------------------------------------+

物体看起来完全不透明的距离。

\ **注意：**\ 如果 ``distance_fade_max_distance`` 小于 ``distance_fade_min_distance``\ ，则行为相反。物体将在 ``distance_fade_max_distance`` 处开始逐渐消失，并在到达 ``distance_fade_min_distance`` 时完全消失。

----

.. _class_SpatialMaterial_property_distance_fade_min_distance:

- :ref:`float<class_float>` **distance_fade_min_distance**

+----------+---------------------------------------+
| *Setter* | set_distance_fade_min_distance(value) |
+----------+---------------------------------------+
| *Getter* | get_distance_fade_min_distance()      |
+----------+---------------------------------------+

物体开始变得可见的距离。如果物体的距离小于这个距离，它将是不可见的。

\ **注意：**\ 如果 ``distance_fade_min_distance`` 大于 ``distance_fade_max_distance``\ ，则行为将相反。物体将在 ``distance_fade_max_distance`` 处开始逐渐消失，并在到达 ``distance_fade_min_distance`` 时完全消失。

----

.. _class_SpatialMaterial_property_distance_fade_mode:

- :ref:`DistanceFadeMode<enum_SpatialMaterial_DistanceFadeMode>` **distance_fade_mode**

+-----------+--------------------------+
| *Default* | ``0``                    |
+-----------+--------------------------+
| *Setter*  | set_distance_fade(value) |
+-----------+--------------------------+
| *Getter*  | get_distance_fade()      |
+-----------+--------------------------+

指定要使用的淡入淡出类型。可以是任何一个\ :ref:`DistanceFadeMode<enum_SpatialMaterial_DistanceFadeMode>`\ 。

----

.. _class_SpatialMaterial_property_emission:

- :ref:`Color<class_Color>` **emission**

+----------+---------------------+
| *Setter* | set_emission(value) |
+----------+---------------------+
| *Getter* | get_emission()      |
+----------+---------------------+

发出的光的颜色。参阅\ :ref:`emission_enabled<class_SpatialMaterial_property_emission_enabled>`\ 。

----

.. _class_SpatialMaterial_property_emission_enabled:

- :ref:`bool<class_bool>` **emission_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，物体会发光。发光使物体看起来更亮。如果使用 :ref:`GIProbe<class_GIProbe>` 或 :ref:`BakedLightmap<class_BakedLightmap>` 并且此对象用于烘焙照明，则该对象还可以将光投射到其他对象上。

----

.. _class_SpatialMaterial_property_emission_energy:

- :ref:`float<class_float>` **emission_energy**

+----------+----------------------------+
| *Setter* | set_emission_energy(value) |
+----------+----------------------------+
| *Getter* | get_emission_energy()      |
+----------+----------------------------+

发出的光的强度。参阅\ :ref:`emission_enabled<class_SpatialMaterial_property_emission_enabled>`\ 。

----

.. _class_SpatialMaterial_property_emission_on_uv2:

- :ref:`bool<class_bool>` **emission_on_uv2**

+----------+-----------------+
| *Setter* | set_flag(value) |
+----------+-----------------+
| *Getter* | get_flag()      |
+----------+-----------------+

使用\ ``UV2``\ 从\ :ref:`emission_texture<class_SpatialMaterial_property_emission_texture>`\ 中读取。

----

.. _class_SpatialMaterial_property_emission_operator:

- :ref:`EmissionOperator<enum_SpatialMaterial_EmissionOperator>` **emission_operator**

+----------+------------------------------+
| *Setter* | set_emission_operator(value) |
+----------+------------------------------+
| *Getter* | get_emission_operator()      |
+----------+------------------------------+

设置\ :ref:`emission<class_SpatialMaterial_property_emission>`\ 与\ :ref:`emission_texture<class_SpatialMaterial_property_emission_texture>`\ 的交互方式。可以是加法或乘法。选项参阅 :ref:`EmissionOperator<enum_SpatialMaterial_EmissionOperator>` 。

----

.. _class_SpatialMaterial_property_emission_texture:

- :ref:`Texture<class_Texture>` **emission_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

纹理，指定某点的表面发光的程度。

----

.. _class_SpatialMaterial_property_flags_albedo_tex_force_srgb:

- :ref:`bool<class_bool>` **flags_albedo_tex_force_srgb**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

强制将 :ref:`albedo_texture<class_SpatialMaterial_property_albedo_texture>` 从sRGB空间转换为线性空间。

----

.. _class_SpatialMaterial_property_flags_disable_ambient_light:

- :ref:`bool<class_bool>` **flags_disable_ambient_light**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，则对象不接收环境光。

----

.. _class_SpatialMaterial_property_flags_do_not_receive_shadows:

- :ref:`bool<class_bool>` **flags_do_not_receive_shadows**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，则对象不会收到投射到其上的阴影。

----

.. _class_SpatialMaterial_property_flags_ensure_correct_normals:

- :ref:`bool<class_bool>` **flags_ensure_correct_normals**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，着色器将计算额外的操作，以确保在使用非均匀比例时法线保持正确。仅在使用非均匀缩放时启用。

----

.. _class_SpatialMaterial_property_flags_fixed_size:

- :ref:`bool<class_bool>` **flags_fixed_size**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，则无论距离远近，对象都以相同的尺寸呈现。

----

.. _class_SpatialMaterial_property_flags_no_depth_test:

- :ref:`bool<class_bool>` **flags_no_depth_test**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，深度测试被禁用，对象将按渲染顺序绘制。

----

.. _class_SpatialMaterial_property_flags_transparent:

- :ref:`bool<class_bool>` **flags_transparent**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果\ ``true``\ ，则启用物体的透明度。参阅 :ref:`params_blend_mode<class_SpatialMaterial_property_params_blend_mode>`\ 。

----

.. _class_SpatialMaterial_property_flags_unshaded:

- :ref:`bool<class_bool>` **flags_unshaded**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，则物体不受光照影响。

----

.. _class_SpatialMaterial_property_flags_use_point_size:

- :ref:`bool<class_bool>` **flags_use_point_size**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，可以改变渲染点的大小。

\ **注意:**\ 这只对几何体是基于点而不是基于三角形的对象有效。参阅\ :ref:`params_point_size<class_SpatialMaterial_property_params_point_size>`\ 。

----

.. _class_SpatialMaterial_property_flags_use_shadow_to_opacity:

- :ref:`bool<class_bool>` **flags_use_shadow_to_opacity**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，启用 "阴影到不透明度 "的渲染模式，在该模式下，光照会修改 alpha，使阴影区域不透明，非阴影区域透明。对于在AR中把阴影叠加到相机画面上很有用。

----

.. _class_SpatialMaterial_property_flags_vertex_lighting:

- :ref:`bool<class_bool>` **flags_vertex_lighting**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，则按顶点而不是按像素计算光照。这可能会提高低端设备的性能。

----

.. _class_SpatialMaterial_property_flags_world_triplanar:

- :ref:`bool<class_bool>` **flags_world_triplanar**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，则在世界空间而不是物体局部空间中计算三平面映射。另见 :ref:`uv1_triplanar<class_SpatialMaterial_property_uv1_triplanar>`\ 。

----

.. _class_SpatialMaterial_property_metallic:

- :ref:`float<class_float>` **metallic**

+-----------+---------------------+
| *Default* | ``0.0``             |
+-----------+---------------------+
| *Setter*  | set_metallic(value) |
+-----------+---------------------+
| *Getter*  | get_metallic()      |
+-----------+---------------------+

高值使材质看起来更像金属。非金属使用其反射率作为漫射色，并在镜面反射上添加漫射。对于非金属，反射出现在反照率颜色之上。金属使用其反射率作为镜面反射的倍数，并将漫射色设置为黑色，从而产生有色反射。材质在全金属或全非金属时效果更好，介于 ``0`` 和 ``1`` 之间的值只能用于金属和非金属部分之间的混合。要改变反射量，请使用\ :ref:`roughness<class_SpatialMaterial_property_roughness>`\ 。

----

.. _class_SpatialMaterial_property_metallic_specular:

- :ref:`float<class_float>` **metallic_specular**

+-----------+---------------------+
| *Default* | ``0.5``             |
+-----------+---------------------+
| *Setter*  | set_specular(value) |
+-----------+---------------------+
| *Getter*  | get_specular()      |
+-----------+---------------------+

设置镜面光叶的大小。镜面叶是光源反射的亮点。

\ **注意:**\ 与\ :ref:`metallic<class_SpatialMaterial_property_metallic>`\ 不同，这不是能量守恒，所以在大多数情况下，应该将其保留在\ ``0.5``\ 。参阅\ :ref:`roughness<class_SpatialMaterial_property_roughness>`\ 。

----

.. _class_SpatialMaterial_property_metallic_texture:

- :ref:`Texture<class_Texture>` **metallic_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用于指定对象的金属质感。此值乘\ :ref:`metallic<class_SpatialMaterial_property_metallic>`\ 。

----

.. _class_SpatialMaterial_property_metallic_texture_channel:

- :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>` **metallic_texture_channel**

+-----------+-------------------------------------+
| *Default* | ``0``                               |
+-----------+-------------------------------------+
| *Setter*  | set_metallic_texture_channel(value) |
+-----------+-------------------------------------+
| *Getter*  | get_metallic_texture_channel()      |
+-----------+-------------------------------------+

指定存储金属信息的 :ref:`metallic_texture<class_SpatialMaterial_property_metallic_texture>` 的通道。当您在一个纹理中存储多个效果的信息时，这很有用。例如，如果您将金属效果存储在红色通道中，将粗糙度存储在蓝色通道中，将环境遮挡存储在绿色通道中，就可以减少您使用的纹理数量。

----

.. _class_SpatialMaterial_property_normal_enabled:

- :ref:`bool<class_bool>` **normal_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果\ ``true``\ ，则启用法线映射。

----

.. _class_SpatialMaterial_property_normal_scale:

- :ref:`float<class_float>` **normal_scale**

+----------+-------------------------+
| *Setter* | set_normal_scale(value) |
+----------+-------------------------+
| *Getter* | get_normal_scale()      |
+----------+-------------------------+

法线贴图的效果强度。

----

.. _class_SpatialMaterial_property_normal_texture:

- :ref:`Texture<class_Texture>` **normal_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用来指定像素点的法线的纹理。\ ``normal_texture``\ 只使用红色和绿色通道，忽略蓝色和alpha通道。从 ``normal_texture`` 读取的法线围绕 :ref:`Mesh<class_Mesh>` 提供的表面法线定向。

\ **注意：** Mesh必须在其顶点数据中同时定义法线和切线。否则，法线贴图将无法正确渲染，会出现整个表面变暗的情况。如果用\ :ref:`SurfaceTool<class_SurfaceTool>`\ 创建几何体，可以使用\ :ref:`SurfaceTool.generate_normals<class_SurfaceTool_method_generate_normals>`\ 和\ :ref:`SurfaceTool.generate_tangents<class_SurfaceTool_method_generate_tangents>`\ 来分别自动生成法线和切线。

\ **注意：** GaaeExplorer希望法线贴图使用X+、Y-和Z+坐标。请参阅\ `该页 <http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates>`__\ ，了解流行引擎所期望的法线贴图坐标的比较。

----

.. _class_SpatialMaterial_property_params_alpha_scissor_threshold:

- :ref:`float<class_float>` **params_alpha_scissor_threshold**

+----------+------------------------------------+
| *Setter* | set_alpha_scissor_threshold(value) |
+----------+------------------------------------+
| *Getter* | get_alpha_scissor_threshold()      |
+----------+------------------------------------+

alpha scissor 会丢弃数值的阈值。

----

.. _class_SpatialMaterial_property_params_billboard_keep_scale:

- :ref:`bool<class_bool>` **params_billboard_keep_scale**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，着色器将保持为网格缩放设置。否则，当做广告牌时，缩放会丢失。仅在 :ref:`params_billboard_mode<class_SpatialMaterial_property_params_billboard_mode>` 为 :ref:`BILLBOARD_ENABLED<class_SpatialMaterial_constant_BILLBOARD_ENABLED>` 时适用。

----

.. _class_SpatialMaterial_property_params_billboard_mode:

- :ref:`BillboardMode<enum_SpatialMaterial_BillboardMode>` **params_billboard_mode**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_billboard_mode(value) |
+-----------+---------------------------+
| *Getter*  | get_billboard_mode()      |
+-----------+---------------------------+

控制对象如何面向摄像机。参阅\ :ref:`BillboardMode<enum_SpatialMaterial_BillboardMode>`\ 。

\ **注意：** 广告牌模式不适合VR，因为当屏幕贴在你的头部而不是在桌子上时，摄像机的左右向量不是水平的。参阅\ `GitHub issue #41567 <https://github.com/godotengine/godot/issues/41567>`__\ 。

----

.. _class_SpatialMaterial_property_params_blend_mode:

- :ref:`BlendMode<enum_SpatialMaterial_BlendMode>` **params_blend_mode**

+-----------+-----------------------+
| *Default* | ``0``                 |
+-----------+-----------------------+
| *Setter*  | set_blend_mode(value) |
+-----------+-----------------------+
| *Getter*  | get_blend_mode()      |
+-----------+-----------------------+

材质的混合模式。

\ **注意:**\ 除 ``Mix`` 以外的值会强制对象进入透明管道。参阅 :ref:`BlendMode<enum_SpatialMaterial_BlendMode>`\ 。

----

.. _class_SpatialMaterial_property_params_cull_mode:

- :ref:`CullMode<enum_SpatialMaterial_CullMode>` **params_cull_mode**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_cull_mode(value) |
+-----------+----------------------+
| *Getter*  | get_cull_mode()      |
+-----------+----------------------+

渲染背面时，不绘制对象的哪一面。参阅 :ref:`CullMode<enum_SpatialMaterial_CullMode>`\ 。

----

.. _class_SpatialMaterial_property_params_depth_draw_mode:

- :ref:`DepthDrawMode<enum_SpatialMaterial_DepthDrawMode>` **params_depth_draw_mode**

+-----------+----------------------------+
| *Default* | ``0``                      |
+-----------+----------------------------+
| *Setter*  | set_depth_draw_mode(value) |
+-----------+----------------------------+
| *Getter*  | get_depth_draw_mode()      |
+-----------+----------------------------+

确定深度渲染发生的时间。请参阅深度绘制模式 :ref:`DepthDrawMode<enum_SpatialMaterial_DepthDrawMode>` 。另见\ :ref:`flags_transparent<class_SpatialMaterial_property_flags_transparent>`\ 。

----

.. _class_SpatialMaterial_property_params_diffuse_mode:

- :ref:`DiffuseMode<enum_SpatialMaterial_DiffuseMode>` **params_diffuse_mode**

+-----------+-------------------------+
| *Default* | ``0``                   |
+-----------+-------------------------+
| *Setter*  | set_diffuse_mode(value) |
+-----------+-------------------------+
| *Getter*  | get_diffuse_mode()      |
+-----------+-------------------------+

用于漫反射光散射的算法。参见 :ref:`DiffuseMode<enum_SpatialMaterial_DiffuseMode>`\ 。

----

.. _class_SpatialMaterial_property_params_grow:

- :ref:`bool<class_bool>` **params_grow**

+-----------+-------------------------+
| *Default* | ``false``               |
+-----------+-------------------------+
| *Setter*  | set_grow_enabled(value) |
+-----------+-------------------------+
| *Getter*  | is_grow_enabled()       |
+-----------+-------------------------+

如果\ ``true``\ ，启用顶点生长设置。参见\ :ref:`params_grow_amount<class_SpatialMaterial_property_params_grow_amount>`\ 。

----

.. _class_SpatialMaterial_property_params_grow_amount:

- :ref:`float<class_float>` **params_grow_amount**

+----------+-----------------+
| *Setter* | set_grow(value) |
+----------+-----------------+
| *Getter* | get_grow()      |
+----------+-----------------+

沿着法线的方向生长对象顶点。

----

.. _class_SpatialMaterial_property_params_line_width:

- :ref:`float<class_float>` **params_line_width**

+-----------+-----------------------+
| *Default* | ``1.0``               |
+-----------+-----------------------+
| *Setter*  | set_line_width(value) |
+-----------+-----------------------+
| *Getter*  | get_line_width()      |
+-----------+-----------------------+

目前在 GaaeExplorer 中未实现。

----

.. _class_SpatialMaterial_property_params_point_size:

- :ref:`float<class_float>` **params_point_size**

+-----------+-----------------------+
| *Default* | ``1.0``               |
+-----------+-----------------------+
| *Setter*  | set_point_size(value) |
+-----------+-----------------------+
| *Getter*  | get_point_size()      |
+-----------+-----------------------+

点的大小，以像素为单位。参见\ :ref:`flags_use_point_size<class_SpatialMaterial_property_flags_use_point_size>`\ 。

----

.. _class_SpatialMaterial_property_params_specular_mode:

- :ref:`SpecularMode<enum_SpatialMaterial_SpecularMode>` **params_specular_mode**

+-----------+--------------------------+
| *Default* | ``0``                    |
+-----------+--------------------------+
| *Setter*  | set_specular_mode(value) |
+-----------+--------------------------+
| *Getter*  | get_specular_mode()      |
+-----------+--------------------------+

镜面小球的渲染方法。参阅\ :ref:`SpecularMode<enum_SpatialMaterial_SpecularMode>`\ 。

----

.. _class_SpatialMaterial_property_params_use_alpha_scissor:

- :ref:`bool<class_bool>` **params_use_alpha_scissor**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，着色器将丢弃所有alpha值小于\ :ref:`params_alpha_scissor_threshold<class_SpatialMaterial_property_params_alpha_scissor_threshold>`\ 的像素。

----

.. _class_SpatialMaterial_property_particles_anim_h_frames:

- :ref:`int<class_int>` **particles_anim_h_frames**

+----------+------------------------------------+
| *Setter* | set_particles_anim_h_frames(value) |
+----------+------------------------------------+
| *Getter* | get_particles_anim_h_frames()      |
+----------+------------------------------------+

粒子精灵表中的水平帧数。仅在使用 :ref:`BILLBOARD_PARTICLES<class_SpatialMaterial_constant_BILLBOARD_PARTICLES>` 时启用。参阅\ :ref:`params_billboard_mode<class_SpatialMaterial_property_params_billboard_mode>`\ 。

----

.. _class_SpatialMaterial_property_particles_anim_loop:

- :ref:`bool<class_bool>` **particles_anim_loop**

+----------+--------------------------------+
| *Setter* | set_particles_anim_loop(value) |
+----------+--------------------------------+
| *Getter* | get_particles_anim_loop()      |
+----------+--------------------------------+

如果 ``true``\ ，循环粒子动画。仅在使用 :ref:`BILLBOARD_PARTICLES<class_SpatialMaterial_constant_BILLBOARD_PARTICLES>` 时启用。参阅\ :ref:`params_billboard_mode<class_SpatialMaterial_property_params_billboard_mode>`\ 。

----

.. _class_SpatialMaterial_property_particles_anim_v_frames:

- :ref:`int<class_int>` **particles_anim_v_frames**

+----------+------------------------------------+
| *Setter* | set_particles_anim_v_frames(value) |
+----------+------------------------------------+
| *Getter* | get_particles_anim_v_frames()      |
+----------+------------------------------------+

粒子精灵表中的垂直帧数。仅在使用 :ref:`BILLBOARD_PARTICLES<class_SpatialMaterial_constant_BILLBOARD_PARTICLES>` 时启用。参阅\ :ref:`params_billboard_mode<class_SpatialMaterial_property_params_billboard_mode>`\ 。

----

.. _class_SpatialMaterial_property_proximity_fade_distance:

- :ref:`float<class_float>` **proximity_fade_distance**

+----------+------------------------------------+
| *Setter* | set_proximity_fade_distance(value) |
+----------+------------------------------------+
| *Getter* | get_proximity_fade_distance()      |
+----------+------------------------------------+

渐变效果发生的距离。距离越大，物体褪色的时间越长。

----

.. _class_SpatialMaterial_property_proximity_fade_enable:

- :ref:`bool<class_bool>` **proximity_fade_enable**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_proximity_fade(value)   |
+-----------+-----------------------------+
| *Getter*  | is_proximity_fade_enabled() |
+-----------+-----------------------------+

如果\ ``true``\ ，则启用接近淡出效果。邻近淡出效果会根据每个像素与另一个对象的距离淡出。

----

.. _class_SpatialMaterial_property_refraction_enabled:

- :ref:`bool<class_bool>` **refraction_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果\ ``true``\ ，则启用折射效果。折射是根据来自物体后面的光线来扭曲透明度的。当使用GLES3后端时，材质的粗糙度值会影响折射的模糊度。较高的粗糙度值会使折射看起来更模糊。

----

.. _class_SpatialMaterial_property_refraction_scale:

- :ref:`float<class_float>` **refraction_scale**

+----------+-----------------------+
| *Setter* | set_refraction(value) |
+----------+-----------------------+
| *Getter* | get_refraction()      |
+----------+-----------------------+

折射效果的强度。较高的值会使折射的表现更加扭曲。

----

.. _class_SpatialMaterial_property_refraction_texture:

- :ref:`Texture<class_Texture>` **refraction_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

控制每个像素折射强度的纹理。乘以\ :ref:`refraction_scale<class_SpatialMaterial_property_refraction_scale>`\ 。

----

.. _class_SpatialMaterial_property_refraction_texture_channel:

- :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>` **refraction_texture_channel**

+----------+---------------------------------------+
| *Setter* | set_refraction_texture_channel(value) |
+----------+---------------------------------------+
| *Getter* | get_refraction_texture_channel()      |
+----------+---------------------------------------+

指定存储折射信息的\ :ref:`refraction_texture<class_SpatialMaterial_property_refraction_texture>`\ 的通道。当你在纹理中存储多种效果的信息时，这很有用。例如，如果你在红色通道中存储金属效果，在蓝色通道中存储粗糙度，在绿色通道中存储环境遮挡，就可以减少使用纹理的数量。

----

.. _class_SpatialMaterial_property_rim:

- :ref:`float<class_float>` **rim**

+----------+----------------+
| *Setter* | set_rim(value) |
+----------+----------------+
| *Getter* | get_rim()      |
+----------+----------------+

设置边缘照明效果的强度。

----

.. _class_SpatialMaterial_property_rim_enabled:

- :ref:`bool<class_bool>` **rim_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，则启用边缘效果。边缘照明增加了物体上掠过角度的亮度。

\ **注意：** 如果材质将 :ref:`flags_unshaded<class_SpatialMaterial_property_flags_unshaded>` 设置为 ``true``\ ，则边缘光照不可见。

----

.. _class_SpatialMaterial_property_rim_texture:

- :ref:`Texture<class_Texture>` **rim_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

纹理用于设置每个像素的边缘光照效果的强度。乘以\ :ref:`rim<class_SpatialMaterial_property_rim>`\ 。

----

.. _class_SpatialMaterial_property_rim_tint:

- :ref:`float<class_float>` **rim_tint**

+----------+---------------------+
| *Setter* | set_rim_tint(value) |
+----------+---------------------+
| *Getter* | get_rim_tint()      |
+----------+---------------------+

渲染边缘效果时，混合光照色和反射色的数量。如果\ ``0``\ 表示使用光色，\ ``1``\ 表示使用反照色。一般来说，中间值的效果最好。

----

.. _class_SpatialMaterial_property_roughness:

- :ref:`float<class_float>` **roughness**

+-----------+----------------------+
| *Default* | ``1.0``              |
+-----------+----------------------+
| *Setter*  | set_roughness(value) |
+-----------+----------------------+
| *Getter*  | get_roughness()      |
+-----------+----------------------+

表面反射。\ ``0`` 值表示一面完美的镜像，而 ``1`` 值则完全模糊了反射。另请参阅\ :ref:`metallic<class_SpatialMaterial_property_metallic>`\ 。

----

.. _class_SpatialMaterial_property_roughness_texture:

- :ref:`Texture<class_Texture>` **roughness_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用于控制每个像素粗糙度的纹理。乘以\ :ref:`roughness<class_SpatialMaterial_property_roughness>`\ 。

----

.. _class_SpatialMaterial_property_roughness_texture_channel:

- :ref:`TextureChannel<enum_SpatialMaterial_TextureChannel>` **roughness_texture_channel**

+-----------+--------------------------------------+
| *Default* | ``0``                                |
+-----------+--------------------------------------+
| *Setter*  | set_roughness_texture_channel(value) |
+-----------+--------------------------------------+
| *Getter*  | get_roughness_texture_channel()      |
+-----------+--------------------------------------+

指定 :ref:`ao_texture<class_SpatialMaterial_property_ao_texture>` 的通道，其中存储环境遮挡信息。当您在一个纹理中存储多个效果的信息时，这很有用。例如，如果您将金属效果存储在R通道中，将粗糙度存储在B通道中，将环境遮挡存储在G通道中，就可以减少您使用的纹理数量。

----

.. _class_SpatialMaterial_property_subsurf_scatter_enabled:

- :ref:`bool<class_bool>` **subsurf_scatter_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果\ ``true``\ ，则启用次表面散射。模拟光线穿透物体表面，被散射，然后出现。

----

.. _class_SpatialMaterial_property_subsurf_scatter_strength:

- :ref:`float<class_float>` **subsurf_scatter_strength**

+----------+-------------------------------------------+
| *Setter* | set_subsurface_scattering_strength(value) |
+----------+-------------------------------------------+
| *Getter* | get_subsurface_scattering_strength()      |
+----------+-------------------------------------------+

地下散射效应的强度。

----

.. _class_SpatialMaterial_property_subsurf_scatter_texture:

- :ref:`Texture<class_Texture>` **subsurf_scatter_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

用于控制次表面散射强度的纹理。存储在红色纹理通道中。乘以\ :ref:`subsurf_scatter_strength<class_SpatialMaterial_property_subsurf_scatter_strength>`\ 。

----

.. _class_SpatialMaterial_property_transmission:

- :ref:`Color<class_Color>` **transmission**

+----------+-------------------------+
| *Setter* | set_transmission(value) |
+----------+-------------------------+
| *Getter* | get_transmission()      |
+----------+-------------------------+

传输效果使用的颜色。表示穿过物体的光。

----

.. _class_SpatialMaterial_property_transmission_enabled:

- :ref:`bool<class_bool>` **transmission_enabled**

+-----------+--------------------+
| *Default* | ``false``          |
+-----------+--------------------+
| *Setter*  | set_feature(value) |
+-----------+--------------------+
| *Getter*  | get_feature()      |
+-----------+--------------------+

如果 ``true``\ ，则启用传输效果。

----

.. _class_SpatialMaterial_property_transmission_texture:

- :ref:`Texture<class_Texture>` **transmission_texture**

+----------+--------------------+
| *Setter* | set_texture(value) |
+----------+--------------------+
| *Getter* | get_texture()      |
+----------+--------------------+

纹理用于控制每个像素的传输效果。添加到\ :ref:`transmission<class_SpatialMaterial_property_transmission>`\ 。

----

.. _class_SpatialMaterial_property_uv1_offset:

- :ref:`Vector3<class_Vector3>` **uv1_offset**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 0, 0 )`` |
+-----------+------------------------+
| *Setter*  | set_uv1_offset(value)  |
+-----------+------------------------+
| *Getter*  | get_uv1_offset()       |
+-----------+------------------------+

``UV``\ 坐标的偏移量。这个量将被添加到顶点函数中的 ``UV`` 中。这可以用来偏移纹理。

----

.. _class_SpatialMaterial_property_uv1_scale:

- :ref:`Vector3<class_Vector3>` **uv1_scale**

+-----------+------------------------+
| *Default* | ``Vector3( 1, 1, 1 )`` |
+-----------+------------------------+
| *Setter*  | set_uv1_scale(value)   |
+-----------+------------------------+
| *Getter*  | get_uv1_scale()        |
+-----------+------------------------+

缩放 ``UV`` 坐标的多少。这个值乘以顶点函数中的\ ``UV``\ 。

----

.. _class_SpatialMaterial_property_uv1_triplanar:

- :ref:`bool<class_bool>` **uv1_triplanar**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，纹理将不使用 ``UV``\ ，而是使用三平面纹理查找来确定如何应用纹理。三平面纹理使用对象表面的方向来混合纹理坐标之间。它从源纹理中读取3次，每个轴一次，然后根据像素与每个轴的紧密程度在结果之间进行混合。这通常用于自然特征，以获得真实的材质混合。由于三平面纹理处理每一个像素需要更多的纹理读取，所以它比普通的UV纹理处理要慢得多。此外，由于它是在三个轴之间混合纹理，所以当你试图实现清晰的纹理时，它是不合适的。

----

.. _class_SpatialMaterial_property_uv1_triplanar_sharpness:

- :ref:`float<class_float>` **uv1_triplanar_sharpness**

+-----------+------------------------------------------+
| *Default* | ``1.0``                                  |
+-----------+------------------------------------------+
| *Setter*  | set_uv1_triplanar_blend_sharpness(value) |
+-----------+------------------------------------------+
| *Getter*  | get_uv1_triplanar_blend_sharpness()      |
+-----------+------------------------------------------+

较低的数字能使纹理更加柔和，而较高的数字则能使纹理更加锐利。

----

.. _class_SpatialMaterial_property_uv2_offset:

- :ref:`Vector3<class_Vector3>` **uv2_offset**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 0, 0 )`` |
+-----------+------------------------+
| *Setter*  | set_uv2_offset(value)  |
+-----------+------------------------+
| *Getter*  | get_uv2_offset()       |
+-----------+------------------------+

``UV2``\ 坐标的偏移量。这个量将被添加到顶点函数中的 ``UV2`` 中。这可以用来偏移纹理。

----

.. _class_SpatialMaterial_property_uv2_scale:

- :ref:`Vector3<class_Vector3>` **uv2_scale**

+-----------+------------------------+
| *Default* | ``Vector3( 1, 1, 1 )`` |
+-----------+------------------------+
| *Setter*  | set_uv2_scale(value)   |
+-----------+------------------------+
| *Getter*  | get_uv2_scale()        |
+-----------+------------------------+

缩放 ``UV`` 坐标的多少。这个值乘以顶点函数中的\ ``UV``\ 。

----

.. _class_SpatialMaterial_property_uv2_triplanar:

- :ref:`bool<class_bool>` **uv2_triplanar**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果 ``true``\ ，纹理将不使用 ``UV``\ ，而是使用三平面纹理查找来确定如何应用纹理。三平面纹理使用对象表面的方向来混合纹理坐标之间。它从源纹理中读取 3 次，每个轴一次，然后根据像素与每个轴的紧密程度在结果之间进行混合。这通常用于自然特征，以获得真实的材质混合。由于三平面纹理处理每一个像素需要更多的纹理读取，所以它比普通的 UV 纹理处理要慢得多。此外，由于它是在三个轴之间混合纹理，所以当你试图实现清晰的纹理时，它是不合适的。

----

.. _class_SpatialMaterial_property_uv2_triplanar_sharpness:

- :ref:`float<class_float>` **uv2_triplanar_sharpness**

+-----------+------------------------------------------+
| *Default* | ``1.0``                                  |
+-----------+------------------------------------------+
| *Setter*  | set_uv2_triplanar_blend_sharpness(value) |
+-----------+------------------------------------------+
| *Getter*  | get_uv2_triplanar_blend_sharpness()      |
+-----------+------------------------------------------+

较低的数字能使纹理更加柔和，而较高的数字则能使纹理更加锐利。

----

.. _class_SpatialMaterial_property_vertex_color_is_srgb:

- :ref:`bool<class_bool>` **vertex_color_is_srgb**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，则模型的顶点颜色将作为 sRGB 模式处理。

----

.. _class_SpatialMaterial_property_vertex_color_use_as_albedo:

- :ref:`bool<class_bool>` **vertex_color_use_as_albedo**

+-----------+-----------------+
| *Default* | ``false``       |
+-----------+-----------------+
| *Setter*  | set_flag(value) |
+-----------+-----------------+
| *Getter*  | get_flag()      |
+-----------+-----------------+

如果\ ``true``\ ，则使用顶点颜色作为反射率颜色。

方法说明
--------

.. _class_SpatialMaterial_method_get_feature:

- :ref:`bool<class_bool>` **get_feature** **(** :ref:`Feature<enum_SpatialMaterial_Feature>` feature **)** |const|

如果指定的 :ref:`Feature<enum_SpatialMaterial_Feature>` 被启用，返回 ``true``\ 。

----

.. _class_SpatialMaterial_method_get_flag:

- :ref:`bool<class_bool>` **get_flag** **(** :ref:`Flags<enum_SpatialMaterial_Flags>` flag **)** |const|

如果指定的标志被启用，返回 ``true``\ 。参阅 :ref:`Flags<enum_SpatialMaterial_Flags>` 枚举器的选项。

----

.. _class_SpatialMaterial_method_get_texture:

- :ref:`Texture<class_Texture>` **get_texture** **(** :ref:`TextureParam<enum_SpatialMaterial_TextureParam>` param **)** |const|

返回与指定的 :ref:`TextureParam<enum_SpatialMaterial_TextureParam>` 关联的 :ref:`Texture<class_Texture>`\ 。

----

.. _class_SpatialMaterial_method_set_feature:

- void **set_feature** **(** :ref:`Feature<enum_SpatialMaterial_Feature>` feature, :ref:`bool<class_bool>` enable **)**

如果 ``true``\ ，则启用指定的 :ref:`Feature<enum_SpatialMaterial_Feature>`\ 。 ``SpatialMaterial``\ s 中可用的许多功能需要在使用前启用。这样，只有在指定时才会产生使用该功能的成本。也可以通过将相应的成员设置为 ``true`` 来启用功能。

----

.. _class_SpatialMaterial_method_set_flag:

- void **set_flag** **(** :ref:`Flags<enum_SpatialMaterial_Flags>` flag, :ref:`bool<class_bool>` enable **)**

如果 ``true``\ ，则启用指定的标志。标志是可以打开和关闭的可选行为。使用该函数一次只能启用一个标志，不能将标志枚举器进行位掩码，以一次启用或禁用多个标志。也可以通过将相应成员设置为 ``true`` 来启用标志。有关选项，请参阅 :ref:`Flags<enum_SpatialMaterial_Flags>` 枚举器。

----

.. _class_SpatialMaterial_method_set_texture:

- void **set_texture** **(** :ref:`TextureParam<enum_SpatialMaterial_TextureParam>` param, :ref:`Texture<class_Texture>` texture **)**

设置指定的 :ref:`TextureParam<enum_SpatialMaterial_TextureParam>` 所使用的 :ref:`Texture<class_Texture>`\ 。该函数在设置以 ``*_texture`` 结尾的成员时调用。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
