:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the PhysicsDirectBodyState.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_PhysicsDirectBodyState:

PhysicsDirectBodyState
======================

**Inherits:** :ref:`Object<class_Object>`

直接访问\ :ref:`PhysicsServer<class_PhysicsServer>`\ 中的物理体的对象。

描述
----

提供对 :ref:`PhysicsServer<class_PhysicsServer>` 中物理实体的直接访问，允许安全更改物理属性。该对象通过刚体/角色物体的直接状态回调传递，直接改变该物体的状态。参阅 :ref:`RigidBody._integrate_forces<class_RigidBody_method__integrate_forces>`\ 。

教程
----

- :doc:`Physics introduction <../tutorials/physics/physics_introduction>`

- :doc:`Ray-casting <../tutorials/physics/ray-casting>`

属性
----

+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`     | :ref:`angular_velocity<class_PhysicsDirectBodyState_property_angular_velocity>`             |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`     | :ref:`center_of_mass<class_PhysicsDirectBodyState_property_center_of_mass>`                 |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`     | :ref:`inverse_inertia<class_PhysicsDirectBodyState_property_inverse_inertia>`               |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`         | :ref:`inverse_mass<class_PhysicsDirectBodyState_property_inverse_mass>`                     |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`     | :ref:`linear_velocity<class_PhysicsDirectBodyState_property_linear_velocity>`               |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Basis<class_Basis>`         | :ref:`principal_inertia_axes<class_PhysicsDirectBodyState_property_principal_inertia_axes>` |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`           | :ref:`sleeping<class_PhysicsDirectBodyState_property_sleeping>`                             |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`         | :ref:`step<class_PhysicsDirectBodyState_property_step>`                                     |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`         | :ref:`total_angular_damp<class_PhysicsDirectBodyState_property_total_angular_damp>`         |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`     | :ref:`total_gravity<class_PhysicsDirectBodyState_property_total_gravity>`                   |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`         | :ref:`total_linear_damp<class_PhysicsDirectBodyState_property_total_linear_damp>`           |
+-----------------------------------+---------------------------------------------------------------------------------------------+
| :ref:`Transform<class_Transform>` | :ref:`transform<class_PhysicsDirectBodyState_property_transform>`                           |
+-----------------------------------+---------------------------------------------------------------------------------------------+

方法
----

+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`add_central_force<class_PhysicsDirectBodyState_method_add_central_force>` **(** :ref:`Vector3<class_Vector3>` force **)**                                                       |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`add_force<class_PhysicsDirectBodyState_method_add_force>` **(** :ref:`Vector3<class_Vector3>` force, :ref:`Vector3<class_Vector3>` position **)**                               |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`add_torque<class_PhysicsDirectBodyState_method_add_torque>` **(** :ref:`Vector3<class_Vector3>` torque **)**                                                                    |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`apply_central_impulse<class_PhysicsDirectBodyState_method_apply_central_impulse>` **(** :ref:`Vector3<class_Vector3>` j **)**                                                   |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`apply_impulse<class_PhysicsDirectBodyState_method_apply_impulse>` **(** :ref:`Vector3<class_Vector3>` position, :ref:`Vector3<class_Vector3>` j **)**                           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`apply_torque_impulse<class_PhysicsDirectBodyState_method_apply_torque_impulse>` **(** :ref:`Vector3<class_Vector3>` j **)**                                                     |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                         | :ref:`get_contact_collider<class_PhysicsDirectBodyState_method_get_contact_collider>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                           |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                         | :ref:`get_contact_collider_id<class_PhysicsDirectBodyState_method_get_contact_collider_id>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                     |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Object<class_Object>`                                   | :ref:`get_contact_collider_object<class_PhysicsDirectBodyState_method_get_contact_collider_object>` **(** :ref:`int<class_int>` contact_idx **)** |const|                             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                                 | :ref:`get_contact_collider_position<class_PhysicsDirectBodyState_method_get_contact_collider_position>` **(** :ref:`int<class_int>` contact_idx **)** |const|                         |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                         | :ref:`get_contact_collider_shape<class_PhysicsDirectBodyState_method_get_contact_collider_shape>` **(** :ref:`int<class_int>` contact_idx **)** |const|                               |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                                 | :ref:`get_contact_collider_velocity_at_position<class_PhysicsDirectBodyState_method_get_contact_collider_velocity_at_position>` **(** :ref:`int<class_int>` contact_idx **)** |const| |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                         | :ref:`get_contact_count<class_PhysicsDirectBodyState_method_get_contact_count>` **(** **)** |const|                                                                                   |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                     | :ref:`get_contact_impulse<class_PhysicsDirectBodyState_method_get_contact_impulse>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                                 | :ref:`get_contact_local_normal<class_PhysicsDirectBodyState_method_get_contact_local_normal>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                   |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                                 | :ref:`get_contact_local_position<class_PhysicsDirectBodyState_method_get_contact_local_position>` **(** :ref:`int<class_int>` contact_idx **)** |const|                               |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                         | :ref:`get_contact_local_shape<class_PhysicsDirectBodyState_method_get_contact_local_shape>` **(** :ref:`int<class_int>` contact_idx **)** |const|                                     |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PhysicsDirectSpaceState<class_PhysicsDirectSpaceState>` | :ref:`get_space_state<class_PhysicsDirectBodyState_method_get_space_state>` **(** **)**                                                                                               |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                                 | :ref:`get_velocity_at_local_position<class_PhysicsDirectBodyState_method_get_velocity_at_local_position>` **(** :ref:`Vector3<class_Vector3>` local_position **)** |const|            |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                          | :ref:`integrate_forces<class_PhysicsDirectBodyState_method_integrate_forces>` **(** **)**                                                                                             |
+---------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_PhysicsDirectBodyState_property_angular_velocity:

- :ref:`Vector3<class_Vector3>` **angular_velocity**

+----------+-----------------------------+
| *Setter* | set_angular_velocity(value) |
+----------+-----------------------------+
| *Getter* | get_angular_velocity()      |
+----------+-----------------------------+

物体的旋转速度，使用轴-角格式。向量的大小表示旋转率，单位为\ *弧度*\ 每秒。

----

.. _class_PhysicsDirectBodyState_property_center_of_mass:

- :ref:`Vector3<class_Vector3>` **center_of_mass**

+----------+----------------------+
| *Getter* | get_center_of_mass() |
+----------+----------------------+

----

.. _class_PhysicsDirectBodyState_property_inverse_inertia:

- :ref:`Vector3<class_Vector3>` **inverse_inertia**

+----------+-----------------------+
| *Getter* | get_inverse_inertia() |
+----------+-----------------------+

物体惯性的倒数。

----

.. _class_PhysicsDirectBodyState_property_inverse_mass:

- :ref:`float<class_float>` **inverse_mass**

+----------+--------------------+
| *Getter* | get_inverse_mass() |
+----------+--------------------+

物体质量的倒数。

----

.. _class_PhysicsDirectBodyState_property_linear_velocity:

- :ref:`Vector3<class_Vector3>` **linear_velocity**

+----------+----------------------------+
| *Setter* | set_linear_velocity(value) |
+----------+----------------------------+
| *Getter* | get_linear_velocity()      |
+----------+----------------------------+

物体的线速度，单位为单位每秒。

----

.. _class_PhysicsDirectBodyState_property_principal_inertia_axes:

- :ref:`Basis<class_Basis>` **principal_inertia_axes**

+----------+------------------------------+
| *Getter* | get_principal_inertia_axes() |
+----------+------------------------------+

----

.. _class_PhysicsDirectBodyState_property_sleeping:

- :ref:`bool<class_bool>` **sleeping**

+----------+------------------------+
| *Setter* | set_sleep_state(value) |
+----------+------------------------+
| *Getter* | is_sleeping()          |
+----------+------------------------+

如果\ ``true``\ ，则该物体当前处于睡眠状态(不活动)。

----

.. _class_PhysicsDirectBodyState_property_step:

- :ref:`float<class_float>` **step**

+----------+------------+
| *Getter* | get_step() |
+----------+------------+

用于模拟的时间步长(delta)。

----

.. _class_PhysicsDirectBodyState_property_total_angular_damp:

- :ref:`float<class_float>` **total_angular_damp**

+----------+--------------------------+
| *Getter* | get_total_angular_damp() |
+----------+--------------------------+

物体停止转动的速度，如果没有任何其他力使它运动。

----

.. _class_PhysicsDirectBodyState_property_total_gravity:

- :ref:`Vector3<class_Vector3>` **total_gravity**

+----------+---------------------+
| *Getter* | get_total_gravity() |
+----------+---------------------+

这个物体上的总重力向量。

----

.. _class_PhysicsDirectBodyState_property_total_linear_damp:

- :ref:`float<class_float>` **total_linear_damp**

+----------+-------------------------+
| *Getter* | get_total_linear_damp() |
+----------+-------------------------+

物体停止运动的速率，如果没有任何其他力使它运动。

----

.. _class_PhysicsDirectBodyState_property_transform:

- :ref:`Transform<class_Transform>` **transform**

+----------+----------------------+
| *Setter* | set_transform(value) |
+----------+----------------------+
| *Getter* | get_transform()      |
+----------+----------------------+

物体的变换矩阵。

方法说明
--------

.. _class_PhysicsDirectBodyState_method_add_central_force:

- void **add_central_force** **(** :ref:`Vector3<class_Vector3>` force **)**

增加一个恒定的方向力，而不影响旋转。

这相当于\ ``add_force(force, Vector3(0,0,0))``\ 。

----

.. _class_PhysicsDirectBodyState_method_add_force:

- void **add_force** **(** :ref:`Vector3<class_Vector3>` force, :ref:`Vector3<class_Vector3>` position **)**

向实体添加有作用点的力。力和相对于主体原点的偏移都在全局坐标中。

----

.. _class_PhysicsDirectBodyState_method_add_torque:

- void **add_torque** **(** :ref:`Vector3<class_Vector3>` torque **)**

在不影响位置的情况下增加一个恒定的旋转力。

----

.. _class_PhysicsDirectBodyState_method_apply_central_impulse:

- void **apply_central_impulse** **(** :ref:`Vector3<class_Vector3>` j **)**

施加单一方向的冲量而不影响旋转。

这等价于\ ``apply_impulse(Vector3(0,0,0)， impulse)``\ 。

----

.. _class_PhysicsDirectBodyState_method_apply_impulse:

- void **apply_impulse** **(** :ref:`Vector3<class_Vector3>` position, :ref:`Vector3<class_Vector3>` j **)**

对物体施加一个有作用点的冲量。冲量是时间无关的! 在每一帧中施加冲量将产生一个与帧速率相关的力。出于这个原因，它应该只在模拟一次性冲击时使用。该位置使用全局坐标系的旋转，但以物体的原点为中心。

----

.. _class_PhysicsDirectBodyState_method_apply_torque_impulse:

- void **apply_torque_impulse** **(** :ref:`Vector3<class_Vector3>` j **)**

施加一个扭矩冲量(这将受到物体质量和形状的影响)。这将围绕作为参数传递的向量\ ``j``\ 旋转主体。

----

.. _class_PhysicsDirectBodyState_method_get_contact_collider:

- :ref:`RID<class_RID>` **get_contact_collider** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体的\ :ref:`RID<class_RID>`\ 。

----

.. _class_PhysicsDirectBodyState_method_get_contact_collider_id:

- :ref:`int<class_int>` **get_contact_collider_id** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体的对象id。

----

.. _class_PhysicsDirectBodyState_method_get_contact_collider_object:

- :ref:`Object<class_Object>` **get_contact_collider_object** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞对象。

----

.. _class_PhysicsDirectBodyState_method_get_contact_collider_position:

- :ref:`Vector3<class_Vector3>` **get_contact_collider_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体中的接触位置。

----

.. _class_PhysicsDirectBodyState_method_get_contact_collider_shape:

- :ref:`int<class_int>` **get_contact_collider_shape** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体的形状索引。

----

.. _class_PhysicsDirectBodyState_method_get_contact_collider_velocity_at_position:

- :ref:`Vector3<class_Vector3>` **get_contact_collider_velocity_at_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞体接触点处的线速度向量。

----

.. _class_PhysicsDirectBodyState_method_get_contact_count:

- :ref:`int<class_int>` **get_contact_count** **(** **)** |const|

返回此物体与其他物体的接触次数。

\ **注意：**\ 默认情况下，除非物体被设为监视接触者，否则返回0。参阅 :ref:`RigidBody2D.contact_monitor<class_RigidBody2D_property_contact_monitor>`\ 。

----

.. _class_PhysicsDirectBodyState_method_get_contact_impulse:

- :ref:`float<class_float>` **get_contact_impulse** **(** :ref:`int<class_int>` contact_idx **)** |const|

由接触产生的冲量。仅适用于子弹物理。

----

.. _class_PhysicsDirectBodyState_method_get_contact_local_normal:

- :ref:`Vector3<class_Vector3>` **get_contact_local_normal** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回接触点处的局部法线。

----

.. _class_PhysicsDirectBodyState_method_get_contact_local_position:

- :ref:`Vector3<class_Vector3>` **get_contact_local_position** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回接触点的局部坐标系下的位置。

----

.. _class_PhysicsDirectBodyState_method_get_contact_local_shape:

- :ref:`int<class_int>` **get_contact_local_shape** **(** :ref:`int<class_int>` contact_idx **)** |const|

返回碰撞的局部坐标系下的形状索引。

----

.. _class_PhysicsDirectBodyState_method_get_space_state:

- :ref:`PhysicsDirectSpaceState<class_PhysicsDirectSpaceState>` **get_space_state** **(** **)**

返回空间的当前状态，这对查询很有用。

----

.. _class_PhysicsDirectBodyState_method_get_velocity_at_local_position:

- :ref:`Vector3<class_Vector3>` **get_velocity_at_local_position** **(** :ref:`Vector3<class_Vector3>` local_position **)** |const|

返回给定相对位置的物体速度，包括平移和旋转。

----

.. _class_PhysicsDirectBodyState_method_integrate_forces:

- void **integrate_forces** **(** **)**

调用内置的力集成代码。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
