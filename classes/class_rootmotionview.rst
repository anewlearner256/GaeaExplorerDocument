:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the RootMotionView.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_RootMotionView:

RootMotionView
==============

**Inherits:** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

在\ :ref:`AnimationTree<class_AnimationTree>`\ 中设置根运动的仅编辑器可用的辅助工具。

描述
----

*Root motion* 指的是一种动画技术，其中使用网格的骨架为角色提供动力。在处理 3D 动画时，一种流行的技术是动画师使用根骨架骨骼来为骨架的其余部分提供运动。这允许以步骤实际匹配下方地板的方式为角色设置动画。它还允许在过场动画期间与对象进行精确交互。另见\ :ref:`AnimationTree<class_AnimationTree>`\ 。

\ **注意：** ``RootMotionView`` 仅在编辑器中可见。在运行的项目中会自动隐藏，在运行的项目中也会转换为普通的\ :ref:`Node<class_Node>`\ 。这意味着附加到 ``RootMotionView`` 节点的脚本 * 必须 * 具有 ``继承节点`` 而不是 ``继承 RootMotionView``\ 。此外，它不能是 ``@tool`` 脚本。

教程
----

- `Using AnimationTree - Root motion <../tutorials/animation/animation_tree.html#root-motion>`__

属性
----

+---------------------------------+---------------------------------------------------------------------+
| :ref:`NodePath<class_NodePath>` | :ref:`animation_path<class_RootMotionView_property_animation_path>` |
+---------------------------------+---------------------------------------------------------------------+
| :ref:`float<class_float>`       | :ref:`cell_size<class_RootMotionView_property_cell_size>`           |
+---------------------------------+---------------------------------------------------------------------+
| :ref:`Color<class_Color>`       | :ref:`color<class_RootMotionView_property_color>`                   |
+---------------------------------+---------------------------------------------------------------------+
| :ref:`float<class_float>`       | :ref:`radius<class_RootMotionView_property_radius>`                 |
+---------------------------------+---------------------------------------------------------------------+
| :ref:`bool<class_bool>`         | :ref:`zero_y<class_RootMotionView_property_zero_y>`                 |
+---------------------------------+---------------------------------------------------------------------+

属性说明
--------

.. _class_RootMotionView_property_animation_path:

- :ref:`NodePath<class_NodePath>` **animation_path**

+----------+---------------------------+
| *Setter* | set_animation_path(value) |
+----------+---------------------------+
| *Getter* | get_animation_path()      |
+----------+---------------------------+

用作根运动基础的 :ref:`AnimationTree<class_AnimationTree>` 节点的路径。

----

.. _class_RootMotionView_property_cell_size:

- :ref:`float<class_float>` **cell_size**

+----------+----------------------+
| *Setter* | set_cell_size(value) |
+----------+----------------------+
| *Getter* | get_cell_size()      |
+----------+----------------------+

以 3D 单位表示的网格单元大小。

----

.. _class_RootMotionView_property_color:

- :ref:`Color<class_Color>` **color**

+----------+------------------+
| *Setter* | set_color(value) |
+----------+------------------+
| *Getter* | get_color()      |
+----------+------------------+

网格的颜色。

----

.. _class_RootMotionView_property_radius:

- :ref:`float<class_float>` **radius**

+----------+-------------------+
| *Setter* | set_radius(value) |
+----------+-------------------+
| *Getter* | get_radius()      |
+----------+-------------------+

以 3D 单位表示的网格半径。随着与原点的距离增加，网格的不透明度将逐渐消失，直到达到此半径 :ref:`radius<class_RootMotionView_property_radius>`\ 。

----

.. _class_RootMotionView_property_zero_y:

- :ref:`bool<class_bool>` **zero_y**

+----------+-------------------+
| *Setter* | set_zero_y(value) |
+----------+-------------------+
| *Getter* | get_zero_y()      |
+----------+-------------------+

如果 ``true``\ ，则网格的点都将位于相同的 Y 坐标上（\ *local* Y = 0）。如果 ``false``\ ，则保留点的原始 Y 坐标。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
