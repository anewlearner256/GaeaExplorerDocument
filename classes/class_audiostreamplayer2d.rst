:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the AudioStreamPlayer2D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioStreamPlayer2D:

AudioStreamPlayer2D
===================

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

在 2D 空间中播放位置声音。

描述
----

播放音频，随着与屏幕中心的距离而减弱。

参阅\ :ref:`AudioStreamPlayer<class_AudioStreamPlayer>`\ 来播放非位置性的声音。

\ **注意：** 隐藏一个\ ``AudioStreamPlayer2D``\ 节点并不能禁用其音频输出。要暂时禁用\ ``AudioStreamPlayer2D``\ 的音频输出，请将\ :ref:`volume_db<class_AudioStreamPlayer2D_property_volume_db>`\ 设置为一个非常低的值，如\ ``-100``\ （人的听觉听不到）。

教程
----

- :doc:`../tutorials/audio/audio_streams`

属性
----

+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`int<class_int>`                 | :ref:`area_mask<class_AudioStreamPlayer2D_property_area_mask>`         | ``1``        |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`attenuation<class_AudioStreamPlayer2D_property_attenuation>`     | ``1.0``      |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`               | :ref:`autoplay<class_AudioStreamPlayer2D_property_autoplay>`           | ``false``    |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`String<class_String>`           | :ref:`bus<class_AudioStreamPlayer2D_property_bus>`                     | ``"Master"`` |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`max_distance<class_AudioStreamPlayer2D_property_max_distance>`   | ``2000.0``   |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`pitch_scale<class_AudioStreamPlayer2D_property_pitch_scale>`     | ``1.0``      |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`               | :ref:`playing<class_AudioStreamPlayer2D_property_playing>`             | ``false``    |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`AudioStream<class_AudioStream>` | :ref:`stream<class_AudioStreamPlayer2D_property_stream>`               |              |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`bool<class_bool>`               | :ref:`stream_paused<class_AudioStreamPlayer2D_property_stream_paused>` | ``false``    |
+---------------------------------------+------------------------------------------------------------------------+--------------+
| :ref:`float<class_float>`             | :ref:`volume_db<class_AudioStreamPlayer2D_property_volume_db>`         | ``0.0``      |
+---------------------------------------+------------------------------------------------------------------------+--------------+

方法
----

+-------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                             | :ref:`get_playback_position<class_AudioStreamPlayer2D_method_get_playback_position>` **(** **)**           |
+-------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| :ref:`AudioStreamPlayback<class_AudioStreamPlayback>` | :ref:`get_stream_playback<class_AudioStreamPlayer2D_method_get_stream_playback>` **(** **)**               |
+-------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| void                                                  | :ref:`play<class_AudioStreamPlayer2D_method_play>` **(** :ref:`float<class_float>` from_position=0.0 **)** |
+-------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| void                                                  | :ref:`seek<class_AudioStreamPlayer2D_method_seek>` **(** :ref:`float<class_float>` to_position **)**       |
+-------------------------------------------------------+------------------------------------------------------------------------------------------------------------+
| void                                                  | :ref:`stop<class_AudioStreamPlayer2D_method_stop>` **(** **)**                                             |
+-------------------------------------------------------+------------------------------------------------------------------------------------------------------------+

信号
----

.. _class_AudioStreamPlayer2D_signal_finished:

- **finished** **(** **)**

当音频停止播放时发出。

属性说明
--------

.. _class_AudioStreamPlayer2D_property_area_mask:

- :ref:`int<class_int>` **area_mask**

+-----------+----------------------+
| *Default* | ``1``                |
+-----------+----------------------+
| *Setter*  | set_area_mask(value) |
+-----------+----------------------+
| *Getter*  | get_area_mask()      |
+-----------+----------------------+

这个声音的播放区域。

----

.. _class_AudioStreamPlayer2D_property_attenuation:

- :ref:`float<class_float>` **attenuation**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_attenuation(value) |
+-----------+------------------------+
| *Getter*  | get_attenuation()      |
+-----------+------------------------+

以此为指数，将声音在距离上进行衰减。

----

.. _class_AudioStreamPlayer2D_property_autoplay:

- :ref:`bool<class_bool>` **autoplay**

+-----------+-----------------------+
| *Default* | ``false``             |
+-----------+-----------------------+
| *Setter*  | set_autoplay(value)   |
+-----------+-----------------------+
| *Getter*  | is_autoplay_enabled() |
+-----------+-----------------------+

如果\ ``true``\ ，则在添加到场景树时播放音频。

----

.. _class_AudioStreamPlayer2D_property_bus:

- :ref:`String<class_String>` **bus**

+-----------+----------------+
| *Default* | ``"Master"``   |
+-----------+----------------+
| *Setter*  | set_bus(value) |
+-----------+----------------+
| *Getter*  | get_bus()      |
+-----------+----------------+

播放此音频的总线。

----

.. _class_AudioStreamPlayer2D_property_max_distance:

- :ref:`float<class_float>` **max_distance**

+-----------+-------------------------+
| *Default* | ``2000.0``              |
+-----------+-------------------------+
| *Setter*  | set_max_distance(value) |
+-----------+-------------------------+
| *Getter*  | get_max_distance()      |
+-----------+-------------------------+

音频仍可听到的最大距离。

----

.. _class_AudioStreamPlayer2D_property_pitch_scale:

- :ref:`float<class_float>` **pitch_scale**

+-----------+------------------------+
| *Default* | ``1.0``                |
+-----------+------------------------+
| *Setter*  | set_pitch_scale(value) |
+-----------+------------------------+
| *Getter*  | get_pitch_scale()      |
+-----------+------------------------+

音频的音高和节奏，作为音频样本的采样率的倍数。

----

.. _class_AudioStreamPlayer2D_property_playing:

- :ref:`bool<class_bool>` **playing**

+-----------+--------------+
| *Default* | ``false``    |
+-----------+--------------+
| *Getter*  | is_playing() |
+-----------+--------------+

如果\ ``true``\ ，则播放音频。

----

.. _class_AudioStreamPlayer2D_property_stream:

- :ref:`AudioStream<class_AudioStream>` **stream**

+----------+-------------------+
| *Setter* | set_stream(value) |
+----------+-------------------+
| *Getter* | get_stream()      |
+----------+-------------------+

要播放的\ :ref:`AudioStream<class_AudioStream>`\ 对象。

----

.. _class_AudioStreamPlayer2D_property_stream_paused:

- :ref:`bool<class_bool>` **stream_paused**

+-----------+--------------------------+
| *Default* | ``false``                |
+-----------+--------------------------+
| *Setter*  | set_stream_paused(value) |
+-----------+--------------------------+
| *Getter*  | get_stream_paused()      |
+-----------+--------------------------+

如果 ``true``\ ，则暂停播放。您可以通过将 ``stream_paused`` 设置为 ``false`` 来恢复播放。

----

.. _class_AudioStreamPlayer2D_property_volume_db:

- :ref:`float<class_float>` **volume_db**

+-----------+----------------------+
| *Default* | ``0.0``              |
+-----------+----------------------+
| *Setter*  | set_volume_db(value) |
+-----------+----------------------+
| *Getter*  | get_volume_db()      |
+-----------+----------------------+

基础音量，无衰减。

方法说明
--------

.. _class_AudioStreamPlayer2D_method_get_playback_position:

- :ref:`float<class_float>` **get_playback_position** **(** **)**

返回\ :ref:`AudioStream<class_AudioStream>`\ 中的位置。

----

.. _class_AudioStreamPlayer2D_method_get_stream_playback:

- :ref:`AudioStreamPlayback<class_AudioStreamPlayback>` **get_stream_playback** **(** **)**

返回与该\ ``AudioStreamPlayer2D``\ 相关联的\ :ref:`AudioStreamPlayback<class_AudioStreamPlayback>`\ 对象。

----

.. _class_AudioStreamPlayer2D_method_play:

- void **play** **(** :ref:`float<class_float>` from_position=0.0 **)**

从给定的位置\ ``from_position``\ 播放音频，以秒为单位。

----

.. _class_AudioStreamPlayer2D_method_seek:

- void **seek** **(** :ref:`float<class_float>` to_position **)**

设置音频的播放位置，以秒为单位。

----

.. _class_AudioStreamPlayer2D_method_stop:

- void **stop** **(** **)**

停止音频。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
