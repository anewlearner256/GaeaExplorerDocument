:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the OS.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_OS:

OS
==

**Inherits:** :ref:`Object<class_Object>`

操作系统功能。

描述
----

操作系统的功能。OS包装了与主机操作系统通信的最常见功能，如剪贴板、视频驱动程序、日期和时间、计时器、环境变量、二进制文件的执行、命令行等。

教程
----

- `OS Test Demo <https://godotengine.org/asset-library/asset/677>`__

属性
----

+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`String<class_String>`                         | :ref:`clipboard<class_OS_property_clipboard>`                                                         | ``""``              |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                               | :ref:`current_screen<class_OS_property_current_screen>`                                               | ``0``               |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`delta_smoothing<class_OS_property_delta_smoothing>`                                             | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                               | :ref:`exit_code<class_OS_property_exit_code>`                                                         | ``0``               |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`keep_screen_on<class_OS_property_keep_screen_on>`                                               | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`low_processor_usage_mode<class_OS_property_low_processor_usage_mode>`                           | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`int<class_int>`                               | :ref:`low_processor_usage_mode_sleep_usec<class_OS_property_low_processor_usage_mode_sleep_usec>`     | ``6900``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`max_window_size<class_OS_property_max_window_size>`                                             | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`min_window_size<class_OS_property_min_window_size>`                                             | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`ScreenOrientation<enum_OS_ScreenOrientation>` | :ref:`screen_orientation<class_OS_property_screen_orientation>`                                       | ``0``               |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`String<class_String>`                         | :ref:`tablet_driver<class_OS_property_tablet_driver>`                                                 | ``""``              |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`vsync_enabled<class_OS_property_vsync_enabled>`                                                 | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`vsync_via_compositor<class_OS_property_vsync_via_compositor>`                                   | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_borderless<class_OS_property_window_borderless>`                                         | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_fullscreen<class_OS_property_window_fullscreen>`                                         | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_maximized<class_OS_property_window_maximized>`                                           | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_minimized<class_OS_property_window_minimized>`                                           | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_per_pixel_transparency_enabled<class_OS_property_window_per_pixel_transparency_enabled>` | ``false``           |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`window_position<class_OS_property_window_position>`                                             | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`bool<class_bool>`                             | :ref:`window_resizable<class_OS_property_window_resizable>`                                           | ``true``            |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`window_size<class_OS_property_window_size>`                                                     | ``Vector2( 0, 0 )`` |
+-----------------------------------------------------+-------------------------------------------------------------------------------------------------------+---------------------+

方法
----

+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`alert<class_OS_method_alert>` **(** :ref:`String<class_String>` text, :ref:`String<class_String>` title="Alert!" **)**                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`can_draw<class_OS_method_can_draw>` **(** **)** |const|                                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`can_use_threads<class_OS_method_can_use_threads>` **(** **)** |const|                                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`center_window<class_OS_method_center_window>` **(** **)**                                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`close_midi_inputs<class_OS_method_close_midi_inputs>` **(** **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`crash<class_OS_method_crash>` **(** :ref:`String<class_String>` message **)**                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`delay_msec<class_OS_method_delay_msec>` **(** :ref:`int<class_int>` msec **)** |const|                                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`delay_usec<class_OS_method_delay_usec>` **(** :ref:`int<class_int>` usec **)** |const|                                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`dump_memory_to_file<class_OS_method_dump_memory_to_file>` **(** :ref:`String<class_String>` file **)**                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`dump_resources_to_file<class_OS_method_dump_resources_to_file>` **(** :ref:`String<class_String>` file **)**                                                                                                                                                     |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`execute<class_OS_method_execute>` **(** :ref:`String<class_String>` path, :ref:`PoolStringArray<class_PoolStringArray>` arguments, :ref:`bool<class_bool>` blocking=true, :ref:`Array<class_Array>` output=[  ], :ref:`bool<class_bool>` read_stderr=false **)** |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`find_scancode_from_string<class_OS_method_find_scancode_from_string>` **(** :ref:`String<class_String>` string **)** |const|                                                                                                                                     |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_audio_driver_count<class_OS_method_get_audio_driver_count>` **(** **)** |const|                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_audio_driver_name<class_OS_method_get_audio_driver_name>` **(** :ref:`int<class_int>` driver **)** |const|                                                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_cache_dir<class_OS_method_get_cache_dir>` **(** **)** |const|                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_cmdline_args<class_OS_method_get_cmdline_args>` **(** **)**                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_config_dir<class_OS_method_get_config_dir>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_connected_midi_inputs<class_OS_method_get_connected_midi_inputs>` **(** **)**                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`VideoDriver<enum_OS_VideoDriver>`       | :ref:`get_current_video_driver<class_OS_method_get_current_video_driver>` **(** **)** |const|                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_data_dir<class_OS_method_get_data_dir>` **(** **)** |const|                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_date<class_OS_method_get_date>` **(** :ref:`bool<class_bool>` utc=false **)** |const|                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_datetime<class_OS_method_get_datetime>` **(** :ref:`bool<class_bool>` utc=false **)** |const|                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_datetime_from_unix_time<class_OS_method_get_datetime_from_unix_time>` **(** :ref:`int<class_int>` unix_time_val **)** |const|                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_dynamic_memory_usage<class_OS_method_get_dynamic_memory_usage>` **(** **)** |const|                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_environment<class_OS_method_get_environment>` **(** :ref:`String<class_String>` variable **)** |const|                                                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_executable_path<class_OS_method_get_executable_path>` **(** **)** |const|                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolStringArray<class_PoolStringArray>` | :ref:`get_granted_permissions<class_OS_method_get_granted_permissions>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_ime_selection<class_OS_method_get_ime_selection>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_ime_text<class_OS_method_get_ime_text>` **(** **)** |const|                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_latin_keyboard_variant<class_OS_method_get_latin_keyboard_variant>` **(** **)** |const|                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_locale<class_OS_method_get_locale>` **(** **)** |const|                                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_locale_language<class_OS_method_get_locale_language>` **(** **)** |const|                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_main_thread_id<class_OS_method_get_main_thread_id>` **(** **)** |const|                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_model_name<class_OS_method_get_model_name>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_name<class_OS_method_get_name>` **(** **)** |const|                                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_native_handle<class_OS_method_get_native_handle>` **(** :ref:`HandleType<enum_OS_HandleType>` handle_type **)**                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_power_percent_left<class_OS_method_get_power_percent_left>` **(** **)**                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_power_seconds_left<class_OS_method_get_power_seconds_left>` **(** **)**                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PowerState<enum_OS_PowerState>`         | :ref:`get_power_state<class_OS_method_get_power_state>` **(** **)**                                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_process_id<class_OS_method_get_process_id>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_processor_count<class_OS_method_get_processor_count>` **(** **)** |const|                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_real_window_size<class_OS_method_get_real_window_size>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_scancode_string<class_OS_method_get_scancode_string>` **(** :ref:`int<class_int>` code **)** |const|                                                                                                                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_screen_count<class_OS_method_get_screen_count>` **(** **)** |const|                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_screen_dpi<class_OS_method_get_screen_dpi>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_screen_max_scale<class_OS_method_get_screen_max_scale>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_screen_position<class_OS_method_get_screen_position>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                     | :ref:`get_screen_scale<class_OS_method_get_screen_scale>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                 | :ref:`get_screen_size<class_OS_method_get_screen_size>` **(** :ref:`int<class_int>` screen=-1 **)** |const|                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_splash_tick_msec<class_OS_method_get_splash_tick_msec>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_static_memory_peak_usage<class_OS_method_get_static_memory_peak_usage>` **(** **)** |const|                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_static_memory_usage<class_OS_method_get_static_memory_usage>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_system_dir<class_OS_method_get_system_dir>` **(** :ref:`SystemDir<enum_OS_SystemDir>` dir, :ref:`bool<class_bool>` shared_storage=true **)** |const|                                                                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_system_time_msecs<class_OS_method_get_system_time_msecs>` **(** **)** |const|                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_system_time_secs<class_OS_method_get_system_time_secs>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_tablet_driver_count<class_OS_method_get_tablet_driver_count>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_tablet_driver_name<class_OS_method_get_tablet_driver_name>` **(** :ref:`int<class_int>` idx **)** |const|                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_thread_caller_id<class_OS_method_get_thread_caller_id>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_ticks_msec<class_OS_method_get_ticks_msec>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_ticks_usec<class_OS_method_get_ticks_usec>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_time<class_OS_method_get_time>` **(** :ref:`bool<class_bool>` utc=false **)** |const|                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Dictionary<class_Dictionary>`           | :ref:`get_time_zone_info<class_OS_method_get_time_zone_info>` **(** **)** |const|                                                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_unique_id<class_OS_method_get_unique_id>` **(** **)** |const|                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_unix_time<class_OS_method_get_unix_time>` **(** **)** |const|                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_unix_time_from_datetime<class_OS_method_get_unix_time_from_datetime>` **(** :ref:`Dictionary<class_Dictionary>` datetime **)** |const|                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_video_driver_count<class_OS_method_get_video_driver_count>` **(** **)** |const|                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`get_video_driver_name<class_OS_method_get_video_driver_name>` **(** :ref:`VideoDriver<enum_OS_VideoDriver>` driver **)** |const|                                                                                                                                 |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`get_virtual_keyboard_height<class_OS_method_get_virtual_keyboard_height>` **(** **)**                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`                     | :ref:`get_window_safe_area<class_OS_method_get_window_safe_area>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_add_item<class_OS_method_global_menu_add_item>` **(** :ref:`String<class_String>` menu, :ref:`String<class_String>` label, :ref:`Variant<class_Variant>` id, :ref:`Variant<class_Variant>` meta **)**                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_add_separator<class_OS_method_global_menu_add_separator>` **(** :ref:`String<class_String>` menu **)**                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_clear<class_OS_method_global_menu_clear>` **(** :ref:`String<class_String>` menu **)**                                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`global_menu_remove_item<class_OS_method_global_menu_remove_item>` **(** :ref:`String<class_String>` menu, :ref:`int<class_int>` idx **)**                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_environment<class_OS_method_has_environment>` **(** :ref:`String<class_String>` variable **)** |const|                                                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_feature<class_OS_method_has_feature>` **(** :ref:`String<class_String>` tag_name **)** |const|                                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_touchscreen_ui_hint<class_OS_method_has_touchscreen_ui_hint>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`has_virtual_keyboard<class_OS_method_has_virtual_keyboard>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`hide_virtual_keyboard<class_OS_method_hide_virtual_keyboard>` **(** **)**                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_debug_build<class_OS_method_is_debug_build>` **(** **)** |const|                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_ok_left_and_cancel_right<class_OS_method_is_ok_left_and_cancel_right>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_scancode_unicode<class_OS_method_is_scancode_unicode>` **(** :ref:`int<class_int>` code **)** |const|                                                                                                                                                         |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_stdout_verbose<class_OS_method_is_stdout_verbose>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_userfs_persistent<class_OS_method_is_userfs_persistent>` **(** **)** |const|                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_window_always_on_top<class_OS_method_is_window_always_on_top>` **(** **)** |const|                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`is_window_focused<class_OS_method_is_window_focused>` **(** **)** |const|                                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`keyboard_get_current_layout<class_OS_method_keyboard_get_current_layout>` **(** **)** |const|                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                         | :ref:`keyboard_get_layout_count<class_OS_method_keyboard_get_layout_count>` **(** **)** |const|                                                                                                                                                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`keyboard_get_layout_language<class_OS_method_keyboard_get_layout_language>` **(** :ref:`int<class_int>` index **)** |const|                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                   | :ref:`keyboard_get_layout_name<class_OS_method_keyboard_get_layout_name>` **(** :ref:`int<class_int>` index **)** |const|                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`keyboard_set_current_layout<class_OS_method_keyboard_set_current_layout>` **(** :ref:`int<class_int>` index **)**                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`kill<class_OS_method_kill>` **(** :ref:`int<class_int>` pid **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`move_window_to_foreground<class_OS_method_move_window_to_foreground>` **(** **)**                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`native_video_is_playing<class_OS_method_native_video_is_playing>` **(** **)**                                                                                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`native_video_pause<class_OS_method_native_video_pause>` **(** **)**                                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`native_video_play<class_OS_method_native_video_play>` **(** :ref:`String<class_String>` path, :ref:`float<class_float>` volume, :ref:`String<class_String>` audio_track, :ref:`String<class_String>` subtitle_track **)**                                        |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`native_video_stop<class_OS_method_native_video_stop>` **(** **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`native_video_unpause<class_OS_method_native_video_unpause>` **(** **)**                                                                                                                                                                                          |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`open_midi_inputs<class_OS_method_open_midi_inputs>` **(** **)**                                                                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_all_resources<class_OS_method_print_all_resources>` **(** :ref:`String<class_String>` tofile="" **)**                                                                                                                                                      |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_all_textures_by_size<class_OS_method_print_all_textures_by_size>` **(** **)**                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_resources_by_type<class_OS_method_print_resources_by_type>` **(** :ref:`PoolStringArray<class_PoolStringArray>` types **)**                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`print_resources_in_use<class_OS_method_print_resources_in_use>` **(** :ref:`bool<class_bool>` short=false **)**                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`request_attention<class_OS_method_request_attention>` **(** **)**                                                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`request_permission<class_OS_method_request_permission>` **(** :ref:`String<class_String>` name **)**                                                                                                                                                             |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`request_permissions<class_OS_method_request_permissions>` **(** **)**                                                                                                                                                                                            |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                       | :ref:`set_environment<class_OS_method_set_environment>` **(** :ref:`String<class_String>` variable, :ref:`String<class_String>` value **)** |const|                                                                                                                    |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_icon<class_OS_method_set_icon>` **(** :ref:`Image<class_Image>` icon **)**                                                                                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_ime_active<class_OS_method_set_ime_active>` **(** :ref:`bool<class_bool>` active **)**                                                                                                                                                                       |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_ime_position<class_OS_method_set_ime_position>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                                                                                                           |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_native_icon<class_OS_method_set_native_icon>` **(** :ref:`String<class_String>` filename **)**                                                                                                                                                               |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`set_thread_name<class_OS_method_set_thread_name>` **(** :ref:`String<class_String>` name **)**                                                                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_use_file_access_save_and_swap<class_OS_method_set_use_file_access_save_and_swap>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_window_always_on_top<class_OS_method_set_window_always_on_top>` **(** :ref:`bool<class_bool>` enabled **)**                                                                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_window_mouse_passthrough<class_OS_method_set_window_mouse_passthrough>` **(** :ref:`PoolVector2Array<class_PoolVector2Array>` region **)**                                                                                                                   |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`set_window_title<class_OS_method_set_window_title>` **(** :ref:`String<class_String>` title **)**                                                                                                                                                                |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`         | :ref:`shell_open<class_OS_method_shell_open>` **(** :ref:`String<class_String>` uri **)**                                                                                                                                                                              |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                          | :ref:`show_virtual_keyboard<class_OS_method_show_virtual_keyboard>` **(** :ref:`String<class_String>` existing_text="", :ref:`bool<class_bool>` multiline=false **)**                                                                                                  |
+-----------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_OS_VideoDriver:

.. _class_OS_constant_VIDEO_DRIVER_GLES2:

.. _class_OS_constant_VIDEO_DRIVER_GLES3:

enum **VideoDriver**:

- **VIDEO_DRIVER_GLES2** = **1** --- GLES2的渲染后端。它在移动设备上使用OpenGL ES 2.0，在桌面平台上使用OpenGL 2.1，在网络上使用WebGL 1.0。

- **VIDEO_DRIVER_GLES3** = **0** --- GLES3 渲染后端。它在移动设备上使用 OpenGL ES 3.0，在桌面平台上使用 OpenGL 3.3，在网络上使用 WebGL 2.0。

----

.. _enum_OS_Weekday:

.. _class_OS_constant_DAY_SUNDAY:

.. _class_OS_constant_DAY_MONDAY:

.. _class_OS_constant_DAY_TUESDAY:

.. _class_OS_constant_DAY_WEDNESDAY:

.. _class_OS_constant_DAY_THURSDAY:

.. _class_OS_constant_DAY_FRIDAY:

.. _class_OS_constant_DAY_SATURDAY:

enum **Weekday**:

- **DAY_SUNDAY** = **0** --- 星期日。

- **DAY_MONDAY** = **1** --- 星期一。

- **DAY_TUESDAY** = **2** --- 星期二。

- **DAY_WEDNESDAY** = **3** --- 星期三。

- **DAY_THURSDAY** = **4** --- 星期四。

- **DAY_FRIDAY** = **5** --- 星期五。

- **DAY_SATURDAY** = **6** --- 星期六。

----

.. _enum_OS_Month:

.. _class_OS_constant_MONTH_JANUARY:

.. _class_OS_constant_MONTH_FEBRUARY:

.. _class_OS_constant_MONTH_MARCH:

.. _class_OS_constant_MONTH_APRIL:

.. _class_OS_constant_MONTH_MAY:

.. _class_OS_constant_MONTH_JUNE:

.. _class_OS_constant_MONTH_JULY:

.. _class_OS_constant_MONTH_AUGUST:

.. _class_OS_constant_MONTH_SEPTEMBER:

.. _class_OS_constant_MONTH_OCTOBER:

.. _class_OS_constant_MONTH_NOVEMBER:

.. _class_OS_constant_MONTH_DECEMBER:

enum **Month**:

- **MONTH_JANUARY** = **1** --- 一月。

- **MONTH_FEBRUARY** = **2** --- 二月。

- **MONTH_MARCH** = **3** --- 三月。

- **MONTH_APRIL** = **4** --- 四月。

- **MONTH_MAY** = **5** --- 五月。

- **MONTH_JUNE** = **6** --- 六月。

- **MONTH_JULY** = **7** --- 七月。

- **MONTH_AUGUST** = **8** --- 八月。

- **MONTH_SEPTEMBER** = **9** --- 九月。

- **MONTH_OCTOBER** = **10** --- 十月。

- **MONTH_NOVEMBER** = **11** --- 十一月。

- **MONTH_DECEMBER** = **12** --- 十二月。

----

.. _enum_OS_HandleType:

.. _class_OS_constant_APPLICATION_HANDLE:

.. _class_OS_constant_DISPLAY_HANDLE:

.. _class_OS_constant_WINDOW_HANDLE:

.. _class_OS_constant_WINDOW_VIEW:

.. _class_OS_constant_OPENGL_CONTEXT:

enum **HandleType**:

- **APPLICATION_HANDLE** = **0** --- 应用程序句柄：

- Windows： ``HINSTANCE`` 的应用程序

- MacOS： ``NSApplication*`` 的应用程序（尚未实现）

- Android： ``JNIEnv*`` 的应用程序 （尚未实现）

- **DISPLAY_HANDLE** = **1** --- 显示句柄：

- Linux：\ ``X11::Display*`` 用于显示

- **WINDOW_HANDLE** = **2** --- 窗户句柄：

- Windows：主窗口的 ``HWND``\ 。

- Linux：主窗口的 ``X11::Window*``\ 。

- MacOS：主窗口的 ``NSWindow*``\ （尚未实现）

- Android：主 Android activity 的 ``jObject``\ （尚未实现）

- **WINDOW_VIEW** = **3** --- 窗口视图：

- Windows：主窗口绘图环境的 ``HDC``\ 

- MacOS：主窗口视图的 ``NSView*``\ （尚未实现）

- **OPENGL_CONTEXT** = **4** --- OpenGL上下文：

- Windows：\ ``HGLRC``\ 

- Linux：\ ``X11::GLXContext``\ 

- MacOS：\ ``NSOpenGLContext*`` (尚未实现)

----

.. _enum_OS_ScreenOrientation:

.. _class_OS_constant_SCREEN_ORIENTATION_LANDSCAPE:

.. _class_OS_constant_SCREEN_ORIENTATION_PORTRAIT:

.. _class_OS_constant_SCREEN_ORIENTATION_REVERSE_LANDSCAPE:

.. _class_OS_constant_SCREEN_ORIENTATION_REVERSE_PORTRAIT:

.. _class_OS_constant_SCREEN_ORIENTATION_SENSOR_LANDSCAPE:

.. _class_OS_constant_SCREEN_ORIENTATION_SENSOR_PORTRAIT:

.. _class_OS_constant_SCREEN_ORIENTATION_SENSOR:

enum **ScreenOrientation**:

- **SCREEN_ORIENTATION_LANDSCAPE** = **0** --- 横向屏幕方向。

- **SCREEN_ORIENTATION_PORTRAIT** = **1** --- 纵向屏幕方向。

- **SCREEN_ORIENTATION_REVERSE_LANDSCAPE** = **2** --- 反转横向屏幕方向。

- **SCREEN_ORIENTATION_REVERSE_PORTRAIT** = **3** --- 反转纵向屏幕方向。

- **SCREEN_ORIENTATION_SENSOR_LANDSCAPE** = **4** --- 根据硬件传感器使用横向或反向横向。

- **SCREEN_ORIENTATION_SENSOR_PORTRAIT** = **5** --- 根据硬件传感器使用纵向或反向纵向。

- **SCREEN_ORIENTATION_SENSOR** = **6** --- 根据硬件传感器使用最合适的方向。

----

.. _enum_OS_SystemDir:

.. _class_OS_constant_SYSTEM_DIR_DESKTOP:

.. _class_OS_constant_SYSTEM_DIR_DCIM:

.. _class_OS_constant_SYSTEM_DIR_DOCUMENTS:

.. _class_OS_constant_SYSTEM_DIR_DOWNLOADS:

.. _class_OS_constant_SYSTEM_DIR_MOVIES:

.. _class_OS_constant_SYSTEM_DIR_MUSIC:

.. _class_OS_constant_SYSTEM_DIR_PICTURES:

.. _class_OS_constant_SYSTEM_DIR_RINGTONES:

enum **SystemDir**:

- **SYSTEM_DIR_DESKTOP** = **0** --- 桌面目录路径。

- **SYSTEM_DIR_DCIM** = **1** --- DCIM（数码相机图像）目录路径。

- **SYSTEM_DIR_DOCUMENTS** = **2** --- 文档目录路径。

- **SYSTEM_DIR_DOWNLOADS** = **3** --- 下载目录路径。

- **SYSTEM_DIR_MOVIES** = **4** --- 影片目录路径。

- **SYSTEM_DIR_MUSIC** = **5** --- 音乐目录路径。

- **SYSTEM_DIR_PICTURES** = **6** --- 图片目录路径。

- **SYSTEM_DIR_RINGTONES** = **7** --- 铃声目录路径。

----

.. _enum_OS_PowerState:

.. _class_OS_constant_POWERSTATE_UNKNOWN:

.. _class_OS_constant_POWERSTATE_ON_BATTERY:

.. _class_OS_constant_POWERSTATE_NO_BATTERY:

.. _class_OS_constant_POWERSTATE_CHARGING:

.. _class_OS_constant_POWERSTATE_CHARGED:

enum **PowerState**:

- **POWERSTATE_UNKNOWN** = **0** --- 未知电源状态。

- **POWERSTATE_ON_BATTERY** = **1** --- 拔掉插头，用电池运行。

- **POWERSTATE_NO_BATTERY** = **2** --- 插上电源，没有电池可用。

- **POWERSTATE_CHARGING** = **3** --- 插上电源，电池正在充电。

- **POWERSTATE_CHARGED** = **4** --- 插上电源，电池充满电。

属性说明
--------

.. _class_OS_property_clipboard:

- :ref:`String<class_String>` **clipboard**

+-----------+----------------------+
| *Default* | ``""``               |
+-----------+----------------------+
| *Setter*  | set_clipboard(value) |
+-----------+----------------------+
| *Getter*  | get_clipboard()      |
+-----------+----------------------+

主机操作系统的剪贴板在某些平台上可能不可用。

----

.. _class_OS_property_current_screen:

- :ref:`int<class_int>` **current_screen**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_current_screen(value) |
+-----------+---------------------------+
| *Getter*  | get_current_screen()      |
+-----------+---------------------------+

当前屏幕索引（从 0 开始）。

----

.. _class_OS_property_delta_smoothing:

- :ref:`bool<class_bool>` **delta_smoothing**

+-----------+------------------------------+
| *Default* | ``true``                     |
+-----------+------------------------------+
| *Setter*  | set_delta_smoothing(value)   |
+-----------+------------------------------+
| *Getter*  | is_delta_smoothing_enabled() |
+-----------+------------------------------+

如果 ``true``\ ，引擎会过滤每帧之间测量的时间增量，并尝试补偿随机变化。这只会在垂直同步处于活动状态的系统上运行。

----

.. _class_OS_property_exit_code:

- :ref:`int<class_int>` **exit_code**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_exit_code(value) |
+-----------+----------------------+
| *Getter*  | get_exit_code()      |
+-----------+----------------------+

主循环退出时传递给操作系统的退出代码。按照惯例，一个\ ``0``\ 的退出代码表示成功，而一个非零的退出代码表示错误。出于可移植性的考虑，退出代码应该设置在0到125之间（包括125）。

\ **注意：** 如果使用\ :ref:`SceneTree.quit<class_SceneTree_method_quit>`\ ，并传递\ ``exit_code``\ 参数，这个值将被忽略。

----

.. _class_OS_property_keep_screen_on:

- :ref:`bool<class_bool>` **keep_screen_on**

+-----------+---------------------------+
| *Default* | ``true``                  |
+-----------+---------------------------+
| *Setter*  | set_keep_screen_on(value) |
+-----------+---------------------------+
| *Getter*  | is_keep_screen_on()       |
+-----------+---------------------------+

如果 ``true``\ ，引擎会尝试在游戏运行时保持屏幕开启。在手机上有用。

----

.. _class_OS_property_low_processor_usage_mode:

- :ref:`bool<class_bool>` **low_processor_usage_mode**

+-----------+-------------------------------------+
| *Default* | ``false``                           |
+-----------+-------------------------------------+
| *Setter*  | set_low_processor_usage_mode(value) |
+-----------+-------------------------------------+
| *Getter*  | is_in_low_processor_usage_mode()    |
+-----------+-------------------------------------+

如果\ ``true``\ ，引擎会通过只在需要时刷新屏幕来优化处理器的使用。可以改善移动设备上的电池消耗。

----

.. _class_OS_property_low_processor_usage_mode_sleep_usec:

- :ref:`int<class_int>` **low_processor_usage_mode_sleep_usec**

+-----------+------------------------------------------------+
| *Default* | ``6900``                                       |
+-----------+------------------------------------------------+
| *Setter*  | set_low_processor_usage_mode_sleep_usec(value) |
+-----------+------------------------------------------------+
| *Getter*  | get_low_processor_usage_mode_sleep_usec()      |
+-----------+------------------------------------------------+

启用低处理器使用模式时，帧之间的休眠量（以微秒计）。较高的值将导致较低的CPU使用率。

----

.. _class_OS_property_max_window_size:

- :ref:`Vector2<class_Vector2>` **max_window_size**

+-----------+----------------------------+
| *Default* | ``Vector2( 0, 0 )``        |
+-----------+----------------------------+
| *Setter*  | set_max_window_size(value) |
+-----------+----------------------------+
| *Getter*  | get_max_window_size()      |
+-----------+----------------------------+

窗口的最大大小（不包括窗口管理器装饰）。不影响全屏模式。设置为 ``(0, 0)`` 可重置为系统默认值。

----

.. _class_OS_property_min_window_size:

- :ref:`Vector2<class_Vector2>` **min_window_size**

+-----------+----------------------------+
| *Default* | ``Vector2( 0, 0 )``        |
+-----------+----------------------------+
| *Setter*  | set_min_window_size(value) |
+-----------+----------------------------+
| *Getter*  | get_min_window_size()      |
+-----------+----------------------------+

窗口的最小尺寸（以像素为单位）（不计算窗口管理器装饰）。不影响全屏模式。设置为 ``(0, 0)`` 可重置为系统默认值。

\ **注：** 默认情况下，项目窗口的最小尺寸为 ``Vector2(64, 64)``\ 。这可以防止在将窗口大小调整为接近零时可能出现的问题。

----

.. _class_OS_property_screen_orientation:

- :ref:`ScreenOrientation<enum_OS_ScreenOrientation>` **screen_orientation**

+-----------+-------------------------------+
| *Default* | ``0``                         |
+-----------+-------------------------------+
| *Setter*  | set_screen_orientation(value) |
+-----------+-------------------------------+
| *Getter*  | get_screen_orientation()      |
+-----------+-------------------------------+

当前屏幕方向。

----

.. _class_OS_property_tablet_driver:

- :ref:`String<class_String>` **tablet_driver**

+-----------+----------------------------------+
| *Default* | ``""``                           |
+-----------+----------------------------------+
| *Setter*  | set_current_tablet_driver(value) |
+-----------+----------------------------------+
| *Getter*  | get_current_tablet_driver()      |
+-----------+----------------------------------+

当前正在使用的书写板（译注：或数位板、触摸板，尚未定论）驱动程序。

----

.. _class_OS_property_vsync_enabled:

- :ref:`bool<class_bool>` **vsync_enabled**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_use_vsync(value) |
+-----------+----------------------+
| *Getter*  | is_vsync_enabled()   |
+-----------+----------------------+

如果 ``true``\ ，则启用垂直同步 (Vsync)。

----

.. _class_OS_property_vsync_via_compositor:

- :ref:`bool<class_bool>` **vsync_via_compositor**

+-----------+-----------------------------------+
| *Default* | ``false``                         |
+-----------+-----------------------------------+
| *Setter*  | set_vsync_via_compositor(value)   |
+-----------+-----------------------------------+
| *Getter*  | is_vsync_via_compositor_enabled() |
+-----------+-----------------------------------+

为 ``true`` 时，如果 ``vsync_enabled`` 为真，当操作系统的窗口合成器被启用并且游戏处于窗口模式时，将使用该合成器进行垂直同步。

\ **注意：**\ 此选项是实验性的，旨在缓解某些用户遇到的卡顿。但是，一些用户在使用时遇到了 Vsync 帧率减半，例如从 60 FPS 到 30 FPS。

\ **注意：**\ 此属性仅在 Windows 上实现。

----

.. _class_OS_property_window_borderless:

- :ref:`bool<class_bool>` **window_borderless**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_borderless_window(value) |
+-----------+------------------------------+
| *Getter*  | get_borderless_window()      |
+-----------+------------------------------+

如果 ``true``\ ，则移除窗框。

\ **注意：** 将 ``window_borderless`` 设置为 ``false`` 将禁用逐像素透明度。

----

.. _class_OS_property_window_fullscreen:

- :ref:`bool<class_bool>` **window_fullscreen**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_window_fullscreen(value) |
+-----------+------------------------------+
| *Getter*  | is_window_fullscreen()       |
+-----------+------------------------------+

如果\ ``true``\ ，窗口为全屏。

----

.. _class_OS_property_window_maximized:

- :ref:`bool<class_bool>` **window_maximized**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_window_maximized(value) |
+-----------+-----------------------------+
| *Getter*  | is_window_maximized()       |
+-----------+-----------------------------+

如果\ ``true``\ ，窗口被最大化。

----

.. _class_OS_property_window_minimized:

- :ref:`bool<class_bool>` **window_minimized**

+-----------+-----------------------------+
| *Default* | ``false``                   |
+-----------+-----------------------------+
| *Setter*  | set_window_minimized(value) |
+-----------+-----------------------------+
| *Getter*  | is_window_minimized()       |
+-----------+-----------------------------+

如果\ ``true``\ ，窗口被最小化。

----

.. _class_OS_property_window_per_pixel_transparency_enabled:

- :ref:`bool<class_bool>` **window_per_pixel_transparency_enabled**

+-----------+--------------------------------------------------+
| *Default* | ``false``                                        |
+-----------+--------------------------------------------------+
| *Setter*  | set_window_per_pixel_transparency_enabled(value) |
+-----------+--------------------------------------------------+
| *Getter*  | get_window_per_pixel_transparency_enabled()      |
+-----------+--------------------------------------------------+

如果\ ``true``\ ，则窗口背景是透明的，窗口框架被移除。

使用 ``get_tree().get_root().set_transparent_background(true)`` 禁用主视口背景渲染。

\ **注意：**\ 如果禁用\ :ref:`ProjectSettings.display/window/per_pixel_transparency/allowed<class_ProjectSettings_property_display/window/per_pixel_transparency/allowed>`\ 设置，则该属性无效。

\ **注意：** 此属性在 HTML5、Linux、macOS、Windows 和 Android 上实现。对于 Android，它不能在运行时更改。使用 :ref:`ProjectSettings.display/window/per_pixel_transparency/enabled<class_ProjectSettings_property_display/window/per_pixel_transparency/enabled>` 在启动时进行设置。

----

.. _class_OS_property_window_position:

- :ref:`Vector2<class_Vector2>` **window_position**

+-----------+----------------------------+
| *Default* | ``Vector2( 0, 0 )``        |
+-----------+----------------------------+
| *Setter*  | set_window_position(value) |
+-----------+----------------------------+
| *Getter*  | get_window_position()      |
+-----------+----------------------------+

窗口相对于屏幕的位置，原点为左上角，+Y 轴向下，+X 轴向右。

----

.. _class_OS_property_window_resizable:

- :ref:`bool<class_bool>` **window_resizable**

+-----------+-----------------------------+
| *Default* | ``true``                    |
+-----------+-----------------------------+
| *Setter*  | set_window_resizable(value) |
+-----------+-----------------------------+
| *Getter*  | is_window_resizable()       |
+-----------+-----------------------------+

如果 ``true``\ ，用户可以调整窗口大小。

----

.. _class_OS_property_window_size:

- :ref:`Vector2<class_Vector2>` **window_size**

+-----------+------------------------+
| *Default* | ``Vector2( 0, 0 )``    |
+-----------+------------------------+
| *Setter*  | set_window_size(value) |
+-----------+------------------------+
| *Getter*  | get_window_size()      |
+-----------+------------------------+

窗口的大小（不包括窗口管理器装饰）。

方法说明
--------

.. _class_OS_method_alert:

- void **alert** **(** :ref:`String<class_String>` text, :ref:`String<class_String>` title="Alert!" **)**

使用主机操作系统显示一个模式化的对话框。执行将被阻塞，直到该对话框被关闭。

----

.. _class_OS_method_can_draw:

- :ref:`bool<class_bool>` **can_draw** **(** **)** |const|

如果主机操作系统允许绘制，则返回 ``true``\ 。

----

.. _class_OS_method_can_use_threads:

- :ref:`bool<class_bool>` **can_use_threads** **(** **)** |const|

如果当前主机平台使用多个线程，则返回\ ``true``\ 。

----

.. _class_OS_method_center_window:

- void **center_window** **(** **)**

如果处于窗口模式，则使窗口在屏幕上居中。

----

.. _class_OS_method_close_midi_inputs:

- void **close_midi_inputs** **(** **)**

关闭系统MIDI驱动程序。

\ **注意:**\ 该方法只在Linux, macOS和Windows上实现。

----

.. _class_OS_method_crash:

- void **crash** **(** :ref:`String<class_String>` message **)**

Crashes the engine (or the editor if called within a ``tool`` script). This should *only* be used for testing the system's crash handler, not for any other purpose. For general error reporting, use (in order of preference) :ref:`@GDScript.assert<class_@GDScript_method_assert>`, :ref:`@GDScript.push_error<class_@GDScript_method_push_error>` or :ref:`alert<class_OS_method_alert>`. See also :ref:`kill<class_OS_method_kill>`.

----

.. _class_OS_method_delay_msec:

- void **delay_msec** **(** :ref:`int<class_int>` msec **)** |const|

将当前线程的执行延迟 ``msec`` 毫秒。 ``msec`` 必须大于或等于 ``0``\ 。否则， :ref:`delay_msec<class_OS_method_delay_msec>` 将不执行任何操作并打印错误消息。

\ **注：** :ref:`delay_msec<class_OS_method_delay_msec>`\ 是一种\ *阻塞*\ 延迟代码执行的方式。要以非阻塞方式延迟代码执行，请参阅 :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>`\ 。使用 :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>` 生成将延迟位于 ``yield`` 下方的代码的执行，而不会影响项目的其余部分（或编辑器，例如 :ref:`EditorPlugin<class_EditorPlugin>` 和 :ref:`EditorScript<class_EditorScript>`\ ）。

\ **注意：**\ 当在主线程上调用\ :ref:`delay_msec<class_OS_method_delay_msec>`\ 时，它会冻结项目并阻止它重新绘制和注册输入，直到延迟结束。当使用 :ref:`delay_msec<class_OS_method_delay_msec>` 作为 :ref:`EditorPlugin<class_EditorPlugin>` 或 :ref:`EditorScript<class_EditorScript>` 的一部分时，它会冻结编辑器但不会冻结当前正在运行的项目（因为项目是一个独立的子进程）。

----

.. _class_OS_method_delay_usec:

- void **delay_usec** **(** :ref:`int<class_int>` usec **)** |const|

将当前线程的执行延迟 ``usec`` 微秒。 ``usec`` 必须大于或等于 ``0``\ 。否则， :ref:`delay_usec<class_OS_method_delay_usec>` 将什么也不做，并会打印错误消息。

\ **注：** :ref:`delay_usec<class_OS_method_delay_usec>`\ 是一种\ *阻塞*\ 延迟代码执行的方式。要以非阻塞方式延迟代码执行，请参阅 :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>`\ 。使用 :ref:`SceneTree.create_timer<class_SceneTree_method_create_timer>` 生成将延迟位于 ``yield`` 下方的代码的执行，而不会影响项目的其余部分（或编辑器，例如 :ref:`EditorPlugin<class_EditorPlugin>` 和 :ref:`EditorScript<class_EditorScript>`\ ）。

\ **注意：**\ 当在主线程上调用\ :ref:`delay_usec<class_OS_method_delay_usec>`\ 时，它会冻结项目并阻止它重绘和注册输入，直到延迟结束。当使用 :ref:`delay_usec<class_OS_method_delay_usec>` 作为 :ref:`EditorPlugin<class_EditorPlugin>` 或 :ref:`EditorScript<class_EditorScript>` 的一部分时，它会冻结编辑器但不会冻结当前正在运行的项目（因为项目是一个独立的子进程）。

----

.. _class_OS_method_dump_memory_to_file:

- void **dump_memory_to_file** **(** :ref:`String<class_String>` file **)**

将内存分配ringlist转储到一个文件(仅在调试中工作)。

每行输入格式:“地址-大小-描述”。

----

.. _class_OS_method_dump_resources_to_file:

- void **dump_resources_to_file** **(** :ref:`String<class_String>` file **)**

将所有使用的资源转储到文件中(仅在调试中有效)。

每行输入格式:“资源类型:资源位置”。

在文件的末尾是所有已使用资源类型的统计数据。

----

.. _class_OS_method_execute:

- :ref:`int<class_int>` **execute** **(** :ref:`String<class_String>` path, :ref:`PoolStringArray<class_PoolStringArray>` arguments, :ref:`bool<class_bool>` blocking=true, :ref:`Array<class_Array>` output=[  ], :ref:`bool<class_bool>` read_stderr=false **)**

在给定的路径上执行文件，参数以字符串数组的形式传递。将进行平台路径解析。被解析的文件必须存在并且是可执行的。

参数按照给定的顺序使用，并用空格隔开，所以\ ``OS.execute("ping", ["-w", "3", "godotengine.org"], false)`` 将在系统的外壳中解析为\ ``ping -w 3 godotengine.org``\ 。

这个方法根据是否启用\ ``blocking``\ 模式，有稍微不同的行为。

如果\ ``blocking``\ 为\ ``true``\ ，GaaeExplorer线程将暂停执行，等待进程的终止。进程的shell输出将作为一个字符串写入\ ``output``\ 数组。当进程终止时，GaaeExplorer线程将恢复执行。

如果\ ``blocking``\ 为\ ``false``\ ，GaaeExplorer线程将在新进程运行时继续。在非阻塞模式下不可能检索shell的输出，所以\ ``output``\ 将是空的。

返回值也取决于阻塞模式。当阻塞时，该方法将返回一个进程的退出代码。当非阻塞时，该方法返回一个进程ID，你可以用它来监视该进程（并有可能用\ :ref:`kill<class_OS_method_kill>`\ 来终止它）。如果进程分叉（非阻塞）或打开（阻塞）失败，该方法将返回\ ``-1``\ 或其他退出代码。

阻塞模式和检索shell输出的例子：

::

    var output = []
    var exit_code = OS.execute("ls", ["-l", "/tmp"], true, output)

Example of non-blocking mode, running another instance of the project and storing its process ID:

::

    var pid = OS.execute(OS.get_executable_path(), [], false)

If you wish to access a shell built-in or perform a composite command, a platform-specific shell can be invoked. For example:

::

    OS.execute("CMD.exe", ["/C", "cd %TEMP% && dir"], true, output)

\ **注:**\ 此方法仅在Android, iOS, Linux, macOS和Windows上实现。

----

.. _class_OS_method_find_scancode_from_string:

- :ref:`int<class_int>` **find_scancode_from_string** **(** :ref:`String<class_String>` string **)** |const|

返回给定字符串的扫描码（例如“Escape”）。

----

.. _class_OS_method_get_audio_driver_count:

- :ref:`int<class_int>` **get_audio_driver_count** **(** **)** |const|

返回可用音频驱动程序的总数。

----

.. _class_OS_method_get_audio_driver_name:

- :ref:`String<class_String>` **get_audio_driver_name** **(** :ref:`int<class_int>` driver **)** |const|

返回给定索引的音频驱动程序名称。

----

.. _class_OS_method_get_cache_dir:

- :ref:`String<class_String>` **get_cache_dir** **(** **)** |const|

Returns the *global* cache data directory according to the operating system's standards. On desktop platforms, this path can be overridden by setting the ``XDG_CACHE_HOME`` environment variable before starting the project. See :doc:`File paths in GaaeExplorer projects <../tutorials/io/data_paths>` in the documentation for more information. See also :ref:`get_config_dir<class_OS_method_get_config_dir>` and :ref:`get_data_dir<class_OS_method_get_data_dir>`.

Not to be confused with :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>`, which returns the *project-specific* user data path.

----

.. _class_OS_method_get_cmdline_args:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_cmdline_args** **(** **)**

返回传递给引擎的命令行参数。

命令行参数可以以任何形式写入，包括\ ``--key value``\ 和\ ``--key=value``\ 两种形式，均可以正确解析，只要自定义的命令行参数不与引擎参数冲突。

你也可以使用\ :ref:`get_environment<class_OS_method_get_environment>`\ 方法包含环境变量。

你可以设置\ :ref:`ProjectSettings.editor/main_run_args<class_ProjectSettings_property_editor/main_run_args>`\ 来定义命令行参数，以便在运行项目时由编辑器传递。

下面是一个小的例子，说明如何使用参数的\ ``--key=value``\ 形式将命令行参数解析成一个字典。

::

    var arguments = {}
    for argument in OS.get_cmdline_args():
        if argument.find("=") > -1:
            var key_value = argument.split("=")
            arguments[key_value[0].lstrip("--")] = key_value[1]

----

.. _class_OS_method_get_config_dir:

- :ref:`String<class_String>` **get_config_dir** **(** **)** |const|

Returns the *global* user configuration directory according to the operating system's standards. On desktop platforms, this path can be overridden by setting the ``XDG_CONFIG_HOME`` environment variable before starting the project. See :doc:`File paths in GaaeExplorer projects <../tutorials/io/data_paths>` in the documentation for more information. See also :ref:`get_cache_dir<class_OS_method_get_cache_dir>` and :ref:`get_data_dir<class_OS_method_get_data_dir>`.

Not to be confused with :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>`, which returns the *project-specific* user data path.

----

.. _class_OS_method_get_connected_midi_inputs:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_connected_midi_inputs** **(** **)**

返回MIDI设备名称数组。

如果系统MIDI驱动程序之前没有使用\ :ref:`open_midi_inputs<class_OS_method_open_midi_inputs>`\ 初始化，返回的数组将是空的。

\ **注意:**\ 该方法仅在Linux, macOS和Windows上实现。

----

.. _class_OS_method_get_current_video_driver:

- :ref:`VideoDriver<enum_OS_VideoDriver>` **get_current_video_driver** **(** **)** |const|

返回当前使用的视频驱动程序，使用\ :ref:`VideoDriver<enum_OS_VideoDriver>`\ 中的一个值。

----

.. _class_OS_method_get_data_dir:

- :ref:`String<class_String>` **get_data_dir** **(** **)** |const|

Returns the *global* user data directory according to the operating system's standards. On desktop platforms, this path can be overridden by setting the ``XDG_DATA_HOME`` environment variable before starting the project. See :doc:`File paths in GaaeExplorer projects <../tutorials/io/data_paths>` in the documentation for more information. See also :ref:`get_cache_dir<class_OS_method_get_cache_dir>` and :ref:`get_config_dir<class_OS_method_get_config_dir>`.

Not to be confused with :ref:`get_user_data_dir<class_OS_method_get_user_data_dir>`, which returns the *project-specific* user data path.

----

.. _class_OS_method_get_date:

- :ref:`Dictionary<class_Dictionary>` **get_date** **(** :ref:`bool<class_bool>` utc=false **)** |const|

Deprecated, use :ref:`Time.get_date_dict_from_system<class_Time_method_get_date_dict_from_system>` instead.

Returns current date as a dictionary of keys: ``year``, ``month``, ``day``, ``weekday``, ``dst`` (Daylight Savings Time).

----

.. _class_OS_method_get_datetime:

- :ref:`Dictionary<class_Dictionary>` **get_datetime** **(** :ref:`bool<class_bool>` utc=false **)** |const|

Deprecated, use :ref:`Time.get_datetime_dict_from_system<class_Time_method_get_datetime_dict_from_system>` instead.

Returns current datetime as a dictionary of keys: ``year``, ``month``, ``day``, ``weekday``, ``dst`` (Daylight Savings Time), ``hour``, ``minute``, ``second``.

----

.. _class_OS_method_get_datetime_from_unix_time:

- :ref:`Dictionary<class_Dictionary>` **get_datetime_from_unix_time** **(** :ref:`int<class_int>` unix_time_val **)** |const|

Deprecated, use :ref:`Time.get_datetime_dict_from_unix_time<class_Time_method_get_datetime_dict_from_unix_time>` instead.

Gets a dictionary of time values corresponding to the given UNIX epoch time (in seconds).

The returned Dictionary's values will be the same as :ref:`get_datetime<class_OS_method_get_datetime>`, with the exception of Daylight Savings Time as it cannot be determined from the epoch.

----

.. _class_OS_method_get_dynamic_memory_usage:

- :ref:`int<class_int>` **get_dynamic_memory_usage** **(** **)** |const|

返回使用的动态内存总量（仅适用于调试）。

----

.. _class_OS_method_get_environment:

- :ref:`String<class_String>` **get_environment** **(** :ref:`String<class_String>` variable **)** |const|

返回环境变量的值。如果环境变量不存在，则返回一个空字符串。

\ **注意：** 仔细检查 ``variable`` 的大小写。环境变量名称在除 Windows 之外的所有平台上都区分大小写。

----

.. _class_OS_method_get_executable_path:

- :ref:`String<class_String>` **get_executable_path** **(** **)** |const|

返回当前引擎可执行文件的路径。

----

.. _class_OS_method_get_granted_permissions:

- :ref:`PoolStringArray<class_PoolStringArray>` **get_granted_permissions** **(** **)** |const|

通过这个函数，你可以获得已经授予Android应用程序的危险权限列表。

\ **注意：** 这个方法在Android上实现。

----

.. _class_OS_method_get_ime_selection:

- :ref:`Vector2<class_Vector2>` **get_ime_selection** **(** **)** |const|

返回相对于组合字符串中的字符的 IME 光标位置（字符串的当前编辑部分）。

\ :ref:`MainLoop.NOTIFICATION_OS_IME_UPDATE<class_MainLoop_constant_NOTIFICATION_OS_IME_UPDATE>` 被发送到应用程序以通知它 IME 光标位置的变化。

\ **注：**\ 此方法在macOS上实现。

----

.. _class_OS_method_get_ime_text:

- :ref:`String<class_String>` **get_ime_text** **(** **)** |const|

返回 IME 中间组合字符串。

\ :ref:`MainLoop.NOTIFICATION_OS_IME_UPDATE<class_MainLoop_constant_NOTIFICATION_OS_IME_UPDATE>` 被发送到应用程序以通知它对 IME 组合字符串的更改。

\ **注：**\ 此方法在macOS上实现。

----

.. _class_OS_method_get_latin_keyboard_variant:

- :ref:`String<class_String>` **get_latin_keyboard_variant** **(** **)** |const|

将当前拉丁键盘变体作为字符串返回。

可能的返回值是： ``"QWERTY"``\ ， ``"AZERTY"``\ ， ``"QZERTY"``\ ，\ ``"DVORAK"``\ ，\ ``"NEO"``\ ，\ ``"COLEMAK"``\ 或\ ``"错误ERROR"``\ 。

\ **注意：** 此方法在 Linux、macOS 和 Windows 上实现。在不受支持的平台上返回 ``"QWERTY"`` 。

----

.. _class_OS_method_get_locale:

- :ref:`String<class_String>` **get_locale** **(** **)** |const|

将主机操作系统区域设置为 ``language_Script_COUNTRY_VARIANT@extra`` 形式的字符串。如果您只想要语言代码而不是操作系统中完全指定的语言环境，您可以使用 :ref:`get_locale_language<class_OS_method_get_locale_language>`\ 。

\ ``language`` - 2 个或 3 个字母的\ `语言代码 <https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes>`__\ ，小写。

\ ``Script`` - 可选，4 个字母的\ `文字代码  <https://en.wikipedia.org/wiki/ISO_15924>`__\ ，首字母大写。

\ ``COUNTRY`` - 可选，2 个或 3 个字母 `国家地区代码 <https://en.wikipedia.org/wiki/ISO_3166-1>`__\ ，大写。

\ ``VARIANT`` - 可选，语言变体，地区和排序顺序。 变体可以有任意数量的带下划线的关键字。

\ ``extra`` - 可选，分号分隔的附加关键字列表。货币、日历、排序顺序和编号系统信息。

----

.. _class_OS_method_get_locale_language:

- :ref:`String<class_String>` **get_locale_language** **(** **)** |const|

将主机操作系统区域设置的 2 或 3 个字母 `语言代码 <https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes>`__ 作为字符串返回，该字符串应在所有平台上保持一致。这相当于提取 :ref:`get_locale<class_OS_method_get_locale>` 字符串的 ``language`` 部分。

当您不需要有关国家/地区代码或变体的附加信息时，这可用于将完全指定的区域设置字符串缩小为“通用”语言代码。例如，对于使用 ``fr_CA`` 语言环境的加拿大法语用户，这将返回 ``fr``\ 。

----

.. _class_OS_method_get_main_thread_id:

- :ref:`int<class_int>` **get_main_thread_id** **(** **)** |const|

Returns the ID of the main thread. See :ref:`get_thread_caller_id<class_OS_method_get_thread_caller_id>`.

\ **Note:** Thread IDs are not deterministic and may be reused across application restarts.

----

.. _class_OS_method_get_model_name:

- :ref:`String<class_String>` **get_model_name** **(** **)** |const|

返回当前设备的模型名称。

\ **注意:**\ 此方法仅在Android和iOS上实现。在不支持的平台上返回\ ``"GenericDevice"``\ 。

----

.. _class_OS_method_get_name:

- :ref:`String<class_String>` **get_name** **(** **)** |const|

返回主机操作系统的名称。可能的值有： ``"Android"``, ``"iOS"``, ``"HTML5"``, ``"OSX"``, ``"Server"``, ``"Windows"``, ``"UWP"``, ``"X11"``.

----

.. _class_OS_method_get_native_handle:

- :ref:`int<class_int>` **get_native_handle** **(** :ref:`HandleType<enum_OS_HandleType>` handle_type **)**

返回内部结构指针，以便在GDNative插件中使用。

\ **注意：**\ 此方法在Linux和Windows上实现（其他操作系统将很快被支持）。

----

.. _class_OS_method_get_power_percent_left:

- :ref:`int<class_int>` **get_power_percent_left** **(** **)**

以百分比形式返回设备中剩余的电池电量。如果电源状态未知，则返回 ``-1``\ 。

\ **注意：**\ 该方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_get_power_seconds_left:

- :ref:`int<class_int>` **get_power_seconds_left** **(** **)**

返回设备耗尽电池前几秒钟内剩余时间的估计值。如果电源状态未知，则返回 ``-1``\ 。

\ **注意：** 此方法在 Linux、macOS 和 Windows 上实现。

----

.. _class_OS_method_get_power_state:

- :ref:`PowerState<enum_OS_PowerState>` **get_power_state** **(** **)**

返回设备关于电池和电源的当前状态。请参阅 :ref:`PowerState<enum_OS_PowerState>` 常量。

\ **注意：**\ 该方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_get_process_id:

- :ref:`int<class_int>` **get_process_id** **(** **)** |const|

返回项目的进程 ID。

\ **注意：**\ 此方法在Android、iOS、Linux、macOS和Windows上实现。

----

.. _class_OS_method_get_processor_count:

- :ref:`int<class_int>` **get_processor_count** **(** **)** |const|

返回宿主机上可用的线程数。

----

.. _class_OS_method_get_real_window_size:

- :ref:`Vector2<class_Vector2>` **get_real_window_size** **(** **)** |const|

返回窗口大小，包括窗口边框等装饰。

----

.. _class_OS_method_get_scancode_string:

- :ref:`String<class_String>` **get_scancode_string** **(** :ref:`int<class_int>` code **)** |const|

将给定的扫描码作为字符串返回（例如返回值：\ ``"Escape"``\ ，\ ``"Shift+Escape"``\ ）。

另请参阅 :ref:`InputEventKey.scancode<class_InputEventKey_property_scancode>` 和 :ref:`InputEventKey.get_scancode_with_modifiers<class_InputEventKey_method_get_scancode_with_modifiers>` 。

----

.. _class_OS_method_get_screen_count:

- :ref:`int<class_int>` **get_screen_count** **(** **)** |const|

返回连接到宿主机的显示器数量。

----

.. _class_OS_method_get_screen_dpi:

- :ref:`int<class_int>` **get_screen_dpi** **(** :ref:`int<class_int>` screen=-1 **)** |const|

返回指定屏幕的每英寸点数密度。如果 ``screen`` 为 ``-1``\ （默认值），将使用当前屏幕。

\ **注意：**\ 在 macOS 上，如果使用小数显示缩放模式，则返回值不准确。

\ **注意：**\ 在 Android 设备上，实际屏幕密度被归为六种广义密度：

::

       ldpi - 120 dpi
       mdpi - 160 dpi
       hdpi - 240 dpi
      xhdpi - 320 dpi
     xxhdpi - 480 dpi
    xxxhdpi - 640 dpi

\ **注意：**\ 此方法在 Android、Linux、macOS 和 Windows 上实现。在不受支持的平台上返回 ``72``\ 。

----

.. _class_OS_method_get_screen_max_scale:

- :ref:`float<class_float>` **get_screen_max_scale** **(** **)** |const|

返回最大的屏幕的缩放。

\ **注：** 在macOS上，如果系统中至少有一个hiDPI(Retina)屏幕，则返回值为\ ``2.0``\ ，其他情况为\ ``1.0``\ 。

\ **注意：**\ 此方法仅在macOS上实现。

----

.. _class_OS_method_get_screen_position:

- :ref:`Vector2<class_Vector2>` **get_screen_position** **(** :ref:`int<class_int>` screen=-1 **)** |const|

返回索引所指定屏幕的位置。如果 ``screen`` 为 ``-1``\ （默认值），将使用当前屏幕。

----

.. _class_OS_method_get_screen_scale:

- :ref:`float<class_float>` **get_screen_scale** **(** :ref:`int<class_int>` screen=-1 **)** |const|

返回索引所指定屏幕的缩放系数。如果 ``screen`` 是 ``-1``\ （默认值），将使用当前屏幕。

\ **注意：**\ 在 macOS 上，对于 hiDPI（Retina）屏幕，返回值是 ``2.0``\ ，对于所有其他情况，返回值是 ``1.0``\ 。

\ **注意：**\ 此方法在 macOS 上实现。

----

.. _class_OS_method_get_screen_size:

- :ref:`Vector2<class_Vector2>` **get_screen_size** **(** :ref:`int<class_int>` screen=-1 **)** |const|

返回指定屏幕的尺寸，单位为像素。如果 ``screen`` 是 ``-1``\ （默认值），将使用当前屏幕。

----

.. _class_OS_method_get_splash_tick_msec:

- :ref:`int<class_int>` **get_splash_tick_msec** **(** **)** |const|

返回启动标志出现所花费的时间(以毫秒为单位)。

----

.. _class_OS_method_get_static_memory_peak_usage:

- :ref:`int<class_int>` **get_static_memory_peak_usage** **(** **)** |const|

返回使用的静态内存的最大数量(仅在调试中有效)。

----

.. _class_OS_method_get_static_memory_usage:

- :ref:`int<class_int>` **get_static_memory_usage** **(** **)** |const|

返回程序所使用的静态内存量，以字节为单位。

----

.. _class_OS_method_get_system_dir:

- :ref:`String<class_String>` **get_system_dir** **(** :ref:`SystemDir<enum_OS_SystemDir>` dir, :ref:`bool<class_bool>` shared_storage=true **)** |const|

返回不同平台上常用文件夹的实际路径。可用的位置在\ :ref:`SystemDir<enum_OS_SystemDir>`\ 中指定。

\ **注意:** 这个方法在Android、Linux、macOS和Windows上实现。

\ **注意:** 共享存储在Android上实现，并允许区分应用程序特定目录和共享目录。共享目录在Android上有额外的限制。

----

.. _class_OS_method_get_system_time_msecs:

- :ref:`int<class_int>` **get_system_time_msecs** **(** **)** |const|

以毫秒为单位返回操作系统的纪元时间。

----

.. _class_OS_method_get_system_time_secs:

- :ref:`int<class_int>` **get_system_time_secs** **(** **)** |const|

以秒为单位返回操作系统的纪元时间。

----

.. _class_OS_method_get_tablet_driver_count:

- :ref:`int<class_int>` **get_tablet_driver_count** **(** **)** |const|

返回可用的写字板（译注：或触摸板、数位板，在此处尚未明确）驱动程序的总数。

\ **注意:**\ 该方法是在Windows上实现的。

----

.. _class_OS_method_get_tablet_driver_name:

- :ref:`String<class_String>` **get_tablet_driver_name** **(** :ref:`int<class_int>` idx **)** |const|

返回给定索引的写字板（译注：或触摸板、数位板，在此处尚未明确）驱动程序名称。

\ **注意:**\ 该方法是在Windows上实现的。

----

.. _class_OS_method_get_thread_caller_id:

- :ref:`int<class_int>` **get_thread_caller_id** **(** **)** |const|

返回当前线程的 ID。这可用于日志，以简化多线程应用程序的调试。

\ **注：** 线程 ID 不是确定的，也许会在应用程序重新启动时被重复使用。

----

.. _class_OS_method_get_ticks_msec:

- :ref:`int<class_int>` **get_ticks_msec** **(** **)** |const|

Deprecated, use :ref:`Time.get_ticks_msec<class_Time_method_get_ticks_msec>` instead.

Returns the amount of time passed in milliseconds since the engine started.

----

.. _class_OS_method_get_ticks_usec:

- :ref:`int<class_int>` **get_ticks_usec** **(** **)** |const|

Deprecated, use :ref:`Time.get_ticks_usec<class_Time_method_get_ticks_usec>` instead.

Returns the amount of time passed in microseconds since the engine started.

----

.. _class_OS_method_get_time:

- :ref:`Dictionary<class_Dictionary>` **get_time** **(** :ref:`bool<class_bool>` utc=false **)** |const|

Deprecated, use :ref:`Time.get_time_dict_from_system<class_Time_method_get_time_dict_from_system>` instead.

Returns current time as a dictionary of keys: hour, minute, second.

----

.. _class_OS_method_get_time_zone_info:

- :ref:`Dictionary<class_Dictionary>` **get_time_zone_info** **(** **)** |const|

以字典形式返回当前时区，键为：bias和name。

----

.. _class_OS_method_get_unique_id:

- :ref:`String<class_String>` **get_unique_id** **(** **)** |const|

返回设备所特有的字符串。

\ **注意：** 如果用户重新安装/升级其操作系统或更改其硬件，此字符串可能会在不通知的情况下更改。这意味着它通常不应用于加密持续数据，因为在意外的 ID 更改变得无法访问之前保存的数据。返回的字符串也可能使用外部程序伪造，因此出于安全目的，不要依赖 :ref:`get_unique_id<class_OS_method_get_unique_id>` 返回的字符串。

\ **注意：** 返回 HTML5 和 UWP 上的空字符串，因为此方法尚未在这些平台上实施。

----

.. _class_OS_method_get_unix_time:

- :ref:`int<class_int>` **get_unix_time** **(** **)** |const|

以秒为单位返回当前的 UNIX 纪元时间戳。

\ **重要：** 这是用户可以手动设置的系统时钟。 **永远不要使用**\ 这种方法进行精确的时间计算，因为它的结果也会受到操作系统的自动调整。 **始终使用** :ref:`get_ticks_usec<class_OS_method_get_ticks_usec>` 或 :ref:`get_ticks_msec<class_OS_method_get_ticks_msec>` 进行精确时间计算，因为它们保证是单调的（即永不减少）。

----

.. _class_OS_method_get_unix_time_from_datetime:

- :ref:`int<class_int>` **get_unix_time_from_datetime** **(** :ref:`Dictionary<class_Dictionary>` datetime **)** |const|

从时间值字典中获取纪元时间值。

\ ``datetime`` 必须填充以下键:``year``\ 、\ ``month``\ 、\ ``day``\ 、\ ``hour``\ 、\ ``minute``\ 、\ ``second``\ 。

如果字典为空，则返回 ``0``\ 。如果某些键被省略，它们默认为 UNIX 纪元时间戳 0（1970-01-01 在 00:00:00 UTC）的等效值。

你可以将 :ref:`get_datetime_from_unix_time<class_OS_method_get_datetime_from_unix_time>` 的输出直接传递给此函数。夏令时 (``dst``)（如果存在）将被忽略。

----

.. _class_OS_method_get_user_data_dir:

- :ref:`String<class_String>` **get_user_data_dir** **(** **)** |const|

Returns the absolute directory path where user data is written (``user://``).

On Linux, this is ``~/.local/share/godot/app_userdata/[project_name]``, or ``~/.local/share/[custom_name]`` if ``use_custom_user_dir`` is set.

On macOS, this is ``~/Library/Application Support/GaaeExplorer/app_userdata/[project_name]``, or ``~/Library/Application Support/[custom_name]`` if ``use_custom_user_dir`` is set.

On Windows, this is ``%APPDATA%\GaaeExplorer\app_userdata\[project_name]``, or ``%APPDATA%\[custom_name]`` if ``use_custom_user_dir`` is set. ``%APPDATA%`` expands to ``%USERPROFILE%\AppData\Roaming``.

If the project name is empty, ``user://`` falls back to ``res://``.

Not to be confused with :ref:`get_data_dir<class_OS_method_get_data_dir>`, which returns the *global* (non-project-specific) user data directory.

----

.. _class_OS_method_get_video_driver_count:

- :ref:`int<class_int>` **get_video_driver_count** **(** **)** |const|

返回当前平台上支持的视频驱动器的数量。

----

.. _class_OS_method_get_video_driver_name:

- :ref:`String<class_String>` **get_video_driver_name** **(** :ref:`VideoDriver<enum_OS_VideoDriver>` driver **)** |const|

返回与给定 ``driver`` 索引匹配的视频驱动程序的名称。此索引是来自 :ref:`VideoDriver<enum_OS_VideoDriver>` 的值，您可以使用 :ref:`get_current_video_driver<class_OS_method_get_current_video_driver>` 获取当前后端的索引。

----

.. _class_OS_method_get_virtual_keyboard_height:

- :ref:`int<class_int>` **get_virtual_keyboard_height** **(** **)**

返回键盘在屏幕上的高度，单位为像素。如果没有键盘或当前键盘被隐藏，则返回0。

----

.. _class_OS_method_get_window_safe_area:

- :ref:`Rect2<class_Rect2>` **get_window_safe_area** **(** **)** |const|

返回应呈现交互式控件的窗口的未遮挡区域。

----

.. _class_OS_method_global_menu_add_item:

- void **global_menu_add_item** **(** :ref:`String<class_String>` menu, :ref:`String<class_String>` label, :ref:`Variant<class_Variant>` id, :ref:`Variant<class_Variant>` meta **)**

将带有文本“标签”的新项目添加到全局菜单。使用“_dock”菜单将项目添加到 macOS 停靠栏图标菜单。

\ **注：**\ 此方法在macOS上实现。

----

.. _class_OS_method_global_menu_add_separator:

- void **global_menu_add_separator** **(** :ref:`String<class_String>` menu **)**

在项目之间添加一个分隔符。分隔符也占用一个索引。

\ **注意：** 这个方法在macOS上实现。

----

.. _class_OS_method_global_menu_clear:

- void **global_menu_clear** **(** :ref:`String<class_String>` menu **)**

清除全局菜单，实际上是删除所有项目。

\ **注意：**\ 这个方法在macOS上实现。

----

.. _class_OS_method_global_menu_remove_item:

- void **global_menu_remove_item** **(** :ref:`String<class_String>` menu, :ref:`int<class_int>` idx **)**

将索引为 "idx" 的项目从全局菜单中移除。注意，在被删除的项目之后的项目的索引将被移动1位。

\ **注意：** 这个方法在macOS上实现。

----

.. _class_OS_method_has_environment:

- :ref:`bool<class_bool>` **has_environment** **(** :ref:`String<class_String>` variable **)** |const|

如果名称为 ``variable`` 的环境变量存在，则返回 ``true``\ 。

\ **注意：** 仔细检查 ``variable`` 的大小写。环境变量名称在除 Windows 之外的所有平台上都区分大小写。

----

.. _class_OS_method_has_feature:

- :ref:`bool<class_bool>` **has_feature** **(** :ref:`String<class_String>` tag_name **)** |const|

Returns ``true`` if the feature for the given feature tag is supported in the currently running instance, depending on the platform, build etc. Can be used to check whether you're currently running a debug build, on a certain platform or arch, etc. Refer to the :doc:`Feature Tags <../tutorials/export/feature_tags>` documentation for more details.

\ **Note:** Tag names are case-sensitive.

----

.. _class_OS_method_has_touchscreen_ui_hint:

- :ref:`bool<class_bool>` **has_touchscreen_ui_hint** **(** **)** |const|

如果设备有触摸屏或模拟有触摸屏，则返回\ ``true``\ 。

----

.. _class_OS_method_has_virtual_keyboard:

- :ref:`bool<class_bool>` **has_virtual_keyboard** **(** **)** |const|

如果平台有虚拟键盘，返回\ ``true``\ ，否则返回\ ``false``\ 。

----

.. _class_OS_method_hide_virtual_keyboard:

- void **hide_virtual_keyboard** **(** **)**

如果虚拟键盘为显示状态则隐藏虚拟键盘，否则不做任何操作。

----

.. _class_OS_method_is_debug_build:

- :ref:`bool<class_bool>` **is_debug_build** **(** **)** |const|

如果用于运行项目的GaaeExplorer二进制文件是\ *debug*\ 导出，或在编辑器中运行时，返回\ ``true``\ 。

如果用于运行项目的GaaeExplorer二进制文件是\ *release*\ 导出，则返回\ ``false``\ 。

要检查用于运行项目的GaaeExplorer二进制文件是否是被导出版本（调试或发布），请使用\ ``OS.has_feature("standalone")``\ 代替。

----

.. _class_OS_method_is_ok_left_and_cancel_right:

- :ref:`bool<class_bool>` **is_ok_left_and_cancel_right** **(** **)** |const|

如果\ **OK**\ 按钮应该显示在左边，\ **Cancel**\ 显示在右边，则返回\ ``true``\ 。

----

.. _class_OS_method_is_scancode_unicode:

- :ref:`bool<class_bool>` **is_scancode_unicode** **(** :ref:`int<class_int>` code **)** |const|

如果输入的键码与Unicode字符对应，则返回\ ``true``\ 。

----

.. _class_OS_method_is_stdout_verbose:

- :ref:`bool<class_bool>` **is_stdout_verbose** **(** **)** |const|

如果引擎是用\ ``-v``\ （verbose stdout）执行的，返回\ ``true``\ 。

----

.. _class_OS_method_is_userfs_persistent:

- :ref:`bool<class_bool>` **is_userfs_persistent** **(** **)** |const|

为 ``true`` 时 ``user://`` 文件系统是持久的，因此在玩家退出并再次启动游戏后，其状态是相同的。与 HTML5 平台有关，在那里这种持久性可能不可用。

----

.. _class_OS_method_is_window_always_on_top:

- :ref:`bool<class_bool>` **is_window_always_on_top** **(** **)** |const|

如果该窗口应总是在其他窗口之上，则返回\ ``true``\ 。

----

.. _class_OS_method_is_window_focused:

- :ref:`bool<class_bool>` **is_window_focused** **(** **)** |const|

如果窗口当前获得焦点，则返回\ ``true``\ 。

\ **注意：** 只在桌面平台上实现。在其他平台上，它将总是返回\ ``true``\ 。

----

.. _class_OS_method_keyboard_get_current_layout:

- :ref:`int<class_int>` **keyboard_get_current_layout** **(** **)** |const|

返回活动键盘布局索引。

\ **注意:**\ 本方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_keyboard_get_layout_count:

- :ref:`int<class_int>` **keyboard_get_layout_count** **(** **)** |const|

返回键盘布局的数量。

\ **注意：**\ 本方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_keyboard_get_layout_language:

- :ref:`String<class_String>` **keyboard_get_layout_language** **(** :ref:`int<class_int>` index **)** |const|

返回位于 ``index`` 位置的键盘布局的 ISO-639/BCP-47 语言代码。

\ **注意：**\ 本方法在 Linux、macOS 和 Windows 上实现。

----

.. _class_OS_method_keyboard_get_layout_name:

- :ref:`String<class_String>` **keyboard_get_layout_name** **(** :ref:`int<class_int>` index **)** |const|

返回位于\ ``index``\ 位置的键盘布局的本地名称。

\ **注意:** 本方法可在Linux、macOS和Windows上实现。

----

.. _class_OS_method_keyboard_set_current_layout:

- void **keyboard_set_current_layout** **(** :ref:`int<class_int>` index **)**

设置活动键盘布局。

\ **注：**\ 此方法可在Linux、macOS和Windows上实现。

----

.. _class_OS_method_kill:

- :ref:`Error<enum_@GlobalScope_Error>` **kill** **(** :ref:`int<class_int>` pid **)**

Kill (terminate) the process identified by the given process ID (``pid``), e.g. the one returned by :ref:`execute<class_OS_method_execute>` in non-blocking mode. See also :ref:`crash<class_OS_method_crash>`.

\ **Note:** This method can also be used to kill processes that were not spawned by the game.

\ **Note:** This method is implemented on Android, iOS, Linux, macOS and Windows.

----

.. _class_OS_method_move_window_to_foreground:

- void **move_window_to_foreground** **(** **)**

将窗口移到前面。

\ **注意：**\ 这个方法在 Linux、macOS 和 Windows 上实现。

----

.. _class_OS_method_native_video_is_playing:

- :ref:`bool<class_bool>` **native_video_is_playing** **(** **)**

如果本地视频正在播放，返回\ ``true``\ 。

\ **注意：** 这个方法只在iOS上实现。

----

.. _class_OS_method_native_video_pause:

- void **native_video_pause** **(** **)**

暂停本地视频播放。

\ **注意：** 这个方法只在iOS上实现。

----

.. _class_OS_method_native_video_play:

- :ref:`Error<enum_@GlobalScope_Error>` **native_video_play** **(** :ref:`String<class_String>` path, :ref:`float<class_float>` volume, :ref:`String<class_String>` audio_track, :ref:`String<class_String>` subtitle_track **)**

以给定的音量、音频和字幕轨道播放来自指定路径的本地视频。

\ **注意：** 这个方法只在iOS上实现。

----

.. _class_OS_method_native_video_stop:

- void **native_video_stop** **(** **)**

停止本地视频播放。

\ **注意：** 这个方法在iOS上实现。

----

.. _class_OS_method_native_video_unpause:

- void **native_video_unpause** **(** **)**

恢复本地视频播放。

\ **注意：** 这个方法在iOS上实现。

----

.. _class_OS_method_open_midi_inputs:

- void **open_midi_inputs** **(** **)**

初始化系统MIDI驱动的单例。

\ **注意：** 该方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_print_all_resources:

- void **print_all_resources** **(** :ref:`String<class_String>` tofile="" **)**

显示游戏中的所有资源。也可以通过在\ ``tofile``\ 中指定文件路径将该列表写入文件。

----

.. _class_OS_method_print_all_textures_by_size:

- void **print_all_textures_by_size** **(** **)**

显示加载的纹理在内存中按大小排序的列表。

----

.. _class_OS_method_print_resources_by_type:

- void **print_resources_by_type** **(** :ref:`PoolStringArray<class_PoolStringArray>` types **)**

显示游戏加载的给定类型资源的数量。

----

.. _class_OS_method_print_resources_in_use:

- void **print_resources_in_use** **(** :ref:`bool<class_bool>` short=false **)**

显示游戏当前使用的所有资源。

----

.. _class_OS_method_request_attention:

- void **request_attention** **(** **)**

要求用户注意该窗口。它会在Windows上闪烁任务栏按钮，或在OSX上弹出Dock图标。

\ **注意：** 这个方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_request_permission:

- :ref:`bool<class_bool>` **request_permission** **(** :ref:`String<class_String>` name **)**

目前，这个函数只被\ ``AudioDriverOpenSL``\ 用来请求Android上\ ``RECORD_AUDIO``\ 的权限。

----

.. _class_OS_method_request_permissions:

- :ref:`bool<class_bool>` **request_permissions** **(** **)**

通过这个功能，你可以申请危险的权限，因为在Android应用程序中，正常的权限会在安装时自动授予。

\ **注意：** 此方法在Android上实现。

----

.. _class_OS_method_set_environment:

- :ref:`bool<class_bool>` **set_environment** **(** :ref:`String<class_String>` variable, :ref:`String<class_String>` value **)** |const|

将环境变量\ ``variable``\ 的值设置为\ ``value``\ 。在运行\ :ref:`set_environment<class_OS_method_set_environment>`\ 后，环境变量将被设置为GaaeExplorer进程和任何用\ :ref:`execute<class_OS_method_execute>`\ 执行的进程。环境变量将\ *不*\ 持续存在于GaaeExplorer进程终止后运行的进程中。

\ **注意：** 仔细检查\ ``variable``\ 的大小写。除Windows外，环境变量名称在所有平台上都是区分大小写的。

----

.. _class_OS_method_set_icon:

- void **set_icon** **(** :ref:`Image<class_Image>` icon **)**

使用图像\ :ref:`Image<class_Image>`\ 资源设置游戏的图标。

同样的图像用于窗口标题、任务栏/dock和窗口选择对话框。图像会根据需要进行缩放。

\ **注意：** 这个方法在HTML5、Linux、macOS和Windows上实现。

----

.. _class_OS_method_set_ime_active:

- void **set_ime_active** **(** :ref:`bool<class_bool>` active **)**

设置是否应启用 IME 输入法模式。

如果激活，IME输入法编辑器在应用程序之前处理关键事件并创建组合字符串和建议列表。

应用程序可以通过使用 :ref:`get_ime_selection<class_OS_method_get_ime_selection>` 和 :ref:`get_ime_text<class_OS_method_get_ime_text>` 函数来检索组合状态。

输入完成时提交完成的组合字符串。

\ **注：**\ 该方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_set_ime_position:

- void **set_ime_position** **(** :ref:`Vector2<class_Vector2>` position **)**

设置 IME 建议列表弹出窗口的位置（在窗口坐标中）。

\ **注意：** 此方法在 Linux、macOS 和 Windows 上实现。

----

.. _class_OS_method_set_native_icon:

- void **set_native_icon** **(** :ref:`String<class_String>` filename **)**

使用多尺寸平台特定图标文件（\ ``*.ico`` 在 Windows 上设置游戏图标，在 macOS 上设置 ``*.icns`` ） 。

适当的大小子图标用于窗口标题、任务栏/停靠面板和窗口选择对话框。

\ **注意：** 此方法在 macOS 和 Windows 上实现。

----

.. _class_OS_method_set_thread_name:

- :ref:`Error<enum_@GlobalScope_Error>` **set_thread_name** **(** :ref:`String<class_String>` name **)**

设置当前线程的名称。

----

.. _class_OS_method_set_use_file_access_save_and_swap:

- void **set_use_file_access_save_and_swap** **(** :ref:`bool<class_bool>` enabled **)**

如果\ ``enabled``\ 为\ ``true``\ ，则启用备份保存。

----

.. _class_OS_method_set_window_always_on_top:

- void **set_window_always_on_top** **(** :ref:`bool<class_bool>` enabled **)**

设置窗口是否应始终位于顶部。

\ **注：** 该方法在 Linux、macOS 和 Windows 上实现。

----

.. _class_OS_method_set_window_mouse_passthrough:

- void **set_window_mouse_passthrough** **(** :ref:`PoolVector2Array<class_PoolVector2Array>` region **)**

设置窗口的一个接受鼠标事件的多边形区域。该区域外的鼠标事件将被传递出去。

传递一个空数组将禁用穿透支持（所有鼠标事件将被窗口拦截，这是默认行为）。

::

    # 设置区域，使用Path2D节点。
    OS.set_window_mouse_passthrough($Path2D.curve.get_baked_points() )
    
    # 设置区域，使用Polygon2D节点。
    OS.set_window_mouse_passthrough($Polygon2D.polygon)
    
    # 重置区域为默认值。
    OS.set_window_mouse_passthrough([] )

\ **注意:**\ 在Windows上，位于区域外的窗口部分不会被绘制，而在Linux和macOS上则会。

\ **注意:** 这个方法在Linux、macOS和Windows上实现。

----

.. _class_OS_method_set_window_title:

- void **set_window_title** **(** :ref:`String<class_String>` title **)**

将窗口标题设置为指定的字符串。

\ **注意：** 这个应该偶尔使用。不要每帧都设置这个，因为这会对某些窗口管理器的性能产生负面影响。

\ **注：** 该方法在 HTML5、Linux、macOS 和 Windows 上实现。

----

.. _class_OS_method_shell_open:

- :ref:`Error<enum_@GlobalScope_Error>` **shell_open** **(** :ref:`String<class_String>` uri **)**

Requests the OS to open a resource with the most appropriate program. For example:

- ``OS.shell_open("C:\\Users\name\Downloads")`` on Windows opens the file explorer at the user's Downloads folder.

- ``OS.shell_open("https://godotengine.org")`` opens the default web browser on the official GaaeExplorer website.

- ``OS.shell_open("mailto:example@example.com")`` opens the default email client with the "To" field set to ``example@example.com``. See `Customizing [code]mailto:[/code] Links <https://blog.escapecreative.com/customizing-mailto-links/>`__ for a list of fields that can be added.

Use :ref:`ProjectSettings.globalize_path<class_ProjectSettings_method_globalize_path>` to convert a ``res://`` or ``user://`` path into a system path for use with this method.

\ **Note:** This method is implemented on Android, iOS, HTML5, Linux, macOS and Windows.

----

.. _class_OS_method_show_virtual_keyboard:

- void **show_virtual_keyboard** **(** :ref:`String<class_String>` existing_text="", :ref:`bool<class_bool>` multiline=false **)**

如果平台有虚拟键盘，则显示虚拟键盘。

\ ``existing_text`` 参数对于实现您自己的 :ref:`LineEdit<class_LineEdit>` 或 :ref:`TextEdit<class_TextEdit>` 很有用，因为它告诉虚拟键盘已经输入了哪些文本（虚拟键盘使用它进行自动更正和预测）。

\ ``multiline``\ 参数需要设置为\ ``true``\ 才能输入多行文本，如\ :ref:`TextEdit<class_TextEdit>`\ 。

\ **注：**\ 此方法在Android、iOS和UWP上实现。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
