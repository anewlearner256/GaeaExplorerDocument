:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the SpriteBase3D.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_SpriteBase3D:

SpriteBase3D
============

**Inherits:** :ref:`GeometryInstance<class_GeometryInstance>` **<** :ref:`VisualInstance<class_VisualInstance>` **<** :ref:`CullInstance<class_CullInstance>` **<** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`AnimatedSprite3D<class_AnimatedSprite3D>`, :ref:`Sprite3D<class_Sprite3D>`

3D 环境中的 2D 精灵节点。

描述
----

在 3D 环境中显示 2D 纹理信息的节点。

属性
----

+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`AlphaCutMode<enum_SpriteBase3D_AlphaCutMode>`      | :ref:`alpha_cut<class_SpriteBase3D_property_alpha_cut>`       | ``0``                   |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| Vector3.Axis                                             | :ref:`axis<class_SpriteBase3D_property_axis>`                 | ``2``                   |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`BillboardMode<enum_SpatialMaterial_BillboardMode>` | :ref:`billboard<class_SpriteBase3D_property_billboard>`       | ``0``                   |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`centered<class_SpriteBase3D_property_centered>`         | ``true``                |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`double_sided<class_SpriteBase3D_property_double_sided>` | ``true``                |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`flip_h<class_SpriteBase3D_property_flip_h>`             | ``false``               |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`flip_v<class_SpriteBase3D_property_flip_v>`             | ``false``               |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`Color<class_Color>`                                | :ref:`modulate<class_SpriteBase3D_property_modulate>`         | ``Color( 1, 1, 1, 1 )`` |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`Vector2<class_Vector2>`                            | :ref:`offset<class_SpriteBase3D_property_offset>`             | ``Vector2( 0, 0 )``     |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                | :ref:`opacity<class_SpriteBase3D_property_opacity>`           | ``1.0``                 |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`float<class_float>`                                | :ref:`pixel_size<class_SpriteBase3D_property_pixel_size>`     | ``0.01``                |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`shaded<class_SpriteBase3D_property_shaded>`             | ``false``               |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+
| :ref:`bool<class_bool>`                                  | :ref:`transparent<class_SpriteBase3D_property_transparent>`   | ``true``                |
+----------------------------------------------------------+---------------------------------------------------------------+-------------------------+

方法
----

+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`TriangleMesh<class_TriangleMesh>` | :ref:`generate_triangle_mesh<class_SpriteBase3D_method_generate_triangle_mesh>` **(** **)** |const|                                                           |
+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                 | :ref:`get_draw_flag<class_SpriteBase3D_method_get_draw_flag>` **(** :ref:`DrawFlags<enum_SpriteBase3D_DrawFlags>` flag **)** |const|                          |
+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Rect2<class_Rect2>`               | :ref:`get_item_rect<class_SpriteBase3D_method_get_item_rect>` **(** **)** |const|                                                                             |
+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                    | :ref:`set_draw_flag<class_SpriteBase3D_method_set_draw_flag>` **(** :ref:`DrawFlags<enum_SpriteBase3D_DrawFlags>` flag, :ref:`bool<class_bool>` enabled **)** |
+-----------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_SpriteBase3D_DrawFlags:

.. _class_SpriteBase3D_constant_FLAG_TRANSPARENT:

.. _class_SpriteBase3D_constant_FLAG_SHADED:

.. _class_SpriteBase3D_constant_FLAG_DOUBLE_SIDED:

.. _class_SpriteBase3D_constant_FLAG_MAX:

enum **DrawFlags**:

- **FLAG_TRANSPARENT** = **0** --- 如果设置，纹理的透明度和不透明性用于使精灵的这些部分不可见。

- **FLAG_SHADED** = **1** --- 如果设置，环境中的灯光会影响精灵。

- **FLAG_DOUBLE_SIDED** = **2** --- 如果设置，从后面也可以看到纹理，如果没有，从后面看它是不可见的。

- **FLAG_MAX** = **3** --- 代表\ :ref:`DrawFlags<enum_SpriteBase3D_DrawFlags>`\ 枚举的大小。

----

.. _enum_SpriteBase3D_AlphaCutMode:

.. _class_SpriteBase3D_constant_ALPHA_CUT_DISABLED:

.. _class_SpriteBase3D_constant_ALPHA_CUT_DISCARD:

.. _class_SpriteBase3D_constant_ALPHA_CUT_OPAQUE_PREPASS:

enum **AlphaCutMode**:

- **ALPHA_CUT_DISABLED** = **0**

- **ALPHA_CUT_DISCARD** = **1**

- **ALPHA_CUT_OPAQUE_PREPASS** = **2**

属性说明
--------

.. _class_SpriteBase3D_property_alpha_cut:

- :ref:`AlphaCutMode<enum_SpriteBase3D_AlphaCutMode>` **alpha_cut**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_alpha_cut_mode(value) |
+-----------+---------------------------+
| *Getter*  | get_alpha_cut_mode()      |
+-----------+---------------------------+

----

.. _class_SpriteBase3D_property_axis:

- Vector3.Axis **axis**

+-----------+-----------------+
| *Default* | ``2``           |
+-----------+-----------------+
| *Setter*  | set_axis(value) |
+-----------+-----------------+
| *Getter*  | get_axis()      |
+-----------+-----------------+

纹理正面朝向的方向。

----

.. _class_SpriteBase3D_property_billboard:

- :ref:`BillboardMode<enum_SpatialMaterial_BillboardMode>` **billboard**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_billboard_mode(value) |
+-----------+---------------------------+
| *Getter*  | get_billboard_mode()      |
+-----------+---------------------------+

----

.. _class_SpriteBase3D_property_centered:

- :ref:`bool<class_bool>` **centered**

+-----------+---------------------+
| *Default* | ``true``            |
+-----------+---------------------+
| *Setter*  | set_centered(value) |
+-----------+---------------------+
| *Getter*  | is_centered()       |
+-----------+---------------------+

为 ``true`` 时纹理将被居中。

----

.. _class_SpriteBase3D_property_double_sided:

- :ref:`bool<class_bool>` **double_sided**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_draw_flag(value) |
+-----------+----------------------+
| *Getter*  | get_draw_flag()      |
+-----------+----------------------+

如果\ ``true``\ ，从后面也可以看到纹理，如果\ ``false``\ ，从后面看它是不可见的。

----

.. _class_SpriteBase3D_property_flip_h:

- :ref:`bool<class_bool>` **flip_h**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_h(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_h()    |
+-----------+-------------------+

为 ``true`` 时纹理将被水平翻转。

----

.. _class_SpriteBase3D_property_flip_v:

- :ref:`bool<class_bool>` **flip_v**

+-----------+-------------------+
| *Default* | ``false``         |
+-----------+-------------------+
| *Setter*  | set_flip_v(value) |
+-----------+-------------------+
| *Getter*  | is_flipped_v()    |
+-----------+-------------------+

为 ``true`` 时纹理将被垂直翻转。

----

.. _class_SpriteBase3D_property_modulate:

- :ref:`Color<class_Color>` **modulate**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_modulate(value)     |
+-----------+-------------------------+
| *Getter*  | get_modulate()          |
+-----------+-------------------------+

乘以颜色值，用于色调调制和模拟光的颜色。

----

.. _class_SpriteBase3D_property_offset:

- :ref:`Vector2<class_Vector2>` **offset**

+-----------+---------------------+
| *Default* | ``Vector2( 0, 0 )`` |
+-----------+---------------------+
| *Setter*  | set_offset(value)   |
+-----------+---------------------+
| *Getter*  | get_offset()        |
+-----------+---------------------+

纹理的绘图偏移量。

----

.. _class_SpriteBase3D_property_opacity:

- :ref:`float<class_float>` **opacity**

+-----------+--------------------+
| *Default* | ``1.0``            |
+-----------+--------------------+
| *Setter*  | set_opacity(value) |
+-----------+--------------------+
| *Getter*  | get_opacity()      |
+-----------+--------------------+

物体的可见度从 ``0`` 完全不可见到 ``1`` 完全可见。

----

.. _class_SpriteBase3D_property_pixel_size:

- :ref:`float<class_float>` **pixel_size**

+-----------+-----------------------+
| *Default* | ``0.01``              |
+-----------+-----------------------+
| *Setter*  | set_pixel_size(value) |
+-----------+-----------------------+
| *Getter*  | get_pixel_size()      |
+-----------+-----------------------+

精灵上一个像素宽度的大小，以 3D 缩放。

----

.. _class_SpriteBase3D_property_shaded:

- :ref:`bool<class_bool>` **shaded**

+-----------+----------------------+
| *Default* | ``false``            |
+-----------+----------------------+
| *Setter*  | set_draw_flag(value) |
+-----------+----------------------+
| *Getter*  | get_draw_flag()      |
+-----------+----------------------+

如果 ``true``\ ，则 :ref:`Environment<class_Environment>` 中的 :ref:`Light<class_Light>` 对精灵有影响。

----

.. _class_SpriteBase3D_property_transparent:

- :ref:`bool<class_bool>` **transparent**

+-----------+----------------------+
| *Default* | ``true``             |
+-----------+----------------------+
| *Setter*  | set_draw_flag(value) |
+-----------+----------------------+
| *Getter*  | get_draw_flag()      |
+-----------+----------------------+

如果 ``true``\ ，纹理的透明度和不透明度用于使精灵的这些部分不可见。

方法说明
--------

.. _class_SpriteBase3D_method_generate_triangle_mesh:

- :ref:`TriangleMesh<class_TriangleMesh>` **generate_triangle_mesh** **(** **)** |const|

----

.. _class_SpriteBase3D_method_get_draw_flag:

- :ref:`bool<class_bool>` **get_draw_flag** **(** :ref:`DrawFlags<enum_SpriteBase3D_DrawFlags>` flag **)** |const|

返回指定标志的值。

----

.. _class_SpriteBase3D_method_get_item_rect:

- :ref:`Rect2<class_Rect2>` **get_item_rect** **(** **)** |const|

返回表示此精灵的矩形。

----

.. _class_SpriteBase3D_method_set_draw_flag:

- void **set_draw_flag** **(** :ref:`DrawFlags<enum_SpriteBase3D_DrawFlags>` flag, :ref:`bool<class_bool>` enabled **)**

如果\ ``true``\ ，指定的标志将被启用。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
