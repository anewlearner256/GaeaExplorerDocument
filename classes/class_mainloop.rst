:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the MainLoop.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_MainLoop:

MainLoop
========

**Inherits:** :ref:`Object<class_Object>`

**Inherited By:** :ref:`SceneTree<class_SceneTree>`

游戏主循环的抽象基类。

描述
----

``MainLoop``\ 是GaaeExplorer项目中游戏循环的抽象基类。它被\ :ref:`SceneTree<class_SceneTree>`\ 继承，后者是GaaeExplorer项目中使用的游戏循环的默认实现，不过也可以编写和使用自己的\ ``MainLoop``\ 子类，而不是场景树。

在应用程序启动时，必须向操作系统提供一个\ ``MainLoop``\ 实现；否则，应用程序将退出。除非从命令行提供一个主\ :ref:`Script<class_Script>`\ （例如：\ ``godot -s my_loop.gd``\ ），这将自动发生（并且创建一个\ :ref:`SceneTree<class_SceneTree>`\ ），并应该是一个\ ``MainLoop``\ 实现。

下面是实现简单\ ``MainLoop``\ 的脚本例子:

::

    extends MainLoop
    
    var time_elapsed = 0
    var keys_typed = []
    var quit = false
    
    func _initialize():
        print("Initialized:")
        print("  Starting time: %s" % str(time_elapsed))
    
    func _idle(delta):
        time_elapsed += delta
        # Return true to end the main loop.
        return quit
    
    func _input_event(event):
        # Record keys.
        if event is InputEventKey and event.pressed and !event.echo:
            keys_typed.append(OS.get_scancode_string(event.scancode))
            # Quit on Escape press.
            if event.scancode == KEY_ESCAPE:
                quit = true
        # Quit on any mouse click.
        if event is InputEventMouseButton:
            quit = true
    
    func _finalize():
        print("Finalized:")
        print("  End time: %s" % str(time_elapsed))
        print("  Keys typed: %s" % var2str(keys_typed))

方法
----

+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`_drop_files<class_MainLoop_method__drop_files>` **(** :ref:`PoolStringArray<class_PoolStringArray>` files, :ref:`int<class_int>` from_screen **)** |virtual| |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`_finalize<class_MainLoop_method__finalize>` **(** **)** |virtual|                                                                                            |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`_global_menu_action<class_MainLoop_method__global_menu_action>` **(** :ref:`Variant<class_Variant>` id, :ref:`Variant<class_Variant>` meta **)** |virtual|   |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`_idle<class_MainLoop_method__idle>` **(** :ref:`float<class_float>` delta **)** |virtual|                                                                    |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`_initialize<class_MainLoop_method__initialize>` **(** **)** |virtual|                                                                                        |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`_input_event<class_MainLoop_method__input_event>` **(** :ref:`InputEvent<class_InputEvent>` event **)** |virtual|                                            |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`_input_text<class_MainLoop_method__input_text>` **(** :ref:`String<class_String>` text **)** |virtual|                                                       |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`_iteration<class_MainLoop_method__iteration>` **(** :ref:`float<class_float>` delta **)** |virtual|                                                          |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`finish<class_MainLoop_method_finish>` **(** **)**                                                                                                            |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`idle<class_MainLoop_method_idle>` **(** :ref:`float<class_float>` delta **)**                                                                                |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`init<class_MainLoop_method_init>` **(** **)**                                                                                                                |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`input_event<class_MainLoop_method_input_event>` **(** :ref:`InputEvent<class_InputEvent>` event **)**                                                        |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                    | :ref:`input_text<class_MainLoop_method_input_text>` **(** :ref:`String<class_String>` text **)**                                                                   |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>` | :ref:`iteration<class_MainLoop_method_iteration>` **(** :ref:`float<class_float>` delta **)**                                                                      |
+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

信号
----

.. _class_MainLoop_signal_on_request_permissions_result:

- **on_request_permissions_result** **(** :ref:`String<class_String>` permission, :ref:`bool<class_bool>` granted **)**

当用户对权限请求作出反应时发出。

常量
----

.. _class_MainLoop_constant_NOTIFICATION_WM_MOUSE_ENTER:

.. _class_MainLoop_constant_NOTIFICATION_WM_MOUSE_EXIT:

.. _class_MainLoop_constant_NOTIFICATION_WM_FOCUS_IN:

.. _class_MainLoop_constant_NOTIFICATION_WM_FOCUS_OUT:

.. _class_MainLoop_constant_NOTIFICATION_WM_QUIT_REQUEST:

.. _class_MainLoop_constant_NOTIFICATION_WM_GO_BACK_REQUEST:

.. _class_MainLoop_constant_NOTIFICATION_WM_UNFOCUS_REQUEST:

.. _class_MainLoop_constant_NOTIFICATION_OS_MEMORY_WARNING:

.. _class_MainLoop_constant_NOTIFICATION_TRANSLATION_CHANGED:

.. _class_MainLoop_constant_NOTIFICATION_WM_ABOUT:

.. _class_MainLoop_constant_NOTIFICATION_CRASH:

.. _class_MainLoop_constant_NOTIFICATION_OS_IME_UPDATE:

.. _class_MainLoop_constant_NOTIFICATION_APP_RESUMED:

.. _class_MainLoop_constant_NOTIFICATION_APP_PAUSED:

- **NOTIFICATION_WM_MOUSE_ENTER** = **1002** --- 当鼠标进入游戏窗口时从操作系统收到的通知。

在桌面和网络平台上实现。

- **NOTIFICATION_WM_MOUSE_EXIT** = **1003** --- 当鼠标离开游戏窗口时从操作系统收到的通知。

在桌面和网络平台上实现。

- **NOTIFICATION_WM_FOCUS_IN** = **1004** --- 当游戏窗口获得焦点时，从操作系统收到的通知。

在所有平台上实现。

- **NOTIFICATION_WM_FOCUS_OUT** = **1005** --- 当游戏窗口未获得焦点时，从操作系统收到的通知。

在所有平台上实现。

- **NOTIFICATION_WM_QUIT_REQUEST** = **1006** --- 发出退出请求时，从操作系统收到的通知（例如用“关闭”按钮或 Alt+F4 关闭窗口）。

在桌面平台上实现。

- **NOTIFICATION_WM_GO_BACK_REQUEST** = **1007** --- 当发出返回请求时，从操作系统收到的通知（例如在 Android 系统上按下“返回”按钮）。

Android 平台特供。

- **NOTIFICATION_WM_UNFOCUS_REQUEST** = **1008** --- 当取消焦点的请求被发送时，从操作系统收到的通知（例如，另一个操作系统窗口想要得到焦点）。

目前没有支持的平台发送这个通知。

- **NOTIFICATION_OS_MEMORY_WARNING** = **1009** --- 当应用程序超过其分配的内存时，从操作系统收到的通知。

专用于 iOS 平台。

- **NOTIFICATION_TRANSLATION_CHANGED** = **1010** --- 当翻译可能发生变化时收到的通知。可以由用户改变区域设置来触发。可以用来响应语言的变化，例如，实时改变 UI 字符串。在使用内置的翻译支持时很有用，比如 :ref:`Object.tr<class_Object_method_tr>`\ 。

- **NOTIFICATION_WM_ABOUT** = **1011** --- 当发送“关于”信息的请求时，从操作系统收到的通知。

特定于 macOS 平台。

- **NOTIFICATION_CRASH** = **1012** --- 当引擎即将崩溃时，从GaaeExplorer的崩溃处理程序收到的通知。

如果崩溃处理程序被启用，这只会在桌面平台上实现。

- **NOTIFICATION_OS_IME_UPDATE** = **1013** --- 当输入法引擎发生更新时，从操作系统收到的通知（例如，IME光标位置或组成字符串的变化）。

特定于macOS平台。

- **NOTIFICATION_APP_RESUMED** = **1014** --- 恢复应用时从操作系统收到的通知。

特定于 Android 平台。

- **NOTIFICATION_APP_PAUSED** = **1015** --- 暂停应用时从操作系统收到的通知。

特定于 Android 平台。

方法说明
--------

.. _class_MainLoop_method__drop_files:

- void **_drop_files** **(** :ref:`PoolStringArray<class_PoolStringArray>` files, :ref:`int<class_int>` from_screen **)** |virtual|

当文件从操作系统的文件管理器中被拖到游戏窗口中时被调用。参数是一个文件路径列表和拖动屏幕的标识符。

----

.. _class_MainLoop_method__finalize:

- void **_finalize** **(** **)** |virtual|

在程序退出前调用。

----

.. _class_MainLoop_method__global_menu_action:

- void **_global_menu_action** **(** :ref:`Variant<class_Variant>` id, :ref:`Variant<class_Variant>` meta **)** |virtual|

当用户在系统全局菜单（如Mac OS的菜单栏）中执行动作时被调用。

----

.. _class_MainLoop_method__idle:

- :ref:`bool<class_bool>` **_idle** **(** :ref:`float<class_float>` delta **)** |virtual|

在每个空闲帧中调用，参数为自上一个空闲帧以来的时间（以秒为单位）。相当于\ :ref:`Node._process<class_Node_method__process>`\ 。

如果实施，该方法必须返回一个布尔值。\ ``true`` 结束主循环，而\ ``false`` 让它进入下一帧。

----

.. _class_MainLoop_method__initialize:

- void **_initialize** **(** **)** |virtual|

在初始化时调用一次。

----

.. _class_MainLoop_method__input_event:

- void **_input_event** **(** :ref:`InputEvent<class_InputEvent>` event **)** |virtual|

每当主循环接收到\ :ref:`InputEvent<class_InputEvent>`\ 时，就会调用。

----

.. _class_MainLoop_method__input_text:

- void **_input_text** **(** :ref:`String<class_String>` text **)** |virtual|

废弃的回调，不做任何事情。使用\ :ref:`_input_event<class_MainLoop_method__input_event>`\ 来解析文本输入。在GaaeExplorer 4.0中会被删除。

----

.. _class_MainLoop_method__iteration:

- :ref:`bool<class_bool>` **_iteration** **(** :ref:`float<class_float>` delta **)** |virtual|

在每个物理帧中调用，并将自上一个物理帧以来的时间作为参数，\ ``delta``\ ，单位为秒。相当于\ :ref:`Node._physics_process<class_Node_method__physics_process>`\ 。

如果实现，该方法必须返回一个布尔值。\ ``true``\ 结束主循环，而\ ``false``\ 让它进入下一帧。

----

.. _class_MainLoop_method_finish:

- void **finish** **(** **)**

不应手动调用，而应覆盖\ :ref:`_finalize<class_MainLoop_method__finalize>`\ 。在GaaeExplorer 4.0中会被删除。

----

.. _class_MainLoop_method_idle:

- :ref:`bool<class_bool>` **idle** **(** :ref:`float<class_float>` delta **)**

不应手动调用，而应覆盖\ :ref:`_idle<class_MainLoop_method__idle>`\ 。在GaaeExplorer 4.0中会被删除。

----

.. _class_MainLoop_method_init:

- void **init** **(** **)**

不应手动调用，而应覆盖\ :ref:`_initialize<class_MainLoop_method__initialize>`\ 。在GaaeExplorer 4.0中会被删除。

----

.. _class_MainLoop_method_input_event:

- void **input_event** **(** :ref:`InputEvent<class_InputEvent>` event **)**

不应手动调用，而应重写\ :ref:`_input_event<class_MainLoop_method__input_event>`\ 。在GaaeExplorer 4.0中会被删除。

----

.. _class_MainLoop_method_input_text:

- void **input_text** **(** :ref:`String<class_String>` text **)**

不应手动调用，而应重写\ :ref:`_input_text<class_MainLoop_method__input_text>`\ 。在GaaeExplorer 4.0中会被删除。

----

.. _class_MainLoop_method_iteration:

- :ref:`bool<class_bool>` **iteration** **(** :ref:`float<class_float>` delta **)**

不应手动调用，而应覆盖\ :ref:`_iteration<class_MainLoop_method__iteration>`\ 。在GaaeExplorer 4.0中会被删除。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
