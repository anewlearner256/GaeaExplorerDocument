:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the AudioEffectCapture.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_AudioEffectCapture:

AudioEffectCapture
==================

**Inherits:** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

从音频总线上实时捕捉音频。

描述
----

音频效果捕获是一种音频效果，可将所附音频效果总线的所有音频帧复制到其内部环缓冲器中。

应用程序代码应使用 :ref:`get_buffer<class_AudioEffectCapture_method_get_buffer>`\ 从该环缓冲器中消耗这些音频帧，并根据需要进行处理，例如从麦克风捕获数据、实现应用程序定义的效果或通过网络传输音频。

属性
----

+---------------------------+-----------------------------------------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`buffer_length<class_AudioEffectCapture_property_buffer_length>` | ``0.1`` |
+---------------------------+-----------------------------------------------------------------------+---------+

方法
----

+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                         | :ref:`can_get_buffer<class_AudioEffectCapture_method_can_get_buffer>` **(** :ref:`int<class_int>` frames **)** |const| |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| void                                            | :ref:`clear_buffer<class_AudioEffectCapture_method_clear_buffer>` **(** **)**                                          |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector2Array<class_PoolVector2Array>` | :ref:`get_buffer<class_AudioEffectCapture_method_get_buffer>` **(** :ref:`int<class_int>` frames **)**                 |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`get_buffer_length_frames<class_AudioEffectCapture_method_get_buffer_length_frames>` **(** **)** |const|          |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`get_discarded_frames<class_AudioEffectCapture_method_get_discarded_frames>` **(** **)** |const|                  |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`get_frames_available<class_AudioEffectCapture_method_get_frames_available>` **(** **)** |const|                  |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                           | :ref:`get_pushed_frames<class_AudioEffectCapture_method_get_pushed_frames>` **(** **)** |const|                        |
+-------------------------------------------------+------------------------------------------------------------------------------------------------------------------------+

属性说明
--------

.. _class_AudioEffectCapture_property_buffer_length:

- :ref:`float<class_float>` **buffer_length**

+-----------+--------------------------+
| *Default* | ``0.1``                  |
+-----------+--------------------------+
| *Setter*  | set_buffer_length(value) |
+-----------+--------------------------+
| *Getter*  | get_buffer_length()      |
+-----------+--------------------------+

内部环缓冲区的长度，单位是秒。如果已经初始化，设置缓冲区长度将没有效果。

方法说明
--------

.. _class_AudioEffectCapture_method_can_get_buffer:

- :ref:`bool<class_bool>` **can_get_buffer** **(** :ref:`int<class_int>` frames **)** |const|

如果内部环缓冲器中至少有\ ``frames``\ 音频帧可供读取，则返回\ ``true``\ 。

----

.. _class_AudioEffectCapture_method_clear_buffer:

- void **clear_buffer** **(** **)**

清除内部环缓冲区。

----

.. _class_AudioEffectCapture_method_get_buffer:

- :ref:`PoolVector2Array<class_PoolVector2Array>` **get_buffer** **(** :ref:`int<class_int>` frames **)**

从内部环缓冲区获取下一个\ ``frames``\ 音频样本。

如果有的话，返回一个正好包含\ ``frames``\ 音频样本的\ :ref:`PoolVector2Array<class_PoolVector2Array>`\ ，如果没有足够的数据，则返回一个空\ :ref:`PoolVector2Array<class_PoolVector2Array>`\ 。

----

.. _class_AudioEffectCapture_method_get_buffer_length_frames:

- :ref:`int<class_int>` **get_buffer_length_frames** **(** **)** |const|

返回内部环缓冲区的总大小，以帧为单位。

----

.. _class_AudioEffectCapture_method_get_discarded_frames:

- :ref:`int<class_int>` **get_discarded_frames** **(** **)** |const|

返回由于缓冲区满而从音频总线上丢弃的音频帧的数量。

----

.. _class_AudioEffectCapture_method_get_frames_available:

- :ref:`int<class_int>` **get_frames_available** **(** **)** |const|

返回可使用 :ref:`get_buffer<class_AudioEffectCapture_method_get_buffer>` 读取的帧数。

----

.. _class_AudioEffectCapture_method_get_pushed_frames:

- :ref:`int<class_int>` **get_pushed_frames** **(** **)** |const|

返回从音频总线插入的音频帧的数量。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
