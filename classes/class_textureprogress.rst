:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TextureProgress.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TextureProgress:

TextureProgress
===============

**Inherits:** :ref:`Range<class_Range>` **<** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

基于纹理的进度条。适用于加载屏幕和生命或体力条。

描述
----

TextureProgress的工作原理与\ :ref:`ProgressBar<class_ProgressBar>`\ 类似，但最多使用3个纹理，而不是GaaeExplorer的\ :ref:`Theme<class_Theme>`\ 资源。它可以用来创建水平、垂直和径向的进度条。

属性
----

+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`fill_mode<class_TextureProgress_property_fill_mode>`                             | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`MouseFilter<enum_Control_MouseFilter>` | mouse_filter                                                                           | ``1`` (overrides :ref:`Control<class_Control_property_mouse_filter>`) |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`bool<class_bool>`                      | :ref:`nine_patch_stretch<class_TextureProgress_property_nine_patch_stretch>`           | ``false``                                                             |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                | :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`       | ``Vector2( 0, 0 )``                                                   |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`float<class_float>`                    | :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`         | ``360.0``                                                             |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`float<class_float>`                    | :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>`       | ``0.0``                                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_bottom<class_TextureProgress_property_stretch_margin_bottom>`     | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_left<class_TextureProgress_property_stretch_margin_left>`         | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_right<class_TextureProgress_property_stretch_margin_right>`       | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`int<class_int>`                        | :ref:`stretch_margin_top<class_TextureProgress_property_stretch_margin_top>`           | ``0``                                                                 |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                | :ref:`texture_over<class_TextureProgress_property_texture_over>`                       |                                                                       |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                | :ref:`texture_progress<class_TextureProgress_property_texture_progress>`               |                                                                       |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                | :ref:`texture_progress_offset<class_TextureProgress_property_texture_progress_offset>` | ``Vector2( 0, 0 )``                                                   |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Texture<class_Texture>`                | :ref:`texture_under<class_TextureProgress_property_texture_under>`                     |                                                                       |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Color<class_Color>`                    | :ref:`tint_over<class_TextureProgress_property_tint_over>`                             | ``Color( 1, 1, 1, 1 )``                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Color<class_Color>`                    | :ref:`tint_progress<class_TextureProgress_property_tint_progress>`                     | ``Color( 1, 1, 1, 1 )``                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+
| :ref:`Color<class_Color>`                    | :ref:`tint_under<class_TextureProgress_property_tint_under>`                           | ``Color( 1, 1, 1, 1 )``                                               |
+----------------------------------------------+----------------------------------------------------------------------------------------+-----------------------------------------------------------------------+

方法
----

+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>` | :ref:`get_stretch_margin<class_TextureProgress_method_get_stretch_margin>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|                      |
+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                  | :ref:`set_stretch_margin<class_TextureProgress_method_set_stretch_margin>` **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`int<class_int>` value **)** |
+-----------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_TextureProgress_FillMode:

.. _class_TextureProgress_constant_FILL_LEFT_TO_RIGHT:

.. _class_TextureProgress_constant_FILL_RIGHT_TO_LEFT:

.. _class_TextureProgress_constant_FILL_TOP_TO_BOTTOM:

.. _class_TextureProgress_constant_FILL_BOTTOM_TO_TOP:

.. _class_TextureProgress_constant_FILL_CLOCKWISE:

.. _class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE:

.. _class_TextureProgress_constant_FILL_BILINEAR_LEFT_AND_RIGHT:

.. _class_TextureProgress_constant_FILL_BILINEAR_TOP_AND_BOTTOM:

.. _class_TextureProgress_constant_FILL_CLOCKWISE_AND_COUNTER_CLOCKWISE:

enum **FillMode**:

- **FILL_LEFT_TO_RIGHT** = **0** --- :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 从左到右填充。

- **FILL_RIGHT_TO_LEFT** = **1** --- :ref:`texture_progress<class_TextureProgress_property_texture_progress>` 从右到左填充。

- **FILL_TOP_TO_BOTTOM** = **2** --- :ref:`texture_progress<class_TextureProgress_property_texture_progress>` 从上到下填充。

- **FILL_BOTTOM_TO_TOP** = **3** --- :ref:`texture_progress<class_TextureProgress_property_texture_progress>` 自下而上填充。

- **FILL_CLOCKWISE** = **4** --- 将节点变成径向条形。\ :ref:`texture_progress<class_TextureProgress_property_texture_progress>` 顺时针填充。参阅\ :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`\ 、\ :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>`\ 和\ :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`\ 来控制条形填充的方式。

- **FILL_COUNTER_CLOCKWISE** = **5** --- 将节点变成径向条形。\ :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 逆时针填充。参阅\ :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`\ 、\ :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>`\ 和\ :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`\ 来控制条形填充的方式。

- **FILL_BILINEAR_LEFT_AND_RIGHT** = **6** --- :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 从中心开始填充，向左和向右扩展。

- **FILL_BILINEAR_TOP_AND_BOTTOM** = **7** --- :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 从中心开始填充，同时向顶部和底部扩展。

- **FILL_CLOCKWISE_AND_COUNTER_CLOCKWISE** = **8** --- 将节点变成径向条形。\ :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 从中心径向填充，顺时针和逆时针扩展。参阅\ :ref:`radial_center_offset<class_TextureProgress_property_radial_center_offset>`\ 、\ :ref:`radial_initial_angle<class_TextureProgress_property_radial_initial_angle>`\ 和\ :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`\ 来控制条形填充的方式。

属性说明
--------

.. _class_TextureProgress_property_fill_mode:

- :ref:`int<class_int>` **fill_mode**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_fill_mode(value) |
+-----------+----------------------+
| *Getter*  | get_fill_mode()      |
+-----------+----------------------+

填充方向。有关可能的值，参阅\ :ref:`FillMode<enum_TextureProgress_FillMode>`\ 。

----

.. _class_TextureProgress_property_nine_patch_stretch:

- :ref:`bool<class_bool>` **nine_patch_stretch**

+-----------+-------------------------------+
| *Default* | ``false``                     |
+-----------+-------------------------------+
| *Setter*  | set_nine_patch_stretch(value) |
+-----------+-------------------------------+
| *Getter*  | get_nine_patch_stretch()      |
+-----------+-------------------------------+

如果\ ``true``\ ，GaaeExplorer会像在\ :ref:`NinePatchRect<class_NinePatchRect>`\ 中那样处理条形纹理。使用\ ``stretch_margin_*``\ 属性，如\ :ref:`stretch_margin_bottom<class_TextureProgress_property_stretch_margin_bottom>`\ 来设置九宫格的3×3网格。当使用径向的\ :ref:`fill_mode<class_TextureProgress_property_fill_mode>`\ 时，这个设置将启用拉伸功能。

----

.. _class_TextureProgress_property_radial_center_offset:

- :ref:`Vector2<class_Vector2>` **radial_center_offset**

+-----------+---------------------------------+
| *Default* | ``Vector2( 0, 0 )``             |
+-----------+---------------------------------+
| *Setter*  | set_radial_center_offset(value) |
+-----------+---------------------------------+
| *Getter*  | get_radial_center_offset()      |
+-----------+---------------------------------+

如果\ :ref:`fill_mode<class_TextureProgress_property_fill_mode>`\ 是\ :ref:`FILL_CLOCKWISE<class_TextureProgress_constant_FILL_CLOCKWISE>`\ 或\ :ref:`FILL_COUNTER_CLOCKWISE<class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE>`\ ，则对\ :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 进行偏移。

----

.. _class_TextureProgress_property_radial_fill_degrees:

- :ref:`float<class_float>` **radial_fill_degrees**

+-----------+-------------------------+
| *Default* | ``360.0``               |
+-----------+-------------------------+
| *Setter*  | set_fill_degrees(value) |
+-----------+-------------------------+
| *Getter*  | get_fill_degrees()      |
+-----------+-------------------------+

如果\ :ref:`fill_mode<class_TextureProgress_property_fill_mode>`\ 是\ :ref:`FILL_CLOCKWISE<class_TextureProgress_constant_FILL_CLOCKWISE>`\ 或\ :ref:`FILL_COUNTER_CLOCKWISE<class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE>`\ ，则为\ :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 的填充上限。当节点的\ ``value``\ 等于其\ ``max_value``\ 时，纹理会填充到这个角度。

参阅\ :ref:`Range.value<class_Range_property_value>`, :ref:`Range.max_value<class_Range_property_max_value>`\ 。

----

.. _class_TextureProgress_property_radial_initial_angle:

- :ref:`float<class_float>` **radial_initial_angle**

+-----------+---------------------------------+
| *Default* | ``0.0``                         |
+-----------+---------------------------------+
| *Setter*  | set_radial_initial_angle(value) |
+-----------+---------------------------------+
| *Getter*  | get_radial_initial_angle()      |
+-----------+---------------------------------+

如果\ :ref:`fill_mode<class_TextureProgress_property_fill_mode>`\ 是\ :ref:`FILL_CLOCKWISE<class_TextureProgress_constant_FILL_CLOCKWISE>`\ 或\ :ref:`FILL_COUNTER_CLOCKWISE<class_TextureProgress_constant_FILL_COUNTER_CLOCKWISE>`\ ，\ :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 的填充起始角度。当节点的\ ``value``\ 等于其\ ``min_value``\ 时，纹理根本不会显示出来。当\ ``value``\ 增加时，纹理会被填满并趋向于\ :ref:`radial_fill_degrees<class_TextureProgress_property_radial_fill_degrees>`\ 。

----

.. _class_TextureProgress_property_stretch_margin_bottom:

- :ref:`int<class_int>` **stretch_margin_bottom**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

九宫格底行的高度。边距为16意味着九宫格的底角和侧面将有16像素的高度。你可以单独设置所有4个边距值，来创建具有非统一边框的面板。

----

.. _class_TextureProgress_property_stretch_margin_left:

- :ref:`int<class_int>` **stretch_margin_left**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

九宫格左列的宽度。

----

.. _class_TextureProgress_property_stretch_margin_right:

- :ref:`int<class_int>` **stretch_margin_right**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

九宫格右列的宽度。

----

.. _class_TextureProgress_property_stretch_margin_top:

- :ref:`int<class_int>` **stretch_margin_top**

+-----------+---------------------------+
| *Default* | ``0``                     |
+-----------+---------------------------+
| *Setter*  | set_stretch_margin(value) |
+-----------+---------------------------+
| *Getter*  | get_stretch_margin()      |
+-----------+---------------------------+

九宫格顶行的高度。

----

.. _class_TextureProgress_property_texture_over:

- :ref:`Texture<class_Texture>` **texture_over**

+----------+-------------------------+
| *Setter* | set_over_texture(value) |
+----------+-------------------------+
| *Getter* | get_over_texture()      |
+----------+-------------------------+

在进度条之上绘制的 :ref:`Texture<class_Texture>`\ 。用它来添加高亮，或者作为上层帧来隐藏部分 :ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 。

----

.. _class_TextureProgress_property_texture_progress:

- :ref:`Texture<class_Texture>` **texture_progress**

+----------+-----------------------------+
| *Setter* | set_progress_texture(value) |
+----------+-----------------------------+
| *Getter* | get_progress_texture()      |
+----------+-----------------------------+

基于节点的\ ``value``\ 和\ :ref:`fill_mode<class_TextureProgress_property_fill_mode>`\ 进行裁剪\ :ref:`Texture<class_Texture>`\ 。随着\ ``value``\ 的增加，纹理会被填满。当\ ``value``\ 达到\ ``max_value``\ 时，它完全显示。如果\ ``value``\ 等于\ ``min_value``\ ，它就完全不显示了。

\ ``value``\ 属性来自\ :ref:`Range<class_Range>`\ 。参阅\ :ref:`Range.value<class_Range_property_value>`, :ref:`Range.min_value<class_Range_property_min_value>`, :ref:`Range.max_value<class_Range_property_max_value>`\ 。

----

.. _class_TextureProgress_property_texture_progress_offset:

- :ref:`Vector2<class_Vector2>` **texture_progress_offset**

+-----------+------------------------------------+
| *Default* | ``Vector2( 0, 0 )``                |
+-----------+------------------------------------+
| *Setter*  | set_texture_progress_offset(value) |
+-----------+------------------------------------+
| *Getter*  | get_texture_progress_offset()      |
+-----------+------------------------------------+

:ref:`texture_progress<class_TextureProgress_property_texture_progress>`\ 的偏移量。对于带有花哨的边框的\ :ref:`texture_over<class_TextureProgress_property_texture_over>`\ 和\ :ref:`texture_under<class_TextureProgress_property_texture_under>`\ 很有用，可以避免进度纹理的边缘透明。

----

.. _class_TextureProgress_property_texture_under:

- :ref:`Texture<class_Texture>` **texture_under**

+----------+--------------------------+
| *Setter* | set_under_texture(value) |
+----------+--------------------------+
| *Getter* | get_under_texture()      |
+----------+--------------------------+

在进度条下面绘制的\ :ref:`Texture<class_Texture>`\ 。即背景。

----

.. _class_TextureProgress_property_tint_over:

- :ref:`Color<class_Color>` **tint_over**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_tint_over(value)    |
+-----------+-------------------------+
| *Getter*  | get_tint_over()         |
+-----------+-------------------------+

将条形的 ``texture_over`` 纹理的颜色相乘。其效果类似于 :ref:`CanvasItem.modulate<class_CanvasItem_property_modulate>` ，只是它只影响这个特定的纹理，而不是整个节点。

----

.. _class_TextureProgress_property_tint_progress:

- :ref:`Color<class_Color>` **tint_progress**

+-----------+--------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )``  |
+-----------+--------------------------+
| *Setter*  | set_tint_progress(value) |
+-----------+--------------------------+
| *Getter*  | get_tint_progress()      |
+-----------+--------------------------+

将条形的 ``texture_progress`` 纹理的颜色相乘。

----

.. _class_TextureProgress_property_tint_under:

- :ref:`Color<class_Color>` **tint_under**

+-----------+-------------------------+
| *Default* | ``Color( 1, 1, 1, 1 )`` |
+-----------+-------------------------+
| *Setter*  | set_tint_under(value)   |
+-----------+-------------------------+
| *Getter*  | get_tint_under()        |
+-----------+-------------------------+

将条形的 ``texture_under`` 纹理的颜色相乘。

方法说明
--------

.. _class_TextureProgress_method_get_stretch_margin:

- :ref:`int<class_int>` **get_stretch_margin** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin **)** |const|

----

.. _class_TextureProgress_method_set_stretch_margin:

- void **set_stretch_margin** **(** :ref:`Margin<enum_@GlobalScope_Margin>` margin, :ref:`int<class_int>` value **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
