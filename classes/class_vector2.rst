:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Vector2.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Vector2:

Vector2
=======

用于二维数学的向量。

描述
----

2 元素结构，可用于表示 2D 空间中的坐标或其他任何一对数字值。

\ **注意：**\ 在布尔语境中，如果 Vector2 等于 ``Vector2(0, 0)``\ ，它将评估为 ``false``\ 。否则，Vector2 将总是评估为 ``true``\ 。

教程
----

- :doc:`Math tutorial index <../tutorials/math/index>`

- :doc:`Vector math <../tutorials/math/vector_math>`

- :doc:`Advanced vector math <../tutorials/math/vectors_advanced>`

- `3Blue1Brown Essence of Linear Algebra <https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__

- `Matrix Transform Demo <https://godotengine.org/asset-library/asset/584>`__

- `All 2D Demos <https://github.com/godotengine/godot-demo-projects/tree/master/2d>`__

属性
----

+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`x<class_Vector2_property_x>` | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`y<class_Vector2_property_y>` | ``0.0`` |
+---------------------------+------------------------------------+---------+

方法
----

+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`Vector2<class_Vector2_method_Vector2>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**                                                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`abs<class_Vector2_method_abs>` **(** **)**                                                                                                                                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`angle<class_Vector2_method_angle>` **(** **)**                                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`angle_to<class_Vector2_method_angle_to>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`angle_to_point<class_Vector2_method_angle_to_point>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`aspect<class_Vector2_method_aspect>` **(** **)**                                                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`bounce<class_Vector2_method_bounce>` **(** :ref:`Vector2<class_Vector2>` n **)**                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`ceil<class_Vector2_method_ceil>` **(** **)**                                                                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`clamped<class_Vector2_method_clamped>` **(** :ref:`float<class_float>` length **)**                                                                                                                                 |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`cross<class_Vector2_method_cross>` **(** :ref:`Vector2<class_Vector2>` with **)**                                                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`cubic_interpolate<class_Vector2_method_cubic_interpolate>` **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight **)** |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`direction_to<class_Vector2_method_direction_to>` **(** :ref:`Vector2<class_Vector2>` b **)**                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`distance_squared_to<class_Vector2_method_distance_squared_to>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`distance_to<class_Vector2_method_distance_to>` **(** :ref:`Vector2<class_Vector2>` to **)**                                                                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`dot<class_Vector2_method_dot>` **(** :ref:`Vector2<class_Vector2>` with **)**                                                                                                                                       |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`floor<class_Vector2_method_floor>` **(** **)**                                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_equal_approx<class_Vector2_method_is_equal_approx>` **(** :ref:`Vector2<class_Vector2>` v **)**                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_normalized<class_Vector2_method_is_normalized>` **(** **)**                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`length<class_Vector2_method_length>` **(** **)**                                                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`length_squared<class_Vector2_method_length_squared>` **(** **)**                                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`limit_length<class_Vector2_method_limit_length>` **(** :ref:`float<class_float>` length=1.0 **)**                                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`linear_interpolate<class_Vector2_method_linear_interpolate>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**                                                                         |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`move_toward<class_Vector2_method_move_toward>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` delta **)**                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`normalized<class_Vector2_method_normalized>` **(** **)**                                                                                                                                                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`posmod<class_Vector2_method_posmod>` **(** :ref:`float<class_float>` mod **)**                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`posmodv<class_Vector2_method_posmodv>` **(** :ref:`Vector2<class_Vector2>` modv **)**                                                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`project<class_Vector2_method_project>` **(** :ref:`Vector2<class_Vector2>` b **)**                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`reflect<class_Vector2_method_reflect>` **(** :ref:`Vector2<class_Vector2>` n **)**                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`rotated<class_Vector2_method_rotated>` **(** :ref:`float<class_float>` phi **)**                                                                                                                                    |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`round<class_Vector2_method_round>` **(** **)**                                                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`sign<class_Vector2_method_sign>` **(** **)**                                                                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`slerp<class_Vector2_method_slerp>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**                                                                                                   |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`slide<class_Vector2_method_slide>` **(** :ref:`Vector2<class_Vector2>` n **)**                                                                                                                                      |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`snapped<class_Vector2_method_snapped>` **(** :ref:`Vector2<class_Vector2>` by **)**                                                                                                                                 |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>` | :ref:`tangent<class_Vector2_method_tangent>` **(** **)**                                                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

常量
----

.. _class_Vector2_constant_AXIS_X:

.. _class_Vector2_constant_AXIS_Y:

.. _class_Vector2_constant_ZERO:

.. _class_Vector2_constant_ONE:

.. _class_Vector2_constant_INF:

.. _class_Vector2_constant_LEFT:

.. _class_Vector2_constant_RIGHT:

.. _class_Vector2_constant_UP:

.. _class_Vector2_constant_DOWN:

- **AXIS_X** = **0** --- X 轴的枚举值。

- **AXIS_Y** = **1** --- Y 轴的枚举值。

- **ZERO** = **Vector2( 0, 0 )** --- 零向量，所有分量都设置为 ``0`` 的向量。

- **ONE** = **Vector2( 1, 1 )** --- 一向量，所有分量都设置为 ``1`` 的向量。

- **INF** = **Vector2( inf, inf )** --- 无穷大向量，所有分量都设置为 :ref:`@GDScript.INF<class_@GDScript_constant_INF>` 的向量。

- **LEFT** = **Vector2( -1, 0 )** --- 左单位向量。代表左的方向。

- **RIGHT** = **Vector2( 1, 0 )** --- 右单位向量。代表右的方向。

- **UP** = **Vector2( 0, -1 )** --- 上单位向量。Y 在 2D 中是向下的，所以这个向量指向 -Y。

- **DOWN** = **Vector2( 0, 1 )** --- 下单位向量。在 2D 中 Y 是向下的，所以这个向量指向 +Y。

属性说明
--------

.. _class_Vector2_property_x:

- :ref:`float<class_float>` **x**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

向量的 X 分量。也可以通过使用索引位置 ``[0]`` 访问。

----

.. _class_Vector2_property_y:

- :ref:`float<class_float>` **y**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

向量的 Y 分量。也可以通过使用索引位置 ``[1]`` 访问。

方法说明
--------

.. _class_Vector2_method_Vector2:

- :ref:`Vector2<class_Vector2>` **Vector2** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**

从给定的 ``x`` 和 ``y`` 构建新的 Vector2。

----

.. _class_Vector2_method_abs:

- :ref:`Vector2<class_Vector2>` **abs** **(** **)**

返回一个新的向量，其所有分量都是绝对值，即正值。

----

.. _class_Vector2_method_angle:

- :ref:`float<class_float>` **angle** **(** **)**

返回这个向量相对于正X轴的角度，或\ ``(1, 0)``\ 向量，单位为弧度。

例如，\ ``Vector2.RIGHT.angle()``\ 将返回0，\ ``Vector2.DOWN.angle()``\ 将返回\ ``PI / 2``\ （四分之一转，或90度），\ ``Vector2(1, -1).angle()``\ 将返回\ ``-PI / 4`` （负八分之一转，或-45度）。

\ `返回角度的说明。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle.png>`__\ 

相当于以向量的\ :ref:`y<class_Vector2_property_y>` 和 :ref:`x<class_Vector2_property_x>`\ 为参数调用\ :ref:`@GDScript.atan2<class_@GDScript_method_atan2>`\ 时的结果。\ ``atan2(y, x)``\ 。

----

.. _class_Vector2_method_angle_to:

- :ref:`float<class_float>` **angle_to** **(** :ref:`Vector2<class_Vector2>` to **)**

返回与给定向量的角度，单位为弧度。

\ `返回角度的说明。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to.png>`__

----

.. _class_Vector2_method_angle_to_point:

- :ref:`float<class_float>` **angle_to_point** **(** :ref:`Vector2<class_Vector2>` to **)**

返回连接两点的直线与X轴的夹角，单位为弧度。

\ `返回角度的图示。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to_point.png>`__

----

.. _class_Vector2_method_aspect:

- :ref:`float<class_float>` **aspect** **(** **)**

返回这个向量的长宽比，即\ :ref:`x<class_Vector2_property_x>` 与\ :ref:`y<class_Vector2_property_y>`\ 的比例。

----

.. _class_Vector2_method_bounce:

- :ref:`Vector2<class_Vector2>` **bounce** **(** :ref:`Vector2<class_Vector2>` n **)**

返回从由给定法线定义的平面上“反弹”的向量。

----

.. _class_Vector2_method_ceil:

- :ref:`Vector2<class_Vector2>` **ceil** **(** **)**

返回所有分量四舍五入后的向量，朝正无穷大。

----

.. _class_Vector2_method_clamped:

- :ref:`Vector2<class_Vector2>` **clamped** **(** :ref:`float<class_float>` length **)**

Deprecated, please use :ref:`limit_length<class_Vector2_method_limit_length>` instead.

Returns the vector with a maximum length by limiting its length to ``length``.

----

.. _class_Vector2_method_cross:

- :ref:`float<class_float>` **cross** **(** :ref:`Vector2<class_Vector2>` with **)**

返回此向量与\ ``with``\ 的叉积。

----

.. _class_Vector2_method_cubic_interpolate:

- :ref:`Vector2<class_Vector2>` **cubic_interpolate** **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight **)**

用\ ``pre_a``\ 和\ ``post_b``\ 作为句柄，在这个向量和\ ``b``\ 之间进行三次插值，并在\ ``weight``\ 位置返回结果。\ ``weight``\ 的范围是0.0到1.0，表示插值的量。

----

.. _class_Vector2_method_direction_to:

- :ref:`Vector2<class_Vector2>` **direction_to** **(** :ref:`Vector2<class_Vector2>` b **)**

返回从这个向量指向\ ``b``\ 的归一化向量。这相当于使用\ ``(b-a).normalized()``\ 。

----

.. _class_Vector2_method_distance_squared_to:

- :ref:`float<class_float>` **distance_squared_to** **(** :ref:`Vector2<class_Vector2>` to **)**

返回这个向量与\ ``b``\ 之间的平方距离。

这个方法比\ :ref:`distance_to<class_Vector2_method_distance_to>`\ 运行得更快，所以如果你需要比较向量或需要一些公式的平方距离，则更喜欢它。

----

.. _class_Vector2_method_distance_to:

- :ref:`float<class_float>` **distance_to** **(** :ref:`Vector2<class_Vector2>` to **)**

返回此向量与 ``to`` 之间的距离。

----

.. _class_Vector2_method_dot:

- :ref:`float<class_float>` **dot** **(** :ref:`Vector2<class_Vector2>` with **)**

返回此向量与\ ``with``\ 的点积。这可以用来比较两个向量之间的角度。例如，这可以用来确定一个敌人是否正朝向玩家。

对于直角90度，点积将是\ ``0``\ ，对于窄于90度的角度，点积大于0，对于宽于90度的角度，点积小于0。

当使用归一化单位向量时，当向量朝向相反方向时，结果总是在\ ``-1.0``\ （180度角）和\ ``1.0``\ （0度角）之间，当向量对齐。

\ **注意：**\ ``a.dot(b)``\ 等同于\ ``b.dot(a)``\ 。

----

.. _class_Vector2_method_floor:

- :ref:`Vector2<class_Vector2>` **floor** **(** **)**

返回所有分量四舍五入后的向量，朝负无穷大。

----

.. _class_Vector2_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Vector2<class_Vector2>` v **)**

通过对每个分量运行\ :ref:`@GDScript.is_equal_approx<class_@GDScript_method_is_equal_approx>`\ ，如果这个向量和\ ``v``\ 近似相等，返回\ ``true``\ 。

----

.. _class_Vector2_method_is_normalized:

- :ref:`bool<class_bool>` **is_normalized** **(** **)**

如果向量被归一化，返回\ ``true``\ ，否则返回\ ``false``\ 。

----

.. _class_Vector2_method_length:

- :ref:`float<class_float>` **length** **(** **)**

返回这个向量的长度，即大小。

----

.. _class_Vector2_method_length_squared:

- :ref:`float<class_float>` **length_squared** **(** **)**

返回这个向量的平方长度，即平方大小。

这个方法比\ :ref:`length<class_Vector2_method_length>`\ 运行得更快，所以如果你需要比较向量或需要一些公式的平方距离时，更喜欢用它。

----

.. _class_Vector2_method_limit_length:

- :ref:`Vector2<class_Vector2>` **limit_length** **(** :ref:`float<class_float>` length=1.0 **)**

通过限制其长度为\ ``length``\ ，返回具有最大长度的向量。

----

.. _class_Vector2_method_linear_interpolate:

- :ref:`Vector2<class_Vector2>` **linear_interpolate** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**

返回这个向量与\ ``to``\ 之间线性插值的结果，插值量为\ ``weight``\ 。\ ``weight``\ 的范围是0.0到1.0，表示插值的数量。

----

.. _class_Vector2_method_move_toward:

- :ref:`Vector2<class_Vector2>` **move_toward** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` delta **)**

向\ ``to``\ 移动固定的\ ``delta``\ 量。

----

.. _class_Vector2_method_normalized:

- :ref:`Vector2<class_Vector2>` **normalized** **(** **)**

返回缩放为单位长度的向量。相当于\ ``v/v.length()``\ 。

----

.. _class_Vector2_method_posmod:

- :ref:`Vector2<class_Vector2>` **posmod** **(** :ref:`float<class_float>` mod **)**

返回一个由这个向量分量的\ :ref:`@GDScript.fposmod<class_@GDScript_method_fposmod>`\ 和\ ``mod``\ 组成的向量。

----

.. _class_Vector2_method_posmodv:

- :ref:`Vector2<class_Vector2>` **posmodv** **(** :ref:`Vector2<class_Vector2>` modv **)**

返回一个由这个向量的\ ``modv``\ 分量和\ :ref:`@GDScript.fposmod<class_@GDScript_method_fposmod>`\ 分量组成的向量。

----

.. _class_Vector2_method_project:

- :ref:`Vector2<class_Vector2>` **project** **(** :ref:`Vector2<class_Vector2>` b **)**

返回投射到向量\ ``b``\ 的向量。

----

.. _class_Vector2_method_reflect:

- :ref:`Vector2<class_Vector2>` **reflect** **(** :ref:`Vector2<class_Vector2>` n **)**

返回从给定法线定义的平面反射的向量。

----

.. _class_Vector2_method_rotated:

- :ref:`Vector2<class_Vector2>` **rotated** **(** :ref:`float<class_float>` phi **)**

返回旋转了\ ``phi``\ 弧度的向量。参阅\ :ref:`@GDScript.deg2rad<class_@GDScript_method_deg2rad>`\ 。

----

.. _class_Vector2_method_round:

- :ref:`Vector2<class_Vector2>` **round** **(** **)**

返回所有分量都被四舍五入为最接近的整数的向量，中间情况下四舍五入为零。

----

.. _class_Vector2_method_sign:

- :ref:`Vector2<class_Vector2>` **sign** **(** **)**

根据分量的符号，返回每个分量设置为 1 或负1的向量。如果分量为零，则返回正1。

----

.. _class_Vector2_method_slerp:

- :ref:`Vector2<class_Vector2>` **slerp** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)**

返回这个向量与\ ``to``\ 之间的球面线性插值的结果，按\ ``weight``\ 的数量。\ ``weight``\ 的范围是0.0到1.0，表示插值的数量。

\ **注意：**\ 两个向量都必须被归一化。

----

.. _class_Vector2_method_slide:

- :ref:`Vector2<class_Vector2>` **slide** **(** :ref:`Vector2<class_Vector2>` n **)**

返回沿着由给定法线定义的平面滑动的向量。

----

.. _class_Vector2_method_snapped:

- :ref:`Vector2<class_Vector2>` **snapped** **(** :ref:`Vector2<class_Vector2>` by **)**

返回这个向量，每个分量都捕捉到\ ``step``\ 的最近倍数。这也可以用来四舍五入到任意数量的小数。

----

.. _class_Vector2_method_tangent:

- :ref:`Vector2<class_Vector2>` **tangent** **(** **)**

返回一个与原来相比逆时针旋转90度的垂直向量，长度不变。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
