:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the WebSocketPeer.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_WebSocketPeer:

WebSocketPeer
=============

**Inherits:** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

表示特定WebSocket连接的类。

描述
----

该类表示特定的 WebSocket 连接，你可以用它执行底层操作。

可以选择以二进制或文本模式写入套接字，也可以识别另一个对等体用于写入的模式。

方法
----

+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| void                                           | :ref:`close<class_WebSocketPeer_method_close>` **(** :ref:`int<class_int>` code=1000, :ref:`String<class_String>` reason="" **)** |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`String<class_String>`                    | :ref:`get_connected_host<class_WebSocketPeer_method_get_connected_host>` **(** **)** |const|                                      |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                          | :ref:`get_connected_port<class_WebSocketPeer_method_get_connected_port>` **(** **)** |const|                                      |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                          | :ref:`get_current_outbound_buffered_amount<class_WebSocketPeer_method_get_current_outbound_buffered_amount>` **(** **)** |const|  |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`WriteMode<enum_WebSocketPeer_WriteMode>` | :ref:`get_write_mode<class_WebSocketPeer_method_get_write_mode>` **(** **)** |const|                                              |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                        | :ref:`is_connected_to_host<class_WebSocketPeer_method_is_connected_to_host>` **(** **)** |const|                                  |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| void                                           | :ref:`set_no_delay<class_WebSocketPeer_method_set_no_delay>` **(** :ref:`bool<class_bool>` enabled **)**                          |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| void                                           | :ref:`set_write_mode<class_WebSocketPeer_method_set_write_mode>` **(** :ref:`WriteMode<enum_WebSocketPeer_WriteMode>` mode **)**  |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                        | :ref:`was_string_packet<class_WebSocketPeer_method_was_string_packet>` **(** **)** |const|                                        |
+------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------+

枚举
----

.. _enum_WebSocketPeer_WriteMode:

.. _class_WebSocketPeer_constant_WRITE_MODE_TEXT:

.. _class_WebSocketPeer_constant_WRITE_MODE_BINARY:

enum **WriteMode**:

- **WRITE_MODE_TEXT** = **0** --- 指定WebSockets消息应作为文本有效载荷传输（只允许有效的UTF-8）。

- **WRITE_MODE_BINARY** = **1** --- 指定WebSockets消息应以二进制有效载荷的形式传输（允许任何字节组合）。

方法说明
--------

.. _class_WebSocketPeer_method_close:

- void **close** **(** :ref:`int<class_int>` code=1000, :ref:`String<class_String>` reason="" **)**

关闭此WebSocket连接。\ ``code``\ 是关闭的状态代码，有效状态代码的列表参阅RFC 6455第7.4节。\ ``reason`` 是关闭连接的只读原因（可以是任何小于123字节的UTF-8字符串）。

\ **注意：**\ 为了实现彻底的关闭，你需要继续轮询，直到收到\ :ref:`WebSocketClient.connection_closed<class_WebSocketClient_signal_connection_closed>`\ 或\ :ref:`WebSocketServer.client_disconnected<class_WebSocketServer_signal_client_disconnected>`\ 。

\ **注意：** HTML5导出可能不支持所有状态代码。请参考特定浏览器的文档以了解更多细节。

----

.. _class_WebSocketPeer_method_get_connected_host:

- :ref:`String<class_String>` **get_connected_host** **(** **)** |const|

返回连接的对等体的IP地址。

\ **注意：** 在HTML5导出中不可用。

----

.. _class_WebSocketPeer_method_get_connected_port:

- :ref:`int<class_int>` **get_connected_port** **(** **)** |const|

返回所连接对等体的远程端口。

\ **注意：** 在HTML5导出中不可用。

----

.. _class_WebSocketPeer_method_get_current_outbound_buffered_amount:

- :ref:`int<class_int>` **get_current_outbound_buffered_amount** **(** **)** |const|

返回输出的websocket缓冲区中的当前数据量。\ **注意：** HTML5导出使用WebSocket.bufferedAmount，而其他平台使用内部缓冲区。

----

.. _class_WebSocketPeer_method_get_write_mode:

- :ref:`WriteMode<enum_WebSocketPeer_WriteMode>` **get_write_mode** **(** **)** |const|

获取当前选择的写入模式。参阅\ :ref:`WriteMode<enum_WebSocketPeer_WriteMode>`\ 。

----

.. _class_WebSocketPeer_method_is_connected_to_host:

- :ref:`bool<class_bool>` **is_connected_to_host** **(** **)** |const|

如果该对等体当前已连接，则返回\ ``true``\ 。

----

.. _class_WebSocketPeer_method_set_no_delay:

- void **set_no_delay** **(** :ref:`bool<class_bool>` enabled **)**

在底层的TCP套接字上禁用Nagle算法（默认）。参阅\ :ref:`StreamPeerTCP.set_no_delay<class_StreamPeerTCP_method_set_no_delay>`\ 以了解更多信息。

\ **注意：** 在HTML5导出中不可用。

----

.. _class_WebSocketPeer_method_set_write_mode:

- void **set_write_mode** **(** :ref:`WriteMode<enum_WebSocketPeer_WriteMode>` mode **)**

将套接字设置为使用给定的\ :ref:`WriteMode<enum_WebSocketPeer_WriteMode>`\ 。

----

.. _class_WebSocketPeer_method_was_string_packet:

- :ref:`bool<class_bool>` **was_string_packet** **(** **)** |const|

如果最后收到的数据包是作为文本有效载荷发送的，返回\ ``true``\ 。参阅\ :ref:`WriteMode<enum_WebSocketPeer_WriteMode>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
