:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the Semaphore.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Semaphore:

Semaphore
=========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

同步信号量。

描述
----

可用于同步多个 :ref:`Thread<class_Thread>` 的同步信号量。创建时初始化为零。小心避免死锁。对于二进制版本，请参阅 :ref:`Mutex<class_Mutex>`\ 。

教程
----

- :doc:`../tutorials/performance/threads/using_multiple_threads`

方法
----

+---------------------------------------+------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`post<class_Semaphore_method_post>` **(** **)** |
+---------------------------------------+------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>` | :ref:`wait<class_Semaphore_method_wait>` **(** **)** |
+---------------------------------------+------------------------------------------------------+

方法说明
--------

.. _class_Semaphore_method_post:

- :ref:`Error<enum_@GlobalScope_Error>` **post** **(** **)**

试图锁定这个\ :ref:`Mutex<class_Mutex>`\ ，但并不阻塞。成功时返回\ :ref:`@GlobalScope.OK<class_@GlobalScope_constant_OK>`\ ，否则返回\ :ref:`@GlobalScope.ERR_BUSY<class_@GlobalScope_constant_ERR_BUSY>`\ 。

----

.. _class_Semaphore_method_wait:

- :ref:`Error<enum_@GlobalScope_Error>` **wait** **(** **)**

试图锁定这个\ :ref:`Mutex<class_Mutex>`\ ，但并不阻塞。成功时返回\ :ref:`@GlobalScope.OK<class_@GlobalScope_constant_OK>`\ ，否则返回\ :ref:`@GlobalScope.ERR_BUSY<class_@GlobalScope_constant_ERR_BUSY>`\ 。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
