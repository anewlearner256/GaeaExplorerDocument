:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the BackBufferCopy.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_BackBufferCopy:

BackBufferCopy
==============

**Inherits:** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

将屏幕的某个区域（或整个屏幕）复制到缓冲区，以便可以通过\ ``texture（SCREEN_TEXTURE，...）``\ 函数在着色器脚本中对其进行访问。

描述
----

用于对当前屏幕显示进行后台缓冲的节点。 BackBufferCopy 节点中定义的区域与其覆盖屏幕的内容一起缓冲，或者根据拷贝模式设置的整个屏幕进行缓冲。在着色器脚本中使用 ``texture(SCREEN_TEXTURE, ...)`` 函数来访问缓冲区。

\ **注意：** 由于该节点继承自 :ref:`Node2D<class_Node2D>`\ ，而非 :ref:`Control<class_Control>`\ ，锚点和边距将不会应用于从 :ref:`Control<class_Control>` 派生的子节点。这在调整窗口大小时可能会出现问题。为避免这种情况，请将 :ref:`Control<class_Control>` 派生节点作为 *同级* 添加到 BackBufferCopy 节点，而不是将它们添加为子节点。

属性
----

+-----------------------------------------------+-----------------------------------------------------------+-----------------------------------+
| :ref:`CopyMode<enum_BackBufferCopy_CopyMode>` | :ref:`copy_mode<class_BackBufferCopy_property_copy_mode>` | ``1``                             |
+-----------------------------------------------+-----------------------------------------------------------+-----------------------------------+
| :ref:`Rect2<class_Rect2>`                     | :ref:`rect<class_BackBufferCopy_property_rect>`           | ``Rect2( -100, -100, 200, 200 )`` |
+-----------------------------------------------+-----------------------------------------------------------+-----------------------------------+

枚举
----

.. _enum_BackBufferCopy_CopyMode:

.. _class_BackBufferCopy_constant_COPY_MODE_DISABLED:

.. _class_BackBufferCopy_constant_COPY_MODE_RECT:

.. _class_BackBufferCopy_constant_COPY_MODE_VIEWPORT:

enum **CopyMode**:

- **COPY_MODE_DISABLED** = **0** --- 禁用缓冲模式。这意味着 BackBufferCopy 节点将直接使用它所覆盖的屏幕部分。

- **COPY_MODE_RECT** = **1** --- BackBufferCopy 缓冲一个矩形区域。

- **COPY_MODE_VIEWPORT** = **2** --- BackBufferCopy可以缓冲整个屏幕。

属性说明
--------

.. _class_BackBufferCopy_property_copy_mode:

- :ref:`CopyMode<enum_BackBufferCopy_CopyMode>` **copy_mode**

+-----------+----------------------+
| *Default* | ``1``                |
+-----------+----------------------+
| *Setter*  | set_copy_mode(value) |
+-----------+----------------------+
| *Getter*  | get_copy_mode()      |
+-----------+----------------------+

缓冲区模式。参阅 :ref:`CopyMode<enum_BackBufferCopy_CopyMode>` 常量。

----

.. _class_BackBufferCopy_property_rect:

- :ref:`Rect2<class_Rect2>` **rect**

+-----------+-----------------------------------+
| *Default* | ``Rect2( -100, -100, 200, 200 )`` |
+-----------+-----------------------------------+
| *Setter*  | set_rect(value)                   |
+-----------+-----------------------------------+
| *Getter*  | get_rect()                        |
+-----------+-----------------------------------+

BackBufferCopy 覆盖的区域。只有当 :ref:`copy_mode<class_BackBufferCopy_property_copy_mode>` 是 :ref:`COPY_MODE_RECT<class_BackBufferCopy_constant_COPY_MODE_RECT>` 时才使用。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
