:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in GaaeExplorer's source tree.
.. DO NOT EDIT THIS FILE, but the TCP_Server.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_TCP_Server:

TCP_Server
==========

**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`

TCP服务器。

描述
----

一个TCP服务器。在一个端口上监听连接，当它得到一个传入的连接时返回一个\ :ref:`StreamPeerTCP<class_StreamPeerTCP>`\ 。

方法
----

+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                   | :ref:`is_connection_available<class_TCP_Server_method_is_connection_available>` **(** **)** |const|                                |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                   | :ref:`is_listening<class_TCP_Server_method_is_listening>` **(** **)** |const|                                                      |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Error<enum_@GlobalScope_Error>`     | :ref:`listen<class_TCP_Server_method_listen>` **(** :ref:`int<class_int>` port, :ref:`String<class_String>` bind_address="*" **)** |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| void                                      | :ref:`stop<class_TCP_Server_method_stop>` **(** **)**                                                                              |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`StreamPeerTCP<class_StreamPeerTCP>` | :ref:`take_connection<class_TCP_Server_method_take_connection>` **(** **)**                                                        |
+-------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------+

方法说明
--------

.. _class_TCP_Server_method_is_connection_available:

- :ref:`bool<class_bool>` **is_connection_available** **(** **)** |const|

如果有一个连接可用，返回\ ``true``\ 。

----

.. _class_TCP_Server_method_is_listening:

- :ref:`bool<class_bool>` **is_listening** **(** **)** |const|

如果服务器当前正在侦听连接，则返回 ``true``\ 。

----

.. _class_TCP_Server_method_listen:

- :ref:`Error<enum_@GlobalScope_Error>` **listen** **(** :ref:`int<class_int>` port, :ref:`String<class_String>` bind_address="*" **)**

在\ ``port``\ 上监听与\ ``bind_address``\ 绑定的地址。

如果\ ``bind_address``\ 被设置为\ ``"*"``\ （默认），服务器将监听所有可用地址（包括IPv4和IPv6）。

如果\ ``bind_address``\ 被设置为\ ``"0.0.0.0"``\ （用于IPv4）或\ ``":"``\ （用于IPv6），服务器将监听所有符合该IP类型的可用地址。

如果\ ``bind_address``\ 被设置为任何有效的地址（例如\ ``"192.168.1.101"``\ ，\ ``":1"``\ ，等等），服务器将只在具有该地址的接口上监听（如果不存在具有该地址的接口则失败）。

----

.. _class_TCP_Server_method_stop:

- void **stop** **(** **)**

停止监听。

----

.. _class_TCP_Server_method_take_connection:

- :ref:`StreamPeerTCP<class_StreamPeerTCP>` **take_connection** **(** **)**

如果连接可用，则返回带有该连接的 StreamPeerTCP。

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
