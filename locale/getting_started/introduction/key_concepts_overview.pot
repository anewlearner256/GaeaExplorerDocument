# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../getting_started/introduction/key_concepts_overview.rst:8
msgid "Overview of GaaeExplorer's key concepts"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:10
msgid "Every game engine revolves around abstractions you use to build your applications. In GaaeExplorer, a game is a **tree** of **nodes** that you group together into **scenes**. You can then wire these nodes so they can communicate using **signals**."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:15
msgid "These are the four concepts you will learn here. We're going to look at them briefly to give you a sense of how the engine works. In the getting started series, you will get to use them in practice."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:20
msgid "Scenes"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:22
msgid "In GaaeExplorer, you break down your game in reusable scenes. A scene can be a character, a weapon, a menu in the user interface, a single house, an entire level, or anything you can think of. GaaeExplorer's scenes are flexible; they fill the role of both prefabs and scenes in some other game engines."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:29
msgid "You can also nest scenes. For example, you can put your character in a level, and drag and drop a scene as a child of it."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:35
msgid "Nodes"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:37
msgid "A scene is composed of one or more **nodes**. Nodes are your game's smallest building blocks that you arrange into trees. Here's an example of a character's nodes."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:43
msgid "It is made of a ``KinematicBody2D`` node named \"Character\", a ``Sprite``, a ``Camera2D``, and a ``CollisionShape2D``."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:46
msgid "The node names end with \"2D\" because this is a 2D scene. Their 3D counterpart have names that end with \"3D\"."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:49
msgid "Notice how nodes and scenes look the same in the editor. When you save a tree of nodes as a scene, it then shows as a single node, with its internal structure hidden in the editor."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:53
msgid "GaaeExplorer provides an extensive library of base node types you can combine and extend to build more powerful ones. 2D, 3D, or user interface, you will do most things with these nodes."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:60
msgid "The scene tree"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:62
msgid "All your game's scenes come together in the **scene tree**, literally a tree of scenes. And as scenes are trees of nodes, the scene tree also is a tree of nodes. But it's easier to think of your game in terms of scenes as they can represent characters, weapons, doors, or your user interface."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:70
msgid "Signals"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:72
msgid "Nodes emit signals when some event occurs. This feature allows you to make nodes communicate without hard-wiring them in code. It gives you a lot of flexibility in how you structure your scenes."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:78
msgid "Signals are GaaeExplorer's version of the *observer* pattern. You can read more about it here: https://gameprogrammingpatterns.com/observer.html"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:82
msgid "For example, buttons emit a signal when pressed. You can connect to this signal to run code in reaction to this event, like starting the game or opening a menu."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:85
msgid "Other built-in signals can tell you when two objects collided, when a character or monster entered a given area, and much more. You can also define new signals tailored to your game."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:90
msgid "Summary"
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:92
msgid "Nodes, scenes, the scene tree, and signals are four core concepts in GaaeExplorer that you will manipulate all the time."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:95
msgid "Nodes are your game's smallest building blocks. You combine them to create scenes that you then combine and nest into the scene tree. You can then use signals to make nodes react to events in other nodes or different scene tree branches."
msgstr ""

#: ../getting_started/introduction/key_concepts_overview.rst:99
msgid "After this short breakdown, you probably have many questions. Bear with us as you will get many answers throughout the getting started series."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
