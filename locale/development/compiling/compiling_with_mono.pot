# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../development/compiling/compiling_with_mono.rst:4
msgid "Compiling with Mono"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:9
msgid "Requirements"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:11
msgid "Mono 6.12.0 or greater"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:12
msgid "MSBuild"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:13
msgid "NuGet"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:14
msgid "**On Linux/macOS only:** pkg-config"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:16
msgid "You may need to import necessary certificates for NuGet to perform HTTPS requests."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:19
msgid "The recommended method is to use **curl**'s CA (Certificate Authorities) certificate bundle."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:21
msgid "Run the following commands to download and import it. On Windows, you can run it from the Mono command line prompt (or the regular prompt if you added Mono's ``bin`` directory to your ``PATH`` environment variable)::"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:29
msgid "Alternatively, you can use the following command, though it's deprecated and may not work correctly::"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:34
msgid "Environment variables"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:36
msgid "By default, SCons will try to find Mono in the Windows Registry on Windows or via ``pkg-config`` on other platforms. You can specify a different installation directory by passing the ``mono_prefix`` command-line option to SCons; e.g. ``scons [...] mono_prefix=%ProgramFiles%/Mono``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:41
msgid "This is the directory that contains the subdirectories ``include`` and ``lib``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:44
msgid "Enable the Mono module"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:46
msgid "By default, the Mono module is disabled when building. To enable it, add the option ``module_mono_enabled=yes`` to the SCons command line."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:50
msgid "Generate the glue"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:52
msgid "Glue sources are the wrapper functions that will be called by managed methods. These source files must be generated before building your final binaries. In order to generate them, first, you must build a temporary GaaeExplorer binary with the options ``tools=yes`` and ``mono_glue=no``::"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:59
msgid "After the build finishes, you need to run the compiled executable with the parameter ``--generate-mono-glue`` followed by the path to an output directory. This path must be ``modules/mono/glue`` in the GaaeExplorer directory::"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:65
msgid "This command will tell GaaeExplorer to generate the file ``modules/mono/glue/mono_glue.gen.cpp``, the C# solution for the GaaeExplorer API at ``modules/mono/glue/GaaeExplorerSharp/GaaeExplorerSharp/Generated``, and the C# solution for the editor tools at ``modules/mono/glue/GaaeExplorerSharp/GaaeExplorerSharpEditor/Generated``. Once these files are generated, you can build GaaeExplorer for all the desired targets without having to repeat this process."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:71
msgid "``<godot_binary>`` refers to the tools binary you compiled above with the Mono module enabled. Its exact name will differ based on your system and configuration, but should be of the form ``bin/godot.<platform>.tools.<bits>.mono``, e.g. ``bin/godot.x11.tools.64.mono`` or ``bin/godot.windows.tools.64.mono.exe``. Be especially aware of the **.mono** suffix! If you've previously compiled GaaeExplorer without Mono support, you might have similarly named binaries without this suffix. These binaries can't be used to generate the Mono glue."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:81
msgid "Notes"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:83
msgid "**Do not build your final binaries with** ``mono_glue=no``. This disables C# scripting. This option must be used only for the temporary binary that will generate the glue. GaaeExplorer will print a warning at startup if it was built without the glue sources."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:87
msgid "The glue sources must be regenerated every time the ClassDB-registered API changes. That is, for example, when a new method is registered to the scripting API or one of the parameters of such a method changes. GaaeExplorer will print an error at startup if there is an API mismatch between ClassDB and the glue sources."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:95
msgid "Rebuild with Mono glue"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:97
msgid "Once you have generated the Mono glue, you can build the final binary with ``mono_glue=yes``. This is the default value for ``mono_glue``, so you can also omit it. To build a Mono-enabled editor::"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:103
msgid "And Mono-enabled export templates::"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:107
msgid "If everything went well, apart from the normal output, SCons should have created the following files in the ``bin`` directory:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:110
msgid "If you're not linking the Mono runtime statically, the build script will place the Mono runtime shared library (``monosgen-2.0``) next to the GaaeExplorer binary in the output directory. Make sure to include this library when distributing GaaeExplorer. When targeting Android, no extra steps are required as this library is automatically copied to ``#platform/android/java/libs`` and Gradle takes care of the rest."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:116
msgid "Unlike \"classical\" GaaeExplorer builds, when building with the Mono module enabled (and depending on the target platform), a data directory may be created both for the editor and for export templates. This directory is important for proper functioning and must be distributed together with GaaeExplorer. More details about this directory in :ref:`Data directory<compiling_with_mono_data_directory>`."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:124
msgid "Examples"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:127
msgid "Example (Windows)"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:144
msgid "Example (X11)"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:163
msgid "Data directory"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:165
msgid "The data directory is a dependency for GaaeExplorer binaries built with the Mono module enabled. It contains important files for the correct functioning of GaaeExplorer. It must be distributed together with the GaaeExplorer executable."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:169
msgid "The information below doesn't apply for Android, iOS and WASM, as there is no data directory for these platforms."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:173
msgid "Export templates"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:175
msgid "The name of the data directory for an export template differs based on the configuration it was built with. The format is ``data.mono.<platform>.<bits>.<target>``, e.g. ``data.mono.x11.32.release_debug`` or ``data.mono.windows.64.release``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:180
msgid "This directory must be placed with its original name next to the GaaeExplorer export templates. When exporting a project, GaaeExplorer will also copy this directory with the game executable but the name will be changed to ``data_<APPNAME>``, where ``<APPNAME>`` is the application name as specified in the project setting ``application/config/name``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:186
msgid "In the case of macOS, where the export template is compressed as a ZIP archive, the contents of the data directory can be placed in the following locations inside the ZIP archive:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:191
#: ../development/compiling/compiling_with_mono.rst:213
msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/lib``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:191
msgid "``/osx_template.app/Contents/Frameworks/GaaeExplorerSharp/Mono/lib``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:193
#: ../development/compiling/compiling_with_mono.rst:215
msgid "``bin/data.mono.<platform>.<bits>.<target>/Mono/etc``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:193
msgid "``/osx_template.app/Contents/Resources/GaaeExplorerSharp/Mono/etc``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:197
msgid "Editor"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:199
msgid "The name of the data directory for the GaaeExplorer editor will always be ``GaaeExplorerSharp``. The contents of this directory are the following:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:202
msgid "``Api``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:203
msgid "``Mono`` (optional)"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:204
msgid "``Tools``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:206
msgid "The ``Api`` subdirectory contains the GaaeExplorer API assemblies. On macOS, if the GaaeExplorer editor is distributed as a bundle, the contents of the data directory may be placed in the following locations:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:211
msgid "``bin/data.mono.<platform>.<bits>.<target>/Api``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:211
msgid "``<bundle_name>.app/Contents/Frameworks/GaaeExplorerSharp/Api``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:213
msgid "``<bundle_name>.app/Contents/Frameworks/GaaeExplorerSharp/Mono/lib``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:215
msgid "``<bundle_name>.app/Contents/Resources/GaaeExplorerSharp/Mono/etc``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:217
msgid "``bin/data.mono.<platform>.<bits>.<target>/Tools``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:217
msgid "``<bundle_name>.app/Contents/Frameworks/GaaeExplorerSharp/Tools``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:220
msgid "The ``Mono`` subdirectory is optional. It will be needed when distributing the editor, as issues can arise when the user-installed Mono version isn't identical to the one the GaaeExplorer editor was built with. Pass ``copy_mono_root=yes`` to SCons when building the editor in order to create this folder and its contents."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:225
msgid "The ``Tools`` subdirectory contains tools required by the editor, like the ``GaaeExplorerTools`` assemblies and its dependencies."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:229
msgid "Building the Mono runtime"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:231
msgid "When building GaaeExplorer for the desktop, you will likely use the pre-built Mono runtime that is installed on your system. This likely won't be the case when targeting other platforms like Android, iOS and WebAssembly. You will have to build the Mono runtime yourself for those platforms."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:236
msgid "We recommend using these `build scripts <https://github.com/godotengine/godot-mono-builds>`_. They simplify this process but also include some patches needed for proper functioning with GaaeExplorer. See the README on the link above for instructions on how to use the scripts."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:242
msgid "Targeting Android"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:244
msgid "Compiling the Android export templates with Mono is a bit simpler than it is for the desktop platforms, as there are no additional steps required after building. There is no need to worry about run-time dependencies like a data directory or the shared library (when dynamically linking) as those are automatically added to the Gradle project."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:250
msgid "Once you've built Mono, you can proceed to build GaaeExplorer with the instructions described in this page and the :ref:`Compiling for Android<doc_compiling_for_android>` page. Make sure to let SCons know about the location of the Mono runtime you've just built, e.g.: ``scons [...] mono_prefix=\"$HOME/mono-installs/android-armeabi-v7a-release\"`` (This path may be different on your system)."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:258
msgid "Targeting iOS"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:260
msgid "Once you've built Mono, you can proceed to build GaaeExplorer with the instructions described in this page and the :ref:`Compiling for iOS<doc_compiling_for_ios>` page. Make sure to let SCons know about the location of the Mono runtime you've just built, e.g.: ``scons [...] mono_prefix=\"$HOME/mono-installs/ios-arm64-release\"`` (This path may be different on your system)."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:267
msgid "After building GaaeExplorer for each architecture, you will notice SCons has copied the Mono libraries for each of them to the output directory:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:280
msgid "The last three are only for iOS devices and are not available for the iOS simulator."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:282
msgid "These libraries must be put in universal (multi-architecture) \"fat\" files to be distributed with the export templates."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:285
msgid "The following bash script will create the \"fat\" libraries in the directory ``#bin/ios/iphone-mono-libs``:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:301
msgid "The ``iphone-mono-libs`` folder must be distributed with the export templates. The GaaeExplorer editor will look for the libraries in ``<templates>/iphone-mono-libs/lib<name>.iphone.fat.a``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:305
msgid "Targeting WebAssembly"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:307
msgid "Building for WebAssembly currently involves the same process regardless of whether the Mono module is enabled."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:309
msgid "Once you've built Mono, you can proceed to build GaaeExplorer with the instructions described in this page and the :ref:`Compiling for the Web<doc_compiling_for_web>` page. Make sure to let SCons know about the location of the Mono runtime you've just built, e.g.: ``scons [...] mono_prefix=\"$HOME/mono-installs/wasm-runtime-release\"`` (This path may be different on your system)."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:317
msgid "Base Class Library"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:319
msgid "The export templates must also include the BCL (Base Class Library) for each target platform. GaaeExplorer looks for the BCL folder at ``<templates>/bcl/<target_platform>``, where ``<target_platform>`` is the same name passed to the SCons ``platform`` option, e.g.: ``<templates>/bcl/windows``, ``<templates>/bcl/javascript``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:324
msgid "Alternatively, GaaeExplorer will look for them in the following locations:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:327
msgid "Android"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:327
msgid "``<templates>/bcl/monodroid``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:329
msgid "iOS"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:329
msgid "``<templates>/bcl/monotouch``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:331
msgid "WebAssembly"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:331
msgid "``<templates>/bcl/wasm``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:333
msgid "Linux and macOS"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:333
msgid "``<templates>/bcl/net_4_x``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:335
msgid "Windows"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:335
msgid "``<templates>/bcl/net_4_x_win``"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:338
msgid "As of now, we're assuming the same BCL profile can be used for both Linux and macOS, but this may change in the future as they're not guaranteed to be the same (as is the case with the Windows BCL)."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:342
msgid "If the target platform is the same as the platform of the GaaeExplorer editor, then the editor will use the BCL it's running on (``<data_folder>/Mono/lib/mono/4.5``) if it cannot find the BCL in the export templates."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:347
msgid "AOT cross-compilers"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:349
msgid "To perform ahead-of-time (AOT) compilation for other platforms, GaaeExplorer needs to have access to the Mono cross-compilers for that platform and architecture."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:352
msgid "GaaeExplorer will look for the cross-compiler executable in the AOT compilers folder. The location of this folder is ``<data_folder>/Tools/aot-compilers/``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:355
msgid "In order to build the cross-compilers we recommend using these `build scripts <https://github.com/godotengine/godot-mono-builds>`_."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:358
msgid "After building them, copy the executable to the GaaeExplorer AOT compilers directory. The executable name is ``<triple>-mono-sgen``, e.g.: ``aarch64-apple-darwin-mono-sgen``."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:362
msgid "Command-line options"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:364
msgid "The following is the list of command-line options available when building with the Mono module:"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:367
msgid "**module_mono_enabled**\\ =yes | **no**"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:369
msgid "Build GaaeExplorer with the Mono module enabled."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:371
msgid "**mono_glue**\\ =\\ **yes** | no"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:373
msgid "Whether to include the glue source files in the build and define ``MONO_GLUE_DISABLED`` as a preprocessor macro."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:376
msgid "**mono_prefix**\\ =path"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:378
msgid "Path to the Mono installation directory for the target platform and architecture."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:380
msgid "**mono_static**\\ =yes | no"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:382
msgid "Whether to link the Mono runtime statically."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:383
msgid "The default is **yes** for iOS and WASM, and **no** for other platforms."
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:385
msgid "**copy_mono_root**\\ =yes | **no**"
msgstr ""

#: ../development/compiling/compiling_with_mono.rst:387
msgid "Whether to copy the Mono framework assemblies and configuration files required by the GaaeExplorer editor."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
