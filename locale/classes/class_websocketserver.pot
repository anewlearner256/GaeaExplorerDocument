# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_websocketserver.rst:10
msgid "WebSocketServer"
msgstr ""

#: ../classes/class_websocketserver.rst:12
msgid "**Inherits:** :ref:`WebSocketMultiplayerPeer<class_WebSocketMultiplayerPeer>` **<** :ref:`NetworkedMultiplayerPeer<class_NetworkedMultiplayerPeer>` **<** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_websocketserver.rst:14
msgid "WebSocket服务器的实现。"
msgstr ""

#: ../classes/class_websocketserver.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_websocketserver.rst:19
msgid "这个类实现了WebSocket服务器，它也可以支持高级别的多人游戏API。"
msgstr ""

#: ../classes/class_websocketserver.rst:21
msgid "在启动服务器后，\\ :ref:`listen<class_WebSocketServer_method_listen>`\\ ，你需要\\ :ref:`NetworkedMultiplayerPeer.poll<class_NetworkedMultiplayerPeer_method_poll>`\\ 它以固定的时间间隔，例如在\\ :ref:`Node._process<class_Node_method__process>`\\ 内。当客户端连接、断开或发送数据时，你会收到相应的信号。"
msgstr ""

#: ../classes/class_websocketserver.rst:23
msgid "\\ **注意：** 在HTML5导出中不可用。"
msgstr ""

#: ../classes/class_websocketserver.rst:26
msgid "属性"
msgstr ""

#: ../classes/class_websocketserver.rst:29
#: ../classes/class_websocketserver.rst:46
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_websocketserver.rst:29
msgid ":ref:`bind_ip<class_WebSocketServer_property_bind_ip>`"
msgstr ""

#: ../classes/class_websocketserver.rst:29
#: ../classes/class_websocketserver.rst:102
msgid "``\"*\"``"
msgstr ""

#: ../classes/class_websocketserver.rst:31
#: ../classes/class_websocketserver.rst:37
msgid ":ref:`X509Certificate<class_X509Certificate>`"
msgstr ""

#: ../classes/class_websocketserver.rst:31
msgid ":ref:`ca_chain<class_WebSocketServer_property_ca_chain>`"
msgstr ""

#: ../classes/class_websocketserver.rst:33
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_websocketserver.rst:33
msgid ":ref:`handshake_timeout<class_WebSocketServer_property_handshake_timeout>`"
msgstr ""

#: ../classes/class_websocketserver.rst:33
#: ../classes/class_websocketserver.rst:132
msgid "``3.0``"
msgstr ""

#: ../classes/class_websocketserver.rst:35
msgid ":ref:`CryptoKey<class_CryptoKey>`"
msgstr ""

#: ../classes/class_websocketserver.rst:35
msgid ":ref:`private_key<class_WebSocketServer_property_private_key>`"
msgstr ""

#: ../classes/class_websocketserver.rst:37
msgid ":ref:`ssl_certificate<class_WebSocketServer_property_ssl_certificate>`"
msgstr ""

#: ../classes/class_websocketserver.rst:41
msgid "方法"
msgstr ""

#: ../classes/class_websocketserver.rst:44
#: ../classes/class_websocketserver.rst:56
msgid "void"
msgstr ""

#: ../classes/class_websocketserver.rst:44
msgid ":ref:`disconnect_peer<class_WebSocketServer_method_disconnect_peer>` **(** :ref:`int<class_int>` id, :ref:`int<class_int>` code=1000, :ref:`String<class_String>` reason=\"\" **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:46
msgid ":ref:`get_peer_address<class_WebSocketServer_method_get_peer_address>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:48
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_websocketserver.rst:48
msgid ":ref:`get_peer_port<class_WebSocketServer_method_get_peer_port>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:50
#: ../classes/class_websocketserver.rst:52
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_websocketserver.rst:50
msgid ":ref:`has_peer<class_WebSocketServer_method_has_peer>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:52
msgid ":ref:`is_listening<class_WebSocketServer_method_is_listening>` **(** **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:54
msgid ":ref:`Error<enum_@GlobalScope_Error>`"
msgstr ""

#: ../classes/class_websocketserver.rst:54
msgid ":ref:`listen<class_WebSocketServer_method_listen>` **(** :ref:`int<class_int>` port, :ref:`PoolStringArray<class_PoolStringArray>` protocols=PoolStringArray(  ), :ref:`bool<class_bool>` gd_mp_api=false **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:56
msgid ":ref:`stop<class_WebSocketServer_method_stop>` **(** **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:60
msgid "信号"
msgstr ""

#: ../classes/class_websocketserver.rst:64
msgid "**client_close_request** **(** :ref:`int<class_int>` id, :ref:`int<class_int>` code, :ref:`String<class_String>` reason **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:66
msgid "当一个客户端要求彻底关闭时触发。你应该继续轮询，直到你得到一个具有相同\\ ``id``\\ 的\\ :ref:`client_disconnected<class_WebSocketServer_signal_client_disconnected>`\\ 信号，以实现彻底关闭。请参阅\\ :ref:`WebSocketPeer.close<class_WebSocketPeer_method_close>`\\ 以了解更多细节。"
msgstr ""

#: ../classes/class_websocketserver.rst:72
msgid "**client_connected** **(** :ref:`int<class_int>` id, :ref:`String<class_String>` protocol **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:74
msgid "当新的客户端连接时触发。\"协议\" 将是与客户端达成的子协议。"
msgstr ""

#: ../classes/class_websocketserver.rst:80
msgid "**client_disconnected** **(** :ref:`int<class_int>` id, :ref:`bool<class_bool>` was_clean_close **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:82
msgid "当客户端断开连接时触发。如果连接被彻底关闭\\ ``was_clean_close`` 将是\\ ``true`` 。"
msgstr ""

#: ../classes/class_websocketserver.rst:88
msgid "**data_received** **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:90
msgid "当收到一个新消息时触发。"
msgstr ""

#: ../classes/class_websocketserver.rst:92
msgid "\\ **注意：**\\ 这个信号在用作高级多人对等的时候，\\ *不*\\ 触发。"
msgstr ""

#: ../classes/class_websocketserver.rst:95
msgid "属性说明"
msgstr ""

#: ../classes/class_websocketserver.rst:99
msgid ":ref:`String<class_String>` **bind_ip**"
msgstr ""

#: ../classes/class_websocketserver.rst:102
#: ../classes/class_websocketserver.rst:132
msgid "*Default*"
msgstr ""

#: ../classes/class_websocketserver.rst:104
#: ../classes/class_websocketserver.rst:118
#: ../classes/class_websocketserver.rst:134
#: ../classes/class_websocketserver.rst:148
#: ../classes/class_websocketserver.rst:162
msgid "*Setter*"
msgstr ""

#: ../classes/class_websocketserver.rst:104
msgid "set_bind_ip(value)"
msgstr ""

#: ../classes/class_websocketserver.rst:106
#: ../classes/class_websocketserver.rst:120
#: ../classes/class_websocketserver.rst:136
#: ../classes/class_websocketserver.rst:150
#: ../classes/class_websocketserver.rst:164
msgid "*Getter*"
msgstr ""

#: ../classes/class_websocketserver.rst:106
msgid "get_bind_ip()"
msgstr ""

#: ../classes/class_websocketserver.rst:109
msgid "当不设置为\\ ``*``\\ 时，将限制进入的连接到指定的IP地址。将\\ ``bind_ip``\\ 设置为\\ ``127.0.0.1``\\ 将导致服务器只监听本地主机。"
msgstr ""

#: ../classes/class_websocketserver.rst:115
msgid ":ref:`X509Certificate<class_X509Certificate>` **ca_chain**"
msgstr ""

#: ../classes/class_websocketserver.rst:118
msgid "set_ca_chain(value)"
msgstr ""

#: ../classes/class_websocketserver.rst:120
msgid "get_ca_chain()"
msgstr ""

#: ../classes/class_websocketserver.rst:123
msgid "当使用SSL时，你可以将其设置为一个有效的\\ :ref:`X509Certificate<class_X509Certificate>`\\ ，作为SSL握手过程中额外的CA链信息提供。参阅\\ :ref:`private_key<class_WebSocketServer_property_private_key>`\\ 和\\ :ref:`ssl_certificate<class_WebSocketServer_property_ssl_certificate>`\\ 。"
msgstr ""

#: ../classes/class_websocketserver.rst:129
msgid ":ref:`float<class_float>` **handshake_timeout**"
msgstr ""

#: ../classes/class_websocketserver.rst:134
msgid "set_handshake_timeout(value)"
msgstr ""

#: ../classes/class_websocketserver.rst:136
msgid "get_handshake_timeout()"
msgstr ""

#: ../classes/class_websocketserver.rst:139
msgid "挂起客户端，即尚未完成 HTTP 握手的客户端之前的时间被认为是陈旧的并强制断开连接，时间以秒为单位。"
msgstr ""

#: ../classes/class_websocketserver.rst:145
msgid ":ref:`CryptoKey<class_CryptoKey>` **private_key**"
msgstr ""

#: ../classes/class_websocketserver.rst:148
msgid "set_private_key(value)"
msgstr ""

#: ../classes/class_websocketserver.rst:150
msgid "get_private_key()"
msgstr ""

#: ../classes/class_websocketserver.rst:153
msgid "当设置为有效的\\ :ref:`CryptoKey<class_CryptoKey>`\\ 时，与\\ :ref:`ssl_certificate<class_WebSocketServer_property_ssl_certificate>`\\ 一起，将导致服务器需要SSL而不是普通的TCP，即\\ ``wss://``\\ 协议。"
msgstr ""

#: ../classes/class_websocketserver.rst:159
msgid ":ref:`X509Certificate<class_X509Certificate>` **ssl_certificate**"
msgstr ""

#: ../classes/class_websocketserver.rst:162
msgid "set_ssl_certificate(value)"
msgstr ""

#: ../classes/class_websocketserver.rst:164
msgid "get_ssl_certificate()"
msgstr ""

#: ../classes/class_websocketserver.rst:167
msgid "当设置为有效的\\ :ref:`X509Certificate<class_X509Certificate>`\\ 时，连同\\ :ref:`private_key<class_WebSocketServer_property_private_key>`\\ ，将导致服务器需要SSL而不是普通的TCP，即\\ ``wss://``\\ 协议。"
msgstr ""

#: ../classes/class_websocketserver.rst:170
msgid "方法说明"
msgstr ""

#: ../classes/class_websocketserver.rst:174
msgid "void **disconnect_peer** **(** :ref:`int<class_int>` id, :ref:`int<class_int>` code=1000, :ref:`String<class_String>` reason=\"\" **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:176
msgid "断开由\\ ``id``\\ 标识的对等体与服务器的连接。更多信息参阅\\ :ref:`WebSocketPeer.close<class_WebSocketPeer_method_close>`\\ 。"
msgstr ""

#: ../classes/class_websocketserver.rst:182
msgid ":ref:`String<class_String>` **get_peer_address** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:184
msgid "返回给定对等体的IP地址。"
msgstr ""

#: ../classes/class_websocketserver.rst:190
msgid ":ref:`int<class_int>` **get_peer_port** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:192
msgid "返回给定对等体的远程端口。"
msgstr ""

#: ../classes/class_websocketserver.rst:198
msgid ":ref:`bool<class_bool>` **has_peer** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:200
msgid "如果一个具有给定ID的对等体被连接，则返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_websocketserver.rst:206
msgid ":ref:`bool<class_bool>` **is_listening** **(** **)** |const|"
msgstr ""

#: ../classes/class_websocketserver.rst:208
msgid "如果服务器正在监听某个端口，返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_websocketserver.rst:214
msgid ":ref:`Error<enum_@GlobalScope_Error>` **listen** **(** :ref:`int<class_int>` port, :ref:`PoolStringArray<class_PoolStringArray>` protocols=PoolStringArray(  ), :ref:`bool<class_bool>` gd_mp_api=false **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:216
msgid "在给定的端口上开始监听。"
msgstr ""

#: ../classes/class_websocketserver.rst:218
msgid "你可以通过 \"协议\" 数组指定所需的子协议。如果列表为空（默认情况下），将不请求任何子协议。"
msgstr ""

#: ../classes/class_websocketserver.rst:220
msgid "如果\\ ``true``\\ 作为\\ ``gd_mp_api``\\ 传递，服务器将表现得像\\ :ref:`MultiplayerAPI<class_MultiplayerAPI>`\\ 的网络对等体，来自非GaaeExplorer客户端的连接将不工作，并且\\ :ref:`data_received<class_WebSocketServer_signal_data_received>`\\ 将不被触发。"
msgstr ""

#: ../classes/class_websocketserver.rst:222
msgid "如果\\ ``false``\\ 被传递（默认），你必须调用\\ :ref:`PacketPeer<class_PacketPeer>`\\ 函数（\\ ``put_packet``, ``get_packet``, etc.)，在通过\\ ``get_peer(id)``\\ 返回的\\ :ref:`WebSocketPeer<class_WebSocketPeer>`\\ 上，与具有给定\\ ``id``\\ 的对等体进行通信，例如，\\ ``get_peer(id).get_available_packet_count``\\ 。"
msgstr ""

#: ../classes/class_websocketserver.rst:228
msgid "void **stop** **(** **)**"
msgstr ""

#: ../classes/class_websocketserver.rst:230
msgid "停止服务器并清除其状态。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
