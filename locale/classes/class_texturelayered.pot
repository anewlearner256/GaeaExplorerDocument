# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_texturelayered.rst:10
msgid "TextureLayered"
msgstr ""

#: ../classes/class_texturelayered.rst:12
msgid "**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_texturelayered.rst:14
msgid "**Inherited By:** :ref:`Texture3D<class_Texture3D>`, :ref:`TextureArray<class_TextureArray>`"
msgstr ""

#: ../classes/class_texturelayered.rst:16
msgid "3D 纹理类型的基类。"
msgstr ""

#: ../classes/class_texturelayered.rst:19
msgid "描述"
msgstr ""

#: ../classes/class_texturelayered.rst:21
msgid "是 :ref:`Texture3D<class_Texture3D>` 和 :ref:`TextureArray<class_TextureArray>` 的基类。不能直接使用，但包含访问和使用 :ref:`Texture3D<class_Texture3D>` 和 :ref:`TextureArray<class_TextureArray>` 的所有必要功能。数据是以每层为单位设置的。对于 :ref:`Texture3D<class_Texture3D>`\\ ，层指定了深度或 Z-index，它们可以被视为一堆二维切片。同样地，对于 :ref:`TextureArray<class_TextureArray>`\\ ，层指定了数组层。"
msgstr ""

#: ../classes/class_texturelayered.rst:24
msgid "属性"
msgstr ""

#: ../classes/class_texturelayered.rst:27
msgid ":ref:`Dictionary<class_Dictionary>`"
msgstr ""

#: ../classes/class_texturelayered.rst:27
msgid ":ref:`data<class_TextureLayered_property_data>`"
msgstr ""

#: ../classes/class_texturelayered.rst:27
#: ../classes/class_texturelayered.rst:92
msgid "``{\"depth\": 0,\"flags\": 7,\"format\": 37,\"height\": 0,\"layers\": [  ],\"width\": 0}``"
msgstr ""

#: ../classes/class_texturelayered.rst:29
#: ../classes/class_texturelayered.rst:36
#: ../classes/class_texturelayered.rst:40
#: ../classes/class_texturelayered.rst:44
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_texturelayered.rst:29
msgid ":ref:`flags<class_TextureLayered_property_flags>`"
msgstr ""

#: ../classes/class_texturelayered.rst:29
#: ../classes/class_texturelayered.rst:104
msgid "``7``"
msgstr ""

#: ../classes/class_texturelayered.rst:33
msgid "方法"
msgstr ""

#: ../classes/class_texturelayered.rst:36
msgid ":ref:`get_depth<class_TextureLayered_method_get_depth>` **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:38
msgid ":ref:`Format<enum_Image_Format>`"
msgstr ""

#: ../classes/class_texturelayered.rst:38
msgid ":ref:`get_format<class_TextureLayered_method_get_format>` **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:40
msgid ":ref:`get_height<class_TextureLayered_method_get_height>` **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:42
msgid ":ref:`Image<class_Image>`"
msgstr ""

#: ../classes/class_texturelayered.rst:42
msgid ":ref:`get_layer_data<class_TextureLayered_method_get_layer_data>` **(** :ref:`int<class_int>` layer **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:44
msgid ":ref:`get_width<class_TextureLayered_method_get_width>` **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:46
#: ../classes/class_texturelayered.rst:48
msgid "void"
msgstr ""

#: ../classes/class_texturelayered.rst:46
msgid ":ref:`set_data_partial<class_TextureLayered_method_set_data_partial>` **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` x_offset, :ref:`int<class_int>` y_offset, :ref:`int<class_int>` layer, :ref:`int<class_int>` mipmap=0 **)**"
msgstr ""

#: ../classes/class_texturelayered.rst:48
msgid ":ref:`set_layer_data<class_TextureLayered_method_set_layer_data>` **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` layer **)**"
msgstr ""

#: ../classes/class_texturelayered.rst:52
msgid "枚举"
msgstr ""

#: ../classes/class_texturelayered.rst:68
msgid "enum **Flags**:"
msgstr ""

#: ../classes/class_texturelayered.rst:70
msgid "**FLAGS_DEFAULT_TEXTURE_ARRAY** = **7** --- :ref:`TextureArray<class_TextureArray>` 的默认标记。 启用 :ref:`FLAG_MIPMAPS<class_TextureLayered_constant_FLAG_MIPMAPS>`\\ 、\\ :ref:`FLAG_REPEAT<class_TextureLayered_constant_FLAG_REPEAT>` 和 :ref:`FLAG_FILTER<class_TextureLayered_constant_FLAG_FILTER>`\\ 。"
msgstr ""

#: ../classes/class_texturelayered.rst:72
msgid "**FLAGS_DEFAULT_TEXTURE_3D** = **4** --- 默认为\\ :ref:`Texture3D<class_Texture3D>`\\ 的标记。启用\\ :ref:`FLAG_FILTER<class_TextureLayered_constant_FLAG_FILTER>`\\ 。"
msgstr ""

#: ../classes/class_texturelayered.rst:74
msgid "**FLAG_MIPMAPS** = **1** --- 纹理将在创建时生成多级渐远纹理。"
msgstr ""

#: ../classes/class_texturelayered.rst:76
msgid "**FLAG_REPEAT** = **2** --- 当使用的UV超出0-1范围时，纹理将重复。"
msgstr ""

#: ../classes/class_texturelayered.rst:78
msgid "**FLAG_FILTER** = **4** --- 在从纹理中读取时使用过滤。过滤使像素变得平滑。当你需要访问单个像素时，关闭过滤会稍快一些，也更合适。"
msgstr ""

#: ../classes/class_texturelayered.rst:80
msgid "**FLAG_ANISOTROPIC_FILTER** = **8** --- 使用各向异性的多级渐远纹理过滤。生成具有不同长宽比的同一纹理的较小版本。"
msgstr ""

#: ../classes/class_texturelayered.rst:82
msgid "当从斜角观看时，这会产生更好看的纹理。"
msgstr ""

#: ../classes/class_texturelayered.rst:85
msgid "属性说明"
msgstr ""

#: ../classes/class_texturelayered.rst:89
msgid ":ref:`Dictionary<class_Dictionary>` **data**"
msgstr ""

#: ../classes/class_texturelayered.rst:92
#: ../classes/class_texturelayered.rst:104
msgid "*Default*"
msgstr ""

#: ../classes/class_texturelayered.rst:95
msgid "返回字典，其中带有此纹理使用的所有数据。"
msgstr ""

#: ../classes/class_texturelayered.rst:101
msgid ":ref:`int<class_int>` **flags**"
msgstr ""

#: ../classes/class_texturelayered.rst:106
msgid "*Setter*"
msgstr ""

#: ../classes/class_texturelayered.rst:106
msgid "set_flags(value)"
msgstr ""

#: ../classes/class_texturelayered.rst:108
msgid "*Getter*"
msgstr ""

#: ../classes/class_texturelayered.rst:108
msgid "get_flags()"
msgstr ""

#: ../classes/class_texturelayered.rst:111
msgid "指定应用于此纹理的 :ref:`Flags<enum_TextureLayered_Flags>`\\ 。"
msgstr ""

#: ../classes/class_texturelayered.rst:114
msgid "方法说明"
msgstr ""

#: ../classes/class_texturelayered.rst:118
msgid ":ref:`int<class_int>` **get_depth** **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:120
msgid "返回纹理的深度。深度是第三个维度（通常是 Z 轴）。"
msgstr ""

#: ../classes/class_texturelayered.rst:126
msgid ":ref:`Format<enum_Image_Format>` **get_format** **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:128
msgid "返回纹理当前使用的格式。详情见\\ :ref:`Format<enum_Image_Format>`\\ 。"
msgstr ""

#: ../classes/class_texturelayered.rst:134
msgid ":ref:`int<class_int>` **get_height** **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:136
msgid "返回纹理的高度。高度通常由Y轴表示。"
msgstr ""

#: ../classes/class_texturelayered.rst:142
msgid ":ref:`Image<class_Image>` **get_layer_data** **(** :ref:`int<class_int>` layer **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:144
msgid "返回一个带有指定\\ ``layer``\\ 层数据的\\ :ref:`Image<class_Image>`\\ 图像资源。"
msgstr ""

#: ../classes/class_texturelayered.rst:150
msgid ":ref:`int<class_int>` **get_width** **(** **)** |const|"
msgstr ""

#: ../classes/class_texturelayered.rst:152
msgid "返回纹理的宽度。宽度通常由X轴表示。"
msgstr ""

#: ../classes/class_texturelayered.rst:158
msgid "void **set_data_partial** **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` x_offset, :ref:`int<class_int>` y_offset, :ref:`int<class_int>` layer, :ref:`int<class_int>` mipmap=0 **)**"
msgstr ""

#: ../classes/class_texturelayered.rst:160
msgid "通过使用指定的\\ ``image``\\ 的数据覆盖来部分设置指定的\\ ``layer``\\ 的数据。 ``x_offset`` 和 ``y_offset`` 确定 :ref:`Image<class_Image>` 在纹理上\"stamped\" 标记的位置。 ``image`` 必须适合纹理。"
msgstr ""

#: ../classes/class_texturelayered.rst:166
msgid "void **set_layer_data** **(** :ref:`Image<class_Image>` image, :ref:`int<class_int>` layer **)**"
msgstr ""

#: ../classes/class_texturelayered.rst:168
msgid "设置指定图层的数据。数据的形式是二维的\\ :ref:`Image<class_Image>`\\ 资源。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
