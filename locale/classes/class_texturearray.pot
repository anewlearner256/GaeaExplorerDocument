# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_texturearray.rst:10
msgid "TextureArray"
msgstr ""

#: ../classes/class_texturearray.rst:12
msgid "**Inherits:** :ref:`TextureLayered<class_TextureLayered>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_texturearray.rst:14
msgid "存储在单个基元中的纹理数组。"
msgstr ""

#: ../classes/class_texturearray.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_texturearray.rst:19
msgid "``TextureArray``\\ s store an array of :ref:`Image<class_Image>`\\ s in a single :ref:`Texture<class_Texture>` primitive. Each layer of the texture array has its own mipmap chain. This makes it is a good alternative to texture atlases. See also :ref:`Texture3D<class_Texture3D>`."
msgstr ""

#: ../classes/class_texturearray.rst:21
msgid "\\ ``TextureArray``\\ s must be displayed using shaders. After importing your file as a ``TextureArray`` and setting the appropriate Horizontal and Vertical Slices, display it by setting it as a uniform to a shader, for example (2D):"
msgstr ""

#: ../classes/class_texturearray.rst:34
msgid "Set the integer uniform \"index\" to show a particular part of the texture as defined by the Horizontal and Vertical Slices in the importer."
msgstr ""

#: ../classes/class_texturearray.rst:36
msgid "\\ **Note:** When sampling an albedo texture from a texture array in 3D, the sRGB -> linear conversion hint (``hint_albedo``) should be used to prevent colors from looking washed out:"
msgstr ""

#: ../classes/class_texturearray.rst:49
msgid "\\ **Note:** ``TextureArray``\\ s can only be sampled in shaders in the GLES3 backend. In GLES2, their data can be accessed via scripting, but there is no way to render them in a hardware-accelerated manner."
msgstr ""

#: ../classes/class_texturearray.rst:52
msgid "方法"
msgstr ""

#: ../classes/class_texturearray.rst:55
msgid "void"
msgstr ""

#: ../classes/class_texturearray.rst:55
msgid ":ref:`create<class_TextureArray_method_create>` **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`int<class_int>` depth, :ref:`Format<enum_Image_Format>` format, :ref:`int<class_int>` flags=7 **)**"
msgstr ""

#: ../classes/class_texturearray.rst:59
msgid "方法说明"
msgstr ""

#: ../classes/class_texturearray.rst:63
msgid "void **create** **(** :ref:`int<class_int>` width, :ref:`int<class_int>` height, :ref:`int<class_int>` depth, :ref:`Format<enum_Image_Format>` format, :ref:`int<class_int>` flags=7 **)**"
msgstr ""

#: ../classes/class_texturearray.rst:65
msgid "以指定的\\ ``width``\\ 、\\ ``height``\\ 和\\ ``depth``\\ 创建TextureArray。参阅\\ :ref:`Format<enum_Image_Format>`\\ 的\\ ``format``\\ 选项。参阅\\ :ref:`Flags<enum_TextureLayered_Flags>`\\ 枚举器的\\ ``flags``\\ 选项。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
