# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_node2d.rst:10
msgid "Node2D"
msgstr ""

#: ../classes/class_node2d.rst:12
msgid "**Inherits:** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_node2d.rst:14
msgid "**Inherited By:** :ref:`AnimatedSprite<class_AnimatedSprite>`, :ref:`AudioStreamPlayer2D<class_AudioStreamPlayer2D>`, :ref:`BackBufferCopy<class_BackBufferCopy>`, :ref:`Bone2D<class_Bone2D>`, :ref:`CPUParticles2D<class_CPUParticles2D>`, :ref:`Camera2D<class_Camera2D>`, :ref:`CanvasModulate<class_CanvasModulate>`, :ref:`CollisionObject2D<class_CollisionObject2D>`, :ref:`CollisionPolygon2D<class_CollisionPolygon2D>`, :ref:`CollisionShape2D<class_CollisionShape2D>`, :ref:`Joint2D<class_Joint2D>`, :ref:`Light2D<class_Light2D>`, :ref:`LightOccluder2D<class_LightOccluder2D>`, :ref:`Line2D<class_Line2D>`, :ref:`Listener2D<class_Listener2D>`, :ref:`MeshInstance2D<class_MeshInstance2D>`, :ref:`MultiMeshInstance2D<class_MultiMeshInstance2D>`, :ref:`Navigation2D<class_Navigation2D>`, :ref:`NavigationPolygonInstance<class_NavigationPolygonInstance>`, :ref:`ParallaxLayer<class_ParallaxLayer>`, :ref:`Particles2D<class_Particles2D>`, :ref:`Path2D<class_Path2D>`, :ref:`PathFollow2D<class_PathFollow2D>`, :ref:`Polygon2D<class_Polygon2D>`, :ref:`Position2D<class_Position2D>`, :ref:`RayCast2D<class_RayCast2D>`, :ref:`RemoteTransform2D<class_RemoteTransform2D>`, :ref:`Skeleton2D<class_Skeleton2D>`, :ref:`Sprite<class_Sprite>`, :ref:`TileMap<class_TileMap>`, :ref:`TouchScreenButton<class_TouchScreenButton>`, :ref:`VisibilityNotifier2D<class_VisibilityNotifier2D>`, :ref:`YSort<class_YSort>`"
msgstr ""

#: ../classes/class_node2d.rst:16
msgid "2D 游戏对象，被所有 2D 相关的节点继承。具有位置、旋转、缩放和 Z 索引。"
msgstr ""

#: ../classes/class_node2d.rst:19
msgid "描述"
msgstr ""

#: ../classes/class_node2d.rst:21
msgid "2D 游戏对象，具有变换（位置、旋转、缩放）。所有的 2D 节点，包括物理对象和精灵，都继承自 Node2D。使用 Node2D 作为父节点来移动、缩放和旋转 2D 项目中的子节点。还可以控制节点的渲染顺序。"
msgstr ""

#: ../classes/class_node2d.rst:24
msgid "教程"
msgstr ""

#: ../classes/class_node2d.rst:26
msgid ":doc:`Custom drawing in 2D <../tutorials/2d/custom_drawing_in_2d>`"
msgstr ""

#: ../classes/class_node2d.rst:28
msgid "`All 2D Demos <https://github.com/godotengine/godot-demo-projects/tree/master/2d>`__"
msgstr ""

#: ../classes/class_node2d.rst:31
msgid "属性"
msgstr ""

#: ../classes/class_node2d.rst:34
#: ../classes/class_node2d.rst:40
#: ../classes/class_node2d.rst:44
#: ../classes/class_node2d.rst:50
#: ../classes/class_node2d.rst:79
#: ../classes/class_node2d.rst:81
msgid ":ref:`Vector2<class_Vector2>`"
msgstr ""

#: ../classes/class_node2d.rst:34
msgid ":ref:`global_position<class_Node2D_property_global_position>`"
msgstr ""

#: ../classes/class_node2d.rst:36
#: ../classes/class_node2d.rst:38
#: ../classes/class_node2d.rst:46
#: ../classes/class_node2d.rst:48
#: ../classes/class_node2d.rst:65
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_node2d.rst:36
msgid ":ref:`global_rotation<class_Node2D_property_global_rotation>`"
msgstr ""

#: ../classes/class_node2d.rst:38
msgid ":ref:`global_rotation_degrees<class_Node2D_property_global_rotation_degrees>`"
msgstr ""

#: ../classes/class_node2d.rst:40
msgid ":ref:`global_scale<class_Node2D_property_global_scale>`"
msgstr ""

#: ../classes/class_node2d.rst:42
#: ../classes/class_node2d.rst:52
#: ../classes/class_node2d.rst:67
msgid ":ref:`Transform2D<class_Transform2D>`"
msgstr ""

#: ../classes/class_node2d.rst:42
msgid ":ref:`global_transform<class_Node2D_property_global_transform>`"
msgstr ""

#: ../classes/class_node2d.rst:44
msgid ":ref:`position<class_Node2D_property_position>`"
msgstr ""

#: ../classes/class_node2d.rst:44
#: ../classes/class_node2d.rst:164
msgid "``Vector2( 0, 0 )``"
msgstr ""

#: ../classes/class_node2d.rst:46
msgid ":ref:`rotation<class_Node2D_property_rotation>`"
msgstr ""

#: ../classes/class_node2d.rst:46
#: ../classes/class_node2d.rst:48
#: ../classes/class_node2d.rst:180
#: ../classes/class_node2d.rst:196
msgid "``0.0``"
msgstr ""

#: ../classes/class_node2d.rst:48
msgid ":ref:`rotation_degrees<class_Node2D_property_rotation_degrees>`"
msgstr ""

#: ../classes/class_node2d.rst:50
msgid ":ref:`scale<class_Node2D_property_scale>`"
msgstr ""

#: ../classes/class_node2d.rst:50
#: ../classes/class_node2d.rst:212
msgid "``Vector2( 1, 1 )``"
msgstr ""

#: ../classes/class_node2d.rst:52
msgid ":ref:`transform<class_Node2D_property_transform>`"
msgstr ""

#: ../classes/class_node2d.rst:54
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_node2d.rst:54
msgid ":ref:`z_as_relative<class_Node2D_property_z_as_relative>`"
msgstr ""

#: ../classes/class_node2d.rst:54
#: ../classes/class_node2d.rst:242
msgid "``true``"
msgstr ""

#: ../classes/class_node2d.rst:56
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_node2d.rst:56
msgid ":ref:`z_index<class_Node2D_property_z_index>`"
msgstr ""

#: ../classes/class_node2d.rst:56
#: ../classes/class_node2d.rst:258
msgid "``0``"
msgstr ""

#: ../classes/class_node2d.rst:60
msgid "方法"
msgstr ""

#: ../classes/class_node2d.rst:63
#: ../classes/class_node2d.rst:69
#: ../classes/class_node2d.rst:71
#: ../classes/class_node2d.rst:73
#: ../classes/class_node2d.rst:75
#: ../classes/class_node2d.rst:77
#: ../classes/class_node2d.rst:83
msgid "void"
msgstr ""

#: ../classes/class_node2d.rst:63
msgid ":ref:`apply_scale<class_Node2D_method_apply_scale>` **(** :ref:`Vector2<class_Vector2>` ratio **)**"
msgstr ""

#: ../classes/class_node2d.rst:65
msgid ":ref:`get_angle_to<class_Node2D_method_get_angle_to>` **(** :ref:`Vector2<class_Vector2>` point **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:67
msgid ":ref:`get_relative_transform_to_parent<class_Node2D_method_get_relative_transform_to_parent>` **(** :ref:`Node<class_Node>` parent **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:69
msgid ":ref:`global_translate<class_Node2D_method_global_translate>` **(** :ref:`Vector2<class_Vector2>` offset **)**"
msgstr ""

#: ../classes/class_node2d.rst:71
msgid ":ref:`look_at<class_Node2D_method_look_at>` **(** :ref:`Vector2<class_Vector2>` point **)**"
msgstr ""

#: ../classes/class_node2d.rst:73
msgid ":ref:`move_local_x<class_Node2D_method_move_local_x>` **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**"
msgstr ""

#: ../classes/class_node2d.rst:75
msgid ":ref:`move_local_y<class_Node2D_method_move_local_y>` **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**"
msgstr ""

#: ../classes/class_node2d.rst:77
msgid ":ref:`rotate<class_Node2D_method_rotate>` **(** :ref:`float<class_float>` radians **)**"
msgstr ""

#: ../classes/class_node2d.rst:79
msgid ":ref:`to_global<class_Node2D_method_to_global>` **(** :ref:`Vector2<class_Vector2>` local_point **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:81
msgid ":ref:`to_local<class_Node2D_method_to_local>` **(** :ref:`Vector2<class_Vector2>` global_point **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:83
msgid ":ref:`translate<class_Node2D_method_translate>` **(** :ref:`Vector2<class_Vector2>` offset **)**"
msgstr ""

#: ../classes/class_node2d.rst:87
msgid "属性说明"
msgstr ""

#: ../classes/class_node2d.rst:91
msgid ":ref:`Vector2<class_Vector2>` **global_position**"
msgstr ""

#: ../classes/class_node2d.rst:94
#: ../classes/class_node2d.rst:108
#: ../classes/class_node2d.rst:122
#: ../classes/class_node2d.rst:136
#: ../classes/class_node2d.rst:150
#: ../classes/class_node2d.rst:166
#: ../classes/class_node2d.rst:182
#: ../classes/class_node2d.rst:198
#: ../classes/class_node2d.rst:214
#: ../classes/class_node2d.rst:228
#: ../classes/class_node2d.rst:244
#: ../classes/class_node2d.rst:260
msgid "*Setter*"
msgstr ""

#: ../classes/class_node2d.rst:94
msgid "set_global_position(value)"
msgstr ""

#: ../classes/class_node2d.rst:96
#: ../classes/class_node2d.rst:110
#: ../classes/class_node2d.rst:124
#: ../classes/class_node2d.rst:138
#: ../classes/class_node2d.rst:152
#: ../classes/class_node2d.rst:168
#: ../classes/class_node2d.rst:184
#: ../classes/class_node2d.rst:200
#: ../classes/class_node2d.rst:216
#: ../classes/class_node2d.rst:230
#: ../classes/class_node2d.rst:246
#: ../classes/class_node2d.rst:262
msgid "*Getter*"
msgstr ""

#: ../classes/class_node2d.rst:96
msgid "get_global_position()"
msgstr ""

#: ../classes/class_node2d.rst:99
msgid "全局位置。"
msgstr ""

#: ../classes/class_node2d.rst:105
msgid ":ref:`float<class_float>` **global_rotation**"
msgstr ""

#: ../classes/class_node2d.rst:108
msgid "set_global_rotation(value)"
msgstr ""

#: ../classes/class_node2d.rst:110
msgid "get_global_rotation()"
msgstr ""

#: ../classes/class_node2d.rst:113
msgid "全局旋转弧度。"
msgstr ""

#: ../classes/class_node2d.rst:119
msgid ":ref:`float<class_float>` **global_rotation_degrees**"
msgstr ""

#: ../classes/class_node2d.rst:122
msgid "set_global_rotation_degrees(value)"
msgstr ""

#: ../classes/class_node2d.rst:124
msgid "get_global_rotation_degrees()"
msgstr ""

#: ../classes/class_node2d.rst:127
msgid "全局旋转角度。"
msgstr ""

#: ../classes/class_node2d.rst:133
msgid ":ref:`Vector2<class_Vector2>` **global_scale**"
msgstr ""

#: ../classes/class_node2d.rst:136
msgid "set_global_scale(value)"
msgstr ""

#: ../classes/class_node2d.rst:138
msgid "get_global_scale()"
msgstr ""

#: ../classes/class_node2d.rst:141
msgid "全局缩放。"
msgstr ""

#: ../classes/class_node2d.rst:147
msgid ":ref:`Transform2D<class_Transform2D>` **global_transform**"
msgstr ""

#: ../classes/class_node2d.rst:150
msgid "set_global_transform(value)"
msgstr ""

#: ../classes/class_node2d.rst:152
msgid "get_global_transform()"
msgstr ""

#: ../classes/class_node2d.rst:155
msgid "全局 :ref:`Transform2D<class_Transform2D>`\\ 。"
msgstr ""

#: ../classes/class_node2d.rst:161
msgid ":ref:`Vector2<class_Vector2>` **position**"
msgstr ""

#: ../classes/class_node2d.rst:164
#: ../classes/class_node2d.rst:180
#: ../classes/class_node2d.rst:196
#: ../classes/class_node2d.rst:212
#: ../classes/class_node2d.rst:242
#: ../classes/class_node2d.rst:258
msgid "*Default*"
msgstr ""

#: ../classes/class_node2d.rst:166
msgid "set_position(value)"
msgstr ""

#: ../classes/class_node2d.rst:168
msgid "get_position()"
msgstr ""

#: ../classes/class_node2d.rst:171
msgid "位置，相对于父节点。"
msgstr ""

#: ../classes/class_node2d.rst:177
msgid ":ref:`float<class_float>` **rotation**"
msgstr ""

#: ../classes/class_node2d.rst:182
msgid "set_rotation(value)"
msgstr ""

#: ../classes/class_node2d.rst:184
msgid "get_rotation()"
msgstr ""

#: ../classes/class_node2d.rst:187
msgid "旋转弧度，相对于父节点。"
msgstr ""

#: ../classes/class_node2d.rst:193
msgid ":ref:`float<class_float>` **rotation_degrees**"
msgstr ""

#: ../classes/class_node2d.rst:198
msgid "set_rotation_degrees(value)"
msgstr ""

#: ../classes/class_node2d.rst:200
msgid "get_rotation_degrees()"
msgstr ""

#: ../classes/class_node2d.rst:203
msgid "旋转角度，相对于父节点。"
msgstr ""

#: ../classes/class_node2d.rst:209
msgid ":ref:`Vector2<class_Vector2>` **scale**"
msgstr ""

#: ../classes/class_node2d.rst:214
msgid "set_scale(value)"
msgstr ""

#: ../classes/class_node2d.rst:216
msgid "get_scale()"
msgstr ""

#: ../classes/class_node2d.rst:219
msgid "节点的缩放。未缩放时为：\\ ``(1, 1)``\\ 。"
msgstr ""

#: ../classes/class_node2d.rst:225
msgid ":ref:`Transform2D<class_Transform2D>` **transform**"
msgstr ""

#: ../classes/class_node2d.rst:228
msgid "set_transform(value)"
msgstr ""

#: ../classes/class_node2d.rst:230
msgid "get_transform()"
msgstr ""

#: ../classes/class_node2d.rst:233
msgid "局部 :ref:`Transform2D<class_Transform2D>`\\ 。"
msgstr ""

#: ../classes/class_node2d.rst:239
msgid ":ref:`bool<class_bool>` **z_as_relative**"
msgstr ""

#: ../classes/class_node2d.rst:244
msgid "set_z_as_relative(value)"
msgstr ""

#: ../classes/class_node2d.rst:246
msgid "is_z_relative()"
msgstr ""

#: ../classes/class_node2d.rst:249
msgid "如果\\ ``true``\\ ，节点的Z索引是相对于它的父节点的Z索引而言的。如果这个节点的Z索引是2，它的父节点的有效Z索引是3，那么这个节点的有效Z索引将是2+3=5。"
msgstr ""

#: ../classes/class_node2d.rst:255
msgid ":ref:`int<class_int>` **z_index**"
msgstr ""

#: ../classes/class_node2d.rst:260
msgid "set_z_index(value)"
msgstr ""

#: ../classes/class_node2d.rst:262
msgid "get_z_index()"
msgstr ""

#: ../classes/class_node2d.rst:265
msgid "Z 索引。控制节点呈现的顺序。具有较高 Z 索引的节点将显示在其他节点之前。必须介于 :ref:`VisualServer.CANVAS_ITEM_Z_MIN<class_VisualServer_constant_CANVAS_ITEM_Z_MIN>` 和 :ref:`VisualServer.CANVAS_ITEM_Z_MAX<class_VisualServer_constant_CANVAS_ITEM_Z_MAX>` 之间（含）。"
msgstr ""

#: ../classes/class_node2d.rst:268
msgid "方法说明"
msgstr ""

#: ../classes/class_node2d.rst:272
msgid "void **apply_scale** **(** :ref:`Vector2<class_Vector2>` ratio **)**"
msgstr ""

#: ../classes/class_node2d.rst:274
msgid "将当前缩放乘以 ``ratio`` 向量。"
msgstr ""

#: ../classes/class_node2d.rst:280
msgid ":ref:`float<class_float>` **get_angle_to** **(** :ref:`Vector2<class_Vector2>` point **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:282
msgid "以弧度为单位返回节点和 ``point`` 之间的角度。"
msgstr ""

#: ../classes/class_node2d.rst:284
msgid "\\ `返回的角度的示意图。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/node2d_get_angle_to.png>`__"
msgstr ""

#: ../classes/class_node2d.rst:290
msgid ":ref:`Transform2D<class_Transform2D>` **get_relative_transform_to_parent** **(** :ref:`Node<class_Node>` parent **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:292
msgid "返回相对于此节点的父节点的 :ref:`Transform2D<class_Transform2D>`\\ 。"
msgstr ""

#: ../classes/class_node2d.rst:298
msgid "void **global_translate** **(** :ref:`Vector2<class_Vector2>` offset **)**"
msgstr ""

#: ../classes/class_node2d.rst:300
msgid "将 ``offset`` 向量添加到节点的全局位置。"
msgstr ""

#: ../classes/class_node2d.rst:306
msgid "void **look_at** **(** :ref:`Vector2<class_Vector2>` point **)**"
msgstr ""

#: ../classes/class_node2d.rst:308
msgid "旋转节点，使其指向 ``point``\\ ，请传入全局坐标。"
msgstr ""

#: ../classes/class_node2d.rst:314
msgid "void **move_local_x** **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**"
msgstr ""

#: ../classes/class_node2d.rst:316
msgid "基于\\ :ref:`Node._process<class_Node_method__process>`\\ 的\\ ``delta``\\ ，在节点的X轴上应用一个局部平移。如果\\ ``scaled``\\ 是\\ ``false``\\ ，则对运动进行标准化。"
msgstr ""

#: ../classes/class_node2d.rst:322
msgid "void **move_local_y** **(** :ref:`float<class_float>` delta, :ref:`bool<class_bool>` scaled=false **)**"
msgstr ""

#: ../classes/class_node2d.rst:324
msgid "基于\\ :ref:`Node._process<class_Node_method__process>`\\ 的\\ ``delta``\\ ，在节点的Y轴上应用一个局部平移。如果\\ ``scaled``\\ 是\\ ``false``\\ ，则对运动进行标准化。"
msgstr ""

#: ../classes/class_node2d.rst:330
msgid "void **rotate** **(** :ref:`float<class_float>` radians **)**"
msgstr ""

#: ../classes/class_node2d.rst:332
msgid "从节点的当前旋转开始，以弧度为单位，对节点进行旋转。"
msgstr ""

#: ../classes/class_node2d.rst:338
msgid ":ref:`Vector2<class_Vector2>` **to_global** **(** :ref:`Vector2<class_Vector2>` local_point **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:340
msgid "将提供的本地位置转换为全局坐标空间的位置。例如，对子节点的位置应用这个方法将正确地把它们的位置转换到全局坐标空间，但对节点自己的位置应用这个方法将得到一个不正确的结果，因为它将把节点自己的变换纳入它的全局位置。"
msgstr ""

#: ../classes/class_node2d.rst:346
msgid ":ref:`Vector2<class_Vector2>` **to_local** **(** :ref:`Vector2<class_Vector2>` global_point **)** |const|"
msgstr ""

#: ../classes/class_node2d.rst:348
msgid "将提供的全局位置转换为本地坐标空间的位置。例如，它适合于确定子节点的位置，但不适合于确定其自身相对于父节点的位置。"
msgstr ""

#: ../classes/class_node2d.rst:354
msgid "void **translate** **(** :ref:`Vector2<class_Vector2>` offset **)**"
msgstr ""

#: ../classes/class_node2d.rst:356
msgid "通过给定的 ``offset`` 将节点在本地坐标中进行变换。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
