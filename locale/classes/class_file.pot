# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_file.rst:10
msgid "File"
msgstr ""

#: ../classes/class_file.rst:12
msgid "**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_file.rst:14
msgid "用于处理文件读写操作的类型。"
msgstr ""

#: ../classes/class_file.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_file.rst:19
msgid "File type. This is used to permanently store data into the user device's file system and to read from it. This can be used to store game save data or player configuration files, for example."
msgstr ""

#: ../classes/class_file.rst:21
msgid "Here's a sample on how to write and read from a file:"
msgstr ""

#: ../classes/class_file.rst:38
msgid "In the example above, the file will be saved in the user data folder as specified in the :doc:`Data paths <../tutorials/io/data_paths>` documentation."
msgstr ""

#: ../classes/class_file.rst:40
msgid "\\ **Note:** To access project resources once exported, it is recommended to use :ref:`ResourceLoader<class_ResourceLoader>` instead of the ``File`` API, as some files are converted to engine-specific formats and their original source files might not be present in the exported PCK package."
msgstr ""

#: ../classes/class_file.rst:42
msgid "\\ **Note:** Files are automatically closed only if the process exits \"normally\" (such as by clicking the window manager's close button or pressing **Alt + F4**). If you stop the project execution by pressing **F8** while the project is running, the file won't be closed as the game process will be killed. You can work around this by calling :ref:`flush<class_File_method_flush>` at regular intervals."
msgstr ""

#: ../classes/class_file.rst:45
msgid "教程"
msgstr ""

#: ../classes/class_file.rst:47
msgid ":doc:`File system <../tutorials/scripting/filesystem>`"
msgstr ""

#: ../classes/class_file.rst:49
msgid "`3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__"
msgstr ""

#: ../classes/class_file.rst:52
msgid "属性"
msgstr ""

#: ../classes/class_file.rst:55
#: ../classes/class_file.rst:64
#: ../classes/class_file.rst:66
#: ../classes/class_file.rst:112
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_file.rst:55
msgid ":ref:`endian_swap<class_File_property_endian_swap>`"
msgstr ""

#: ../classes/class_file.rst:55
#: ../classes/class_file.rst:206
msgid "``false``"
msgstr ""

#: ../classes/class_file.rst:59
msgid "方法"
msgstr ""

#: ../classes/class_file.rst:62
#: ../classes/class_file.rst:68
#: ../classes/class_file.rst:122
#: ../classes/class_file.rst:124
#: ../classes/class_file.rst:126
#: ../classes/class_file.rst:128
#: ../classes/class_file.rst:130
#: ../classes/class_file.rst:132
#: ../classes/class_file.rst:134
#: ../classes/class_file.rst:136
#: ../classes/class_file.rst:138
#: ../classes/class_file.rst:140
#: ../classes/class_file.rst:142
#: ../classes/class_file.rst:144
#: ../classes/class_file.rst:146
#: ../classes/class_file.rst:148
#: ../classes/class_file.rst:150
msgid "void"
msgstr ""

#: ../classes/class_file.rst:62
msgid ":ref:`close<class_File_method_close>` **(** **)**"
msgstr ""

#: ../classes/class_file.rst:64
msgid ":ref:`eof_reached<class_File_method_eof_reached>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:66
msgid ":ref:`file_exists<class_File_method_file_exists>` **(** :ref:`String<class_String>` path **)** |const|"
msgstr ""

#: ../classes/class_file.rst:68
msgid ":ref:`flush<class_File_method_flush>` **(** **)**"
msgstr ""

#: ../classes/class_file.rst:70
#: ../classes/class_file.rst:72
#: ../classes/class_file.rst:74
#: ../classes/class_file.rst:76
#: ../classes/class_file.rst:90
#: ../classes/class_file.rst:96
#: ../classes/class_file.rst:104
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_file.rst:70
msgid ":ref:`get_16<class_File_method_get_16>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:72
msgid ":ref:`get_32<class_File_method_get_32>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:74
msgid ":ref:`get_64<class_File_method_get_64>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:76
msgid ":ref:`get_8<class_File_method_get_8>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:78
#: ../classes/class_file.rst:92
#: ../classes/class_file.rst:94
#: ../classes/class_file.rst:98
#: ../classes/class_file.rst:100
#: ../classes/class_file.rst:102
#: ../classes/class_file.rst:108
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_file.rst:78
msgid ":ref:`get_as_text<class_File_method_get_as_text>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:80
msgid ":ref:`PoolByteArray<class_PoolByteArray>`"
msgstr ""

#: ../classes/class_file.rst:80
msgid ":ref:`get_buffer<class_File_method_get_buffer>` **(** :ref:`int<class_int>` len **)** |const|"
msgstr ""

#: ../classes/class_file.rst:82
msgid ":ref:`PoolStringArray<class_PoolStringArray>`"
msgstr ""

#: ../classes/class_file.rst:82
msgid ":ref:`get_csv_line<class_File_method_get_csv_line>` **(** :ref:`String<class_String>` delim=\",\" **)** |const|"
msgstr ""

#: ../classes/class_file.rst:84
#: ../classes/class_file.rst:88
#: ../classes/class_file.rst:106
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_file.rst:84
msgid ":ref:`get_double<class_File_method_get_double>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:86
#: ../classes/class_file.rst:114
#: ../classes/class_file.rst:116
#: ../classes/class_file.rst:118
#: ../classes/class_file.rst:120
msgid ":ref:`Error<enum_@GlobalScope_Error>`"
msgstr ""

#: ../classes/class_file.rst:86
msgid ":ref:`get_error<class_File_method_get_error>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:88
msgid ":ref:`get_float<class_File_method_get_float>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:90
msgid ":ref:`get_len<class_File_method_get_len>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:92
msgid ":ref:`get_line<class_File_method_get_line>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:94
msgid ":ref:`get_md5<class_File_method_get_md5>` **(** :ref:`String<class_String>` path **)** |const|"
msgstr ""

#: ../classes/class_file.rst:96
msgid ":ref:`get_modified_time<class_File_method_get_modified_time>` **(** :ref:`String<class_String>` file **)** |const|"
msgstr ""

#: ../classes/class_file.rst:98
msgid ":ref:`get_pascal_string<class_File_method_get_pascal_string>` **(** **)**"
msgstr ""

#: ../classes/class_file.rst:100
msgid ":ref:`get_path<class_File_method_get_path>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:102
msgid ":ref:`get_path_absolute<class_File_method_get_path_absolute>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:104
msgid ":ref:`get_position<class_File_method_get_position>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:106
msgid ":ref:`get_real<class_File_method_get_real>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:108
msgid ":ref:`get_sha256<class_File_method_get_sha256>` **(** :ref:`String<class_String>` path **)** |const|"
msgstr ""

#: ../classes/class_file.rst:110
msgid ":ref:`Variant<class_Variant>`"
msgstr ""

#: ../classes/class_file.rst:110
msgid ":ref:`get_var<class_File_method_get_var>` **(** :ref:`bool<class_bool>` allow_objects=false **)** |const|"
msgstr ""

#: ../classes/class_file.rst:112
msgid ":ref:`is_open<class_File_method_is_open>` **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:114
msgid ":ref:`open<class_File_method_open>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` flags **)**"
msgstr ""

#: ../classes/class_file.rst:116
msgid ":ref:`open_compressed<class_File_method_open_compressed>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`CompressionMode<enum_File_CompressionMode>` compression_mode=0 **)**"
msgstr ""

#: ../classes/class_file.rst:118
msgid ":ref:`open_encrypted<class_File_method_open_encrypted>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`PoolByteArray<class_PoolByteArray>` key **)**"
msgstr ""

#: ../classes/class_file.rst:120
msgid ":ref:`open_encrypted_with_pass<class_File_method_open_encrypted_with_pass>` **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`String<class_String>` pass **)**"
msgstr ""

#: ../classes/class_file.rst:122
msgid ":ref:`seek<class_File_method_seek>` **(** :ref:`int<class_int>` position **)**"
msgstr ""

#: ../classes/class_file.rst:124
msgid ":ref:`seek_end<class_File_method_seek_end>` **(** :ref:`int<class_int>` position=0 **)**"
msgstr ""

#: ../classes/class_file.rst:126
msgid ":ref:`store_16<class_File_method_store_16>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:128
msgid ":ref:`store_32<class_File_method_store_32>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:130
msgid ":ref:`store_64<class_File_method_store_64>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:132
msgid ":ref:`store_8<class_File_method_store_8>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:134
msgid ":ref:`store_buffer<class_File_method_store_buffer>` **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**"
msgstr ""

#: ../classes/class_file.rst:136
msgid ":ref:`store_csv_line<class_File_method_store_csv_line>` **(** :ref:`PoolStringArray<class_PoolStringArray>` values, :ref:`String<class_String>` delim=\",\" **)**"
msgstr ""

#: ../classes/class_file.rst:138
msgid ":ref:`store_double<class_File_method_store_double>` **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_file.rst:140
msgid ":ref:`store_float<class_File_method_store_float>` **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_file.rst:142
msgid ":ref:`store_line<class_File_method_store_line>` **(** :ref:`String<class_String>` line **)**"
msgstr ""

#: ../classes/class_file.rst:144
msgid ":ref:`store_pascal_string<class_File_method_store_pascal_string>` **(** :ref:`String<class_String>` string **)**"
msgstr ""

#: ../classes/class_file.rst:146
msgid ":ref:`store_real<class_File_method_store_real>` **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_file.rst:148
msgid ":ref:`store_string<class_File_method_store_string>` **(** :ref:`String<class_String>` string **)**"
msgstr ""

#: ../classes/class_file.rst:150
msgid ":ref:`store_var<class_File_method_store_var>` **(** :ref:`Variant<class_Variant>` value, :ref:`bool<class_bool>` full_objects=false **)**"
msgstr ""

#: ../classes/class_file.rst:154
msgid "枚举"
msgstr ""

#: ../classes/class_file.rst:166
msgid "enum **ModeFlags**:"
msgstr ""

#: ../classes/class_file.rst:168
msgid "**READ** = **1** --- 打开文件进行读取操作。光标位于文件的开头。"
msgstr ""

#: ../classes/class_file.rst:170
msgid "**WRITE** = **2** --- 打开文件进行写操作。如果文件不存在，则创建该文件，如果存在则截断。"
msgstr ""

#: ../classes/class_file.rst:172
msgid "**READ_WRITE** = **3** --- 打开文件用于读写操作。不截断文件。光标位于文件的开头。"
msgstr ""

#: ../classes/class_file.rst:174
msgid "**WRITE_READ** = **7** --- 打开文件进行读写操作。如果文件不存在，则创建该文件，如果存在则截断。光标位于文件的开头。"
msgstr ""

#: ../classes/class_file.rst:188
msgid "enum **CompressionMode**:"
msgstr ""

#: ../classes/class_file.rst:190
msgid "**COMPRESSION_FASTLZ** = **0** --- 使用 `FastLZ <http://fastlz.org/>`__ 压缩方法。"
msgstr ""

#: ../classes/class_file.rst:192
msgid "**COMPRESSION_DEFLATE** = **1** --- 使用 `DEFLATE <https://en.wikipedia.org/wiki/DEFLATE>`__ 压缩方法。"
msgstr ""

#: ../classes/class_file.rst:194
msgid "**COMPRESSION_ZSTD** = **2** --- 使用 `Zstandard <https://facebook.github.io/zstd/>`__ 压缩方法。"
msgstr ""

#: ../classes/class_file.rst:196
msgid "**COMPRESSION_GZIP** = **3** --- 使用 `gzip <https://www.gzip.org/>`__ 压缩方法。"
msgstr ""

#: ../classes/class_file.rst:199
msgid "属性说明"
msgstr ""

#: ../classes/class_file.rst:203
msgid ":ref:`bool<class_bool>` **endian_swap**"
msgstr ""

#: ../classes/class_file.rst:206
msgid "*Default*"
msgstr ""

#: ../classes/class_file.rst:208
msgid "*Setter*"
msgstr ""

#: ../classes/class_file.rst:208
msgid "set_endian_swap(value)"
msgstr ""

#: ../classes/class_file.rst:210
msgid "*Getter*"
msgstr ""

#: ../classes/class_file.rst:210
msgid "get_endian_swap()"
msgstr ""

#: ../classes/class_file.rst:213
msgid "为 ``true`` 时文件以大端\\ `字节序 <https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F>`__\\ 读取。为 ``false`` 时文件以小端字节序读取。如果不确定，请将其保留为 ``false``\\ ，因为大多数文件都是以小端字节序编写的。"
msgstr ""

#: ../classes/class_file.rst:215
msgid "\\ **注意：**\\ :ref:`endian_swap<class_File_property_endian_swap>` 只是文件格式，与 CPU 类型无关。 CPU 字节序不会影响写入文件的默认字节序。"
msgstr ""

#: ../classes/class_file.rst:217
msgid "\\ **注意：**\\ 每当您打开文件时，它总是重置为 ``false``\\ 。因此，必须在\\ *打开文件之后*\\ 设置 :ref:`endian_swap<class_File_property_endian_swap>`\\ ，而不是之前。"
msgstr ""

#: ../classes/class_file.rst:220
msgid "方法说明"
msgstr ""

#: ../classes/class_file.rst:224
msgid "void **close** **(** **)**"
msgstr ""

#: ../classes/class_file.rst:226
msgid "关闭当前打开的文件，并阻止后续的读/写操作。使用 :ref:`flush<class_File_method_flush>` 将数据持久化到磁盘，而不关闭文件。"
msgstr ""

#: ../classes/class_file.rst:232
msgid ":ref:`bool<class_bool>` **eof_reached** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:234
msgid "如果文件光标已经读到了文件的末端，返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_file.rst:236
msgid "\\ **注意：**\\ ``eof_reached() == false`` 不能用来检查是否有更多的数据可用。要在有更多数据可用时进行循环，请使用："
msgstr ""

#: ../classes/class_file.rst:247
msgid ":ref:`bool<class_bool>` **file_exists** **(** :ref:`String<class_String>` path **)** |const|"
msgstr ""

#: ../classes/class_file.rst:249
msgid "如果文件存在于给定的路径中，返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_file.rst:251
msgid "\\ **注意：**\\ 许多资源类型导入后，例如纹理或声音文件，其源资产不会包含在导出的游戏中，因为只使用导入的版本。有关考虑资源重新映射的替代方法，请参阅 :ref:`ResourceLoader.exists<class_ResourceLoader_method_exists>`\\ 。"
msgstr ""

#: ../classes/class_file.rst:257
msgid "void **flush** **(** **)**"
msgstr ""

#: ../classes/class_file.rst:259
msgid "将文件的缓冲区写入磁盘。关闭文件时会自动执行刷新。这意味着您不需要在使用 :ref:`close<class_File_method_close>` 关闭文件之前手动调用 :ref:`flush<class_File_method_flush>`\\ 。尽管如此，即使项目崩溃而不是正常关闭，调用 :ref:`flush<class_File_method_flush>` 仍可用于确保数据安全。"
msgstr ""

#: ../classes/class_file.rst:261
msgid "\\ **注意：**\\ 只有在你真正需要的时候才调用 :ref:`flush<class_File_method_flush>`\\ 。否则，它会由于不断的磁盘写入而降低性能。"
msgstr ""

#: ../classes/class_file.rst:267
msgid ":ref:`int<class_int>` **get_16** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:269
msgid "以整数形式返回文件中接下来的 16 位。请参阅 :ref:`store_16<class_File_method_store_16>`\\ ，以获取有关可以通过这种方式存储和检索哪些值的详细信息。"
msgstr ""

#: ../classes/class_file.rst:275
msgid ":ref:`int<class_int>` **get_32** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:277
msgid "以整数形式返回文件中接下来的 32 位。请参阅\\ :ref:`store_32<class_File_method_store_32>`\\ ，以获取有关可以通过这种方式存储和检索哪些值的详细信息。"
msgstr ""

#: ../classes/class_file.rst:283
msgid ":ref:`int<class_int>` **get_64** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:285
msgid "以整数形式返回文件中接下来的 64 位。请参阅 :ref:`store_64<class_File_method_store_64>`\\ ，以获取有关可以通过这种方式存储和检索哪些值的详细信息。"
msgstr ""

#: ../classes/class_file.rst:291
msgid ":ref:`int<class_int>` **get_8** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:293
msgid "以整数形式返回文件中接下来的 8 位。请参阅 :ref:`store_8<class_File_method_store_8>`\\ ，详细了解哪些值可以通过这种方式存储和检索。"
msgstr ""

#: ../classes/class_file.rst:299
msgid ":ref:`String<class_String>` **get_as_text** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:301
msgid "将整个文件作为 :ref:`String<class_String>` 字符串返回。"
msgstr ""

#: ../classes/class_file.rst:303
#: ../classes/class_file.rst:373
#: ../classes/class_file.rst:399
msgid "将按照 UTF-8 编码解析文本。"
msgstr ""

#: ../classes/class_file.rst:309
msgid ":ref:`PoolByteArray<class_PoolByteArray>` **get_buffer** **(** :ref:`int<class_int>` len **)** |const|"
msgstr ""

#: ../classes/class_file.rst:311
msgid "将文件中接下来的 ``len`` 个字节作为 :ref:`PoolByteArray<class_PoolByteArray>` 返回。"
msgstr ""

#: ../classes/class_file.rst:317
msgid ":ref:`PoolStringArray<class_PoolStringArray>` **get_csv_line** **(** :ref:`String<class_String>` delim=\",\" **)** |const|"
msgstr ""

#: ../classes/class_file.rst:319
msgid "以 CSV（逗号分隔值）格式返回文件的下一个值。您可以传递不同的分隔符 ``delim`` 以使用默认 ``\",\"``\\ （逗号）以外的其他分隔符。此分隔符必须为一个字符长，并且不能是双引号。"
msgstr ""

#: ../classes/class_file.rst:321
msgid "将按照 UTF-8 编码解析文本。如果文本值包含分隔符，则必须用双引号括起来。文本值中的双引号可以通过将它们的出现次数加倍来转义。"
msgstr ""

#: ../classes/class_file.rst:323
msgid "例如，以下 CSV 行是有效的，每行将被正确解析为两个字符串："
msgstr ""

#: ../classes/class_file.rst:331
msgid "请注意第二行如何省略封闭引号，因为它不包含分隔符。然而它\\ *可以*\\ 很好地使用引号，它只是为了演示目的而没有编写。第三行必须使用 ``\"\"`` 来表示每个需要被解释为引号的引号，而不是文本值的结束。"
msgstr ""

#: ../classes/class_file.rst:337
msgid ":ref:`float<class_float>` **get_double** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:339
msgid "将文件中接下来的 64 位作为浮点数返回。"
msgstr ""

#: ../classes/class_file.rst:345
msgid ":ref:`Error<enum_@GlobalScope_Error>` **get_error** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:347
msgid "返回试图执行操作时发生的最后一个错误。请与 :ref:`Error<enum_@GlobalScope_Error>` 中的 ``ERR_FILE_*`` 常量比较。"
msgstr ""

#: ../classes/class_file.rst:353
msgid ":ref:`float<class_float>` **get_float** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:355
msgid "将文件中接下来的 32 位作为浮点数返回。"
msgstr ""

#: ../classes/class_file.rst:361
msgid ":ref:`int<class_int>` **get_len** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:363
msgid "返回该文件的大小，单位为字节。"
msgstr ""

#: ../classes/class_file.rst:369
msgid ":ref:`String<class_String>` **get_line** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:371
msgid "将文件中的下一行作为 :ref:`String<class_String>` 字符串返回。"
msgstr ""

#: ../classes/class_file.rst:379
msgid ":ref:`String<class_String>` **get_md5** **(** :ref:`String<class_String>` path **)** |const|"
msgstr ""

#: ../classes/class_file.rst:381
msgid "返回一个给定路径文件的MD5字符串，如果失败则返回一个空的\\ :ref:`String<class_String>`\\ 。"
msgstr ""

#: ../classes/class_file.rst:387
msgid ":ref:`int<class_int>` **get_modified_time** **(** :ref:`String<class_String>` file **)** |const|"
msgstr ""

#: ../classes/class_file.rst:389
msgid "返回unix格式的时间戳\\ ``file``\\ 为文件的最后修改时间，或者返回一个\\ :ref:`String<class_String>`\"ERROR IN ``file``\"。这个unix时间戳可以通过使用\\ :ref:`OS.get_datetime_from_unix_time<class_OS_method_get_datetime_from_unix_time>`\\ 转换为数据时间。"
msgstr ""

#: ../classes/class_file.rst:395
msgid ":ref:`String<class_String>` **get_pascal_string** **(** **)**"
msgstr ""

#: ../classes/class_file.rst:397
msgid "返回文件中按照 Pascal 格式保存的 :ref:`String<class_String>` 字符串。"
msgstr ""

#: ../classes/class_file.rst:405
msgid ":ref:`String<class_String>` **get_path** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:407
msgid "返回当前打开的文件的路径为\\ :ref:`String<class_String>`\\ 。"
msgstr ""

#: ../classes/class_file.rst:413
msgid ":ref:`String<class_String>` **get_path_absolute** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:415
msgid "返回当前打开的文件的绝对路径为\\ :ref:`String<class_String>`\\ 。"
msgstr ""

#: ../classes/class_file.rst:421
msgid ":ref:`int<class_int>` **get_position** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:423
msgid "返回文件光标的位置。"
msgstr ""

#: ../classes/class_file.rst:429
msgid ":ref:`float<class_float>` **get_real** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:431
msgid "将文件中接下来的若干位以浮点数形式返回。"
msgstr ""

#: ../classes/class_file.rst:437
msgid ":ref:`String<class_String>` **get_sha256** **(** :ref:`String<class_String>` path **)** |const|"
msgstr ""

#: ../classes/class_file.rst:439
msgid "返回一个给定路径的文件的 SHA-256 字符串，如果失败则返回一个空的 :ref:`String<class_String>`\\ 。"
msgstr ""

#: ../classes/class_file.rst:445
msgid ":ref:`Variant<class_Variant>` **get_var** **(** :ref:`bool<class_bool>` allow_objects=false **)** |const|"
msgstr ""

#: ../classes/class_file.rst:447
msgid "返回文件中的下一个 :ref:`Variant<class_Variant>` 值。\\ ``allow_objects`` 为 ``true`` 时允许对对象进行解码。"
msgstr ""

#: ../classes/class_file.rst:449
msgid "\\ **警告：**\\ 反序列化得到的对象可能包含被执行的代码。如果序列化的对象来自不受信任的来源，请不要使用这个选项，以避免潜在的安全威胁，如远程代码执行。"
msgstr ""

#: ../classes/class_file.rst:455
msgid ":ref:`bool<class_bool>` **is_open** **(** **)** |const|"
msgstr ""

#: ../classes/class_file.rst:457
msgid "如果文件当前被打开，返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_file.rst:463
msgid ":ref:`Error<enum_@GlobalScope_Error>` **open** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` flags **)**"
msgstr ""

#: ../classes/class_file.rst:465
msgid "打开文件进行写入或读取，取决于标志。"
msgstr ""

#: ../classes/class_file.rst:471
msgid ":ref:`Error<enum_@GlobalScope_Error>` **open_compressed** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`CompressionMode<enum_File_CompressionMode>` compression_mode=0 **)**"
msgstr ""

#: ../classes/class_file.rst:473
msgid "打开压缩文件进行读取或写入。"
msgstr ""

#: ../classes/class_file.rst:475
msgid "\\ **注意：** :ref:`open_compressed<class_File_method_open_compressed>` 只能读取GaaeExplorer保存的文件，不能读取第三方压缩格式。有关解决方法，请参阅 ` GitHub 问题 #28999 <https://github.com/godotengine/godot/issues/28999>`__\\ 。"
msgstr ""

#: ../classes/class_file.rst:481
msgid ":ref:`Error<enum_@GlobalScope_Error>` **open_encrypted** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`PoolByteArray<class_PoolByteArray>` key **)**"
msgstr ""

#: ../classes/class_file.rst:483
msgid "以写或读的模式打开一个加密文件。你需要传递一个二进制密钥来加密/解密它。"
msgstr ""

#: ../classes/class_file.rst:485
msgid "\\ **注意：** 提供的密钥必须是32字节长。"
msgstr ""

#: ../classes/class_file.rst:491
msgid ":ref:`Error<enum_@GlobalScope_Error>` **open_encrypted_with_pass** **(** :ref:`String<class_String>` path, :ref:`ModeFlags<enum_File_ModeFlags>` mode_flags, :ref:`String<class_String>` pass **)**"
msgstr ""

#: ../classes/class_file.rst:493
msgid "以写或读的方式打开一个加密的文件。你需要传递一个密码来加密/解密它。"
msgstr ""

#: ../classes/class_file.rst:499
msgid "void **seek** **(** :ref:`int<class_int>` position **)**"
msgstr ""

#: ../classes/class_file.rst:501
msgid "将文件的读/写光标改变到指定的位置（从文件开始的字节数）。"
msgstr ""

#: ../classes/class_file.rst:507
msgid "void **seek_end** **(** :ref:`int<class_int>` position=0 **)**"
msgstr ""

#: ../classes/class_file.rst:509
msgid "将文件的读/写光标改变到指定的位置（从文件的末端算起，以字节为单位）。"
msgstr ""

#: ../classes/class_file.rst:511
msgid "\\ **注意：**\\ 这是一个偏移量，所以你应该使用负数，否则光标会在文件的末端。"
msgstr ""

#: ../classes/class_file.rst:517
msgid "void **store_16** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:519
msgid "将一个整数以 16 位形式存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:521
msgid "\\ **注意：**\\ ``value`` 应该位于 ``[0, 2^16 - 1]`` 区间内。任何其他的值都会溢出并进行环绕。"
msgstr ""

#: ../classes/class_file.rst:523
msgid "要存储有符号的整数，请使用 :ref:`store_64<class_File_method_store_64>` 或者从区间 ``[-2^15, 2^15 - 1]`` 中存储一个有符号的整数（即保留一位作为有符号），在读取时手动计算其符号。比如说"
msgstr ""

#: ../classes/class_file.rst:548
msgid "void **store_32** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:550
msgid "将一个整数以 32 位形式存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:552
msgid "\\ **注意：**\\ ``value`` 应该位于 ``[0, 2^32 - 1]`` 区间内。任何其他的值都会溢出并环绕。"
msgstr ""

#: ../classes/class_file.rst:554
#: ../classes/class_file.rst:576
msgid "要存储有符号的整数，请使用 :ref:`store_64<class_File_method_store_64>`\\ ，或者手动转换（见 :ref:`store_16<class_File_method_store_16>` 的例子）。"
msgstr ""

#: ../classes/class_file.rst:560
msgid "void **store_64** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:562
msgid "将一个整数以 64 位形式存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:564
msgid "\\ **注意：**\\ ``value`` 必须位于 ``[-2^63, 2^63 - 1]`` 的区间内（即有效的 :ref:`int<class_int>` 值）。"
msgstr ""

#: ../classes/class_file.rst:570
msgid "void **store_8** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_file.rst:572
msgid "将一个整数以 8 位形式存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:574
msgid "\\ **注意：**\\ ``value`` 应该位于 ``[0, 255]`` 的区间内。任何其他的值都会溢出并环绕。"
msgstr ""

#: ../classes/class_file.rst:582
msgid "void **store_buffer** **(** :ref:`PoolByteArray<class_PoolByteArray>` buffer **)**"
msgstr ""

#: ../classes/class_file.rst:584
msgid "在文件中存储给定的字节数组。"
msgstr ""

#: ../classes/class_file.rst:590
msgid "void **store_csv_line** **(** :ref:`PoolStringArray<class_PoolStringArray>` values, :ref:`String<class_String>` delim=\",\" **)**"
msgstr ""

#: ../classes/class_file.rst:592
msgid "将给定的 :ref:`PoolStringArray<class_PoolStringArray>` 作为 CSV（逗号分隔值）格式的行存储在文件中。您可以传递不同的分隔符 ``delim`` 以使用默认 ``\",\"``\\ （逗号）以外的其他分隔符。此分隔符的长度必须为一个字符。"
msgstr ""

#: ../classes/class_file.rst:594
msgid "将使用 UTF-8 编码文本。"
msgstr ""

#: ../classes/class_file.rst:600
msgid "void **store_double** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_file.rst:602
msgid "将一个浮点数以 64 位形式存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:608
msgid "void **store_float** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_file.rst:610
msgid "将一个浮点数以 32 位形式存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:616
msgid "void **store_line** **(** :ref:`String<class_String>` line **)**"
msgstr ""

#: ../classes/class_file.rst:618
msgid "Appends ``line`` to the file followed by a line return character (``\\n``), encoding the text as UTF-8."
msgstr ""

#: ../classes/class_file.rst:624
msgid "void **store_pascal_string** **(** :ref:`String<class_String>` string **)**"
msgstr ""

#: ../classes/class_file.rst:626
msgid "将给定的\\ :ref:`String<class_String>`\\ 以Pascal格式存储在文件中（例如，也将字符串长度存储）。"
msgstr ""

#: ../classes/class_file.rst:628
msgid "文本将被编码为UTF-8。"
msgstr ""

#: ../classes/class_file.rst:634
msgid "void **store_real** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_file.rst:636
msgid "将浮点数存储在文件中。"
msgstr ""

#: ../classes/class_file.rst:642
msgid "void **store_string** **(** :ref:`String<class_String>` string **)**"
msgstr ""

#: ../classes/class_file.rst:644
msgid "将 ``string`` 字符串追加到文件中，不带换行，文本将被编码为 UTF-8。"
msgstr ""

#: ../classes/class_file.rst:646
msgid "\\ **注意：**\\ 本方法是为写入文本文件准备的。字符串会被存储为 UTF-8 编码的缓冲区，不带字符串长度或末尾零，所以无法轻易读回。如果你想要在二进制文件中存储可取回的字符串，请考虑换用 :ref:`store_pascal_string<class_File_method_store_pascal_string>`\\ 。要从文本文件中获取字符串，你可以使用 ``get_buffer(length).get_string_from_utf8()``\\ （需要已知长度）或 :ref:`get_as_text<class_File_method_get_as_text>`\\ 。"
msgstr ""

#: ../classes/class_file.rst:652
msgid "void **store_var** **(** :ref:`Variant<class_Variant>` value, :ref:`bool<class_bool>` full_objects=false **)**"
msgstr ""

#: ../classes/class_file.rst:654
msgid "在文件中存储任何 Variant 变量值。如果 ``full_objects`` 是 ``true``\\ ，则允许编码对象（并且可能包含代码）。"
msgstr ""

#: ../classes/class_file.rst:656
msgid "\\ **注意：** 并非所有属性都包括在内。只有使用 :ref:`@GlobalScope.PROPERTY_USAGE_STORAGE<class_@GlobalScope_constant_PROPERTY_USAGE_STORAGE>` 标志集配置的属性才会被序列化。您可以通过覆盖类中的 :ref:`Object._get_property_list<class_Object_method__get_property_list>` 方法向属性添加新的使用标志。您还可以通过调用 :ref:`Object._get_property_list<class_Object_method__get_property_list>` 来检查属性使用是如何配置的。有关可能的使用标志，请参阅 :ref:`PropertyUsageFlags<enum_@GlobalScope_PropertyUsageFlags>`\\ 。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
