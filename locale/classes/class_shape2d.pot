# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_shape2d.rst:10
msgid "Shape2D"
msgstr ""

#: ../classes/class_shape2d.rst:12
msgid "**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_shape2d.rst:14
msgid "**Inherited By:** :ref:`CapsuleShape2D<class_CapsuleShape2D>`, :ref:`CircleShape2D<class_CircleShape2D>`, :ref:`ConcavePolygonShape2D<class_ConcavePolygonShape2D>`, :ref:`ConvexPolygonShape2D<class_ConvexPolygonShape2D>`, :ref:`LineShape2D<class_LineShape2D>`, :ref:`RayShape2D<class_RayShape2D>`, :ref:`RectangleShape2D<class_RectangleShape2D>`, :ref:`SegmentShape2D<class_SegmentShape2D>`"
msgstr ""

#: ../classes/class_shape2d.rst:16
msgid "所有2D形状的基类。"
msgstr ""

#: ../classes/class_shape2d.rst:19
msgid "描述"
msgstr ""

#: ../classes/class_shape2d.rst:21
msgid "所有2D形状的基类。所有的2D形状类型都继承于此。"
msgstr ""

#: ../classes/class_shape2d.rst:24
msgid "教程"
msgstr ""

#: ../classes/class_shape2d.rst:26
msgid ":doc:`../tutorials/physics/physics_introduction`"
msgstr ""

#: ../classes/class_shape2d.rst:29
msgid "属性"
msgstr ""

#: ../classes/class_shape2d.rst:32
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_shape2d.rst:32
msgid ":ref:`custom_solver_bias<class_Shape2D_property_custom_solver_bias>`"
msgstr ""

#: ../classes/class_shape2d.rst:32
#: ../classes/class_shape2d.rst:58
msgid "``0.0``"
msgstr ""

#: ../classes/class_shape2d.rst:36
msgid "方法"
msgstr ""

#: ../classes/class_shape2d.rst:39
#: ../classes/class_shape2d.rst:43
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_shape2d.rst:39
msgid ":ref:`collide<class_Shape2D_method_collide>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**"
msgstr ""

#: ../classes/class_shape2d.rst:41
#: ../classes/class_shape2d.rst:45
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_shape2d.rst:41
msgid ":ref:`collide_and_get_contacts<class_Shape2D_method_collide_and_get_contacts>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**"
msgstr ""

#: ../classes/class_shape2d.rst:43
msgid ":ref:`collide_with_motion<class_Shape2D_method_collide_with_motion>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**"
msgstr ""

#: ../classes/class_shape2d.rst:45
msgid ":ref:`collide_with_motion_and_get_contacts<class_Shape2D_method_collide_with_motion_and_get_contacts>` **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**"
msgstr ""

#: ../classes/class_shape2d.rst:47
msgid "void"
msgstr ""

#: ../classes/class_shape2d.rst:47
msgid ":ref:`draw<class_Shape2D_method_draw>` **(** :ref:`RID<class_RID>` canvas_item, :ref:`Color<class_Color>` color **)**"
msgstr ""

#: ../classes/class_shape2d.rst:51
msgid "属性说明"
msgstr ""

#: ../classes/class_shape2d.rst:55
msgid ":ref:`float<class_float>` **custom_solver_bias**"
msgstr ""

#: ../classes/class_shape2d.rst:58
msgid "*Default*"
msgstr ""

#: ../classes/class_shape2d.rst:60
msgid "*Setter*"
msgstr ""

#: ../classes/class_shape2d.rst:60
msgid "set_custom_solver_bias(value)"
msgstr ""

#: ../classes/class_shape2d.rst:62
msgid "*Getter*"
msgstr ""

#: ../classes/class_shape2d.rst:62
msgid "get_custom_solver_bias()"
msgstr ""

#: ../classes/class_shape2d.rst:65
msgid "形状的自定义求解器偏差。"
msgstr ""

#: ../classes/class_shape2d.rst:68
msgid "方法说明"
msgstr ""

#: ../classes/class_shape2d.rst:72
msgid ":ref:`bool<class_bool>` **collide** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**"
msgstr ""

#: ../classes/class_shape2d.rst:74
msgid "如果这个形状与另一个形状发生碰撞，返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_shape2d.rst:76
#: ../classes/class_shape2d.rst:86
msgid "这个方法需要这个形状的变换矩阵（\\ ``local_xform``\\ ），要检查碰撞的形状（\\ ``with_shape``\\ ），以及那个形状的变换矩阵（\\ ``shape_xform``\\ ）。"
msgstr ""

#: ../classes/class_shape2d.rst:82
msgid ":ref:`Array<class_Array>` **collide_and_get_contacts** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform **)**"
msgstr ""

#: ../classes/class_shape2d.rst:84
msgid "返回这个形状与另一个形状相接触的点的列表。如果没有碰撞，则列表为空。"
msgstr ""

#: ../classes/class_shape2d.rst:92
msgid ":ref:`bool<class_bool>` **collide_with_motion** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**"
msgstr ""

#: ../classes/class_shape2d.rst:94
msgid "如果应用一个给定的运动，返回这个形状是否会与另一个形状发生碰撞。"
msgstr ""

#: ../classes/class_shape2d.rst:96
msgid "这个方法需要这个形状的变换矩阵（\\ ``local_xform``\\ ），要在这个形状上测试的运动（\\ ``local_motion``\\ ），检查碰撞的形状（\\ ``with_shape``\\ ），那个形状的变换矩阵（\\ ``shape_xform``\\ ），以及用于测试其他物体的运动（\\ ``shape_motion``\\ ）。"
msgstr ""

#: ../classes/class_shape2d.rst:102
msgid ":ref:`Array<class_Array>` **collide_with_motion_and_get_contacts** **(** :ref:`Transform2D<class_Transform2D>` local_xform, :ref:`Vector2<class_Vector2>` local_motion, :ref:`Shape2D<class_Shape2D>` with_shape, :ref:`Transform2D<class_Transform2D>` shape_xform, :ref:`Vector2<class_Vector2>` shape_motion **)**"
msgstr ""

#: ../classes/class_shape2d.rst:104
msgid "如果应用了给定的移动，则返回此形状将与另一个形状接触的点的列表。如果没有碰撞，则列表为空。"
msgstr ""

#: ../classes/class_shape2d.rst:106
msgid "这个方法需要这个形状的变换矩阵（\\ ``local_xform``\\ ），这个形状上测试的运动（\\ ``local_motion``\\ ），检查碰撞的形状（\\ ``with_shape`` )、那个形状的变换矩阵 (``shape_xform``)，以及在另一个对象上测试的运动 (``shape_motion``)。"
msgstr ""

#: ../classes/class_shape2d.rst:112
msgid "void **draw** **(** :ref:`RID<class_RID>` canvas_item, :ref:`Color<class_Color>` color **)**"
msgstr ""

#: ../classes/class_shape2d.rst:114
msgid "用\\ :ref:`VisualServer<class_VisualServer>`\\ API在\\ :ref:`CanvasItem<class_CanvasItem>`\\ 上绘制实体形状，并填充指定的\\ ``color``\\ 。确切的绘制方法是每个形状特有的，无法配置。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
