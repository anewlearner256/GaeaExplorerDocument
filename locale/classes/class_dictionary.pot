# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_dictionary.rst:10
msgid "Dictionary"
msgstr ""

#: ../classes/class_dictionary.rst:12
msgid "字典类型。"
msgstr ""

#: ../classes/class_dictionary.rst:15
msgid "描述"
msgstr ""

#: ../classes/class_dictionary.rst:17
msgid "字典类型。关联容器，包含由唯一键引用的值。字典由键（必须是唯一的）和值对组成。当添加元素时，字典将保留插入顺序，即使在打印字典时可能不会反映出来。在其他编程语言中，这种数据结构有时被称为哈希表或关联数组。"
msgstr ""

#: ../classes/class_dictionary.rst:19
msgid "您可以通过在大括号 ``{}`` 中放置一个以逗号分隔的 ``key: value`` 对的列表来定义一个字典。"
msgstr ""

#: ../classes/class_dictionary.rst:21
msgid "\\ **不支持**\\ 在迭代元素时擦除元素，会导致未定义行为。"
msgstr ""

#: ../classes/class_dictionary.rst:23
msgid "\\ **注意：**\\ 字典总是通过引用传递的。要获得一个可以独立于原始字典进行修改的字典副本，请使用 :ref:`duplicate<class_Dictionary_method_duplicate>`\\ 。"
msgstr ""

#: ../classes/class_dictionary.rst:25
msgid "创建字典："
msgstr ""

#: ../classes/class_dictionary.rst:48
msgid "你可以通过引用合适的键来访问一个字典。在上方的示例中，\\ ``points_dir[\"White\"]`` 会返回 ``50``\\ 。你也可以写成 ``points_dir.White``\\ ，效果都是相同的。但是如果你需要访问的键不是一个固定的字符串（比如数字或变量）时，你需要使用方括号。"
msgstr ""

#: ../classes/class_dictionary.rst:58
msgid "在上方的代码中，\\ ``points`` 会被赋值为 ``my_color``\\ 中选取的颜色。"
msgstr ""

#: ../classes/class_dictionary.rst:60
msgid "字典可以容纳更加复杂的数据："
msgstr ""

#: ../classes/class_dictionary.rst:66
msgid "如果想要给字典添加一个键，可以像访问已有的键一样："
msgstr ""

#: ../classes/class_dictionary.rst:73
msgid "最终，同一个字典内可以容纳不同类型的键和值："
msgstr ""

#: ../classes/class_dictionary.rst:87
msgid "\\ **注意：**\\ 和数组不同的是，你不能直接进行字典对比："
msgstr ""

#: ../classes/class_dictionary.rst:103
msgid "想要对比字典，首先需要用 :ref:`hash<class_Dictionary_method_hash>` 计算字典哈希。"
msgstr ""

#: ../classes/class_dictionary.rst:113
msgid "\\ **注意：**\\ 当使用 ``const`` 来声明字典时，字典本身依然可以通过定义键的数值来进行修改。使用 ``const`` 只能防止在它初始化完成后被给予另一个数值。"
msgstr ""

#: ../classes/class_dictionary.rst:116
msgid "教程"
msgstr ""

#: ../classes/class_dictionary.rst:118
msgid "`GDScript basics: Dictionary <../tutorials/scripting/gdscript/gdscript_basics.html#dictionary>`__"
msgstr ""

#: ../classes/class_dictionary.rst:120
msgid "`3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__"
msgstr ""

#: ../classes/class_dictionary.rst:122
msgid "`OS Test Demo <https://godotengine.org/asset-library/asset/677>`__"
msgstr ""

#: ../classes/class_dictionary.rst:125
msgid "方法"
msgstr ""

#: ../classes/class_dictionary.rst:128
msgid "void"
msgstr ""

#: ../classes/class_dictionary.rst:128
msgid ":ref:`clear<class_Dictionary_method_clear>` **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:130
msgid ":ref:`Dictionary<class_Dictionary>`"
msgstr ""

#: ../classes/class_dictionary.rst:130
msgid ":ref:`duplicate<class_Dictionary_method_duplicate>` **(** :ref:`bool<class_bool>` deep=false **)**"
msgstr ""

#: ../classes/class_dictionary.rst:132
#: ../classes/class_dictionary.rst:134
#: ../classes/class_dictionary.rst:138
#: ../classes/class_dictionary.rst:140
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_dictionary.rst:132
msgid ":ref:`empty<class_Dictionary_method_empty>` **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:134
msgid ":ref:`erase<class_Dictionary_method_erase>` **(** :ref:`Variant<class_Variant>` key **)**"
msgstr ""

#: ../classes/class_dictionary.rst:136
msgid ":ref:`Variant<class_Variant>`"
msgstr ""

#: ../classes/class_dictionary.rst:136
msgid ":ref:`get<class_Dictionary_method_get>` **(** :ref:`Variant<class_Variant>` key, :ref:`Variant<class_Variant>` default=null **)**"
msgstr ""

#: ../classes/class_dictionary.rst:138
msgid ":ref:`has<class_Dictionary_method_has>` **(** :ref:`Variant<class_Variant>` key **)**"
msgstr ""

#: ../classes/class_dictionary.rst:140
msgid ":ref:`has_all<class_Dictionary_method_has_all>` **(** :ref:`Array<class_Array>` keys **)**"
msgstr ""

#: ../classes/class_dictionary.rst:142
#: ../classes/class_dictionary.rst:146
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_dictionary.rst:142
msgid ":ref:`hash<class_Dictionary_method_hash>` **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:144
#: ../classes/class_dictionary.rst:148
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_dictionary.rst:144
msgid ":ref:`keys<class_Dictionary_method_keys>` **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:146
msgid ":ref:`size<class_Dictionary_method_size>` **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:148
msgid ":ref:`values<class_Dictionary_method_values>` **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:152
msgid "方法说明"
msgstr ""

#: ../classes/class_dictionary.rst:156
msgid "void **clear** **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:158
msgid "清除字典，删除所有键/值对。"
msgstr ""

#: ../classes/class_dictionary.rst:164
msgid ":ref:`Dictionary<class_Dictionary>` **duplicate** **(** :ref:`bool<class_bool>` deep=false **)**"
msgstr ""

#: ../classes/class_dictionary.rst:166
msgid "创建一个字典的副本，并返回它。\\ ``deep`` 参数使内部字典和数组被递归复制，但不适用于对象。"
msgstr ""

#: ../classes/class_dictionary.rst:172
msgid ":ref:`bool<class_bool>` **empty** **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:174
msgid "如果字典为空，返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_dictionary.rst:180
msgid ":ref:`bool<class_bool>` **erase** **(** :ref:`Variant<class_Variant>` key **)**"
msgstr ""

#: ../classes/class_dictionary.rst:182
msgid "依据key擦除字典的键值对。如果指定的 key 存在于字典中，返回 ``true`` ，否则返回 ``false`` 。"
msgstr ""

#: ../classes/class_dictionary.rst:184
msgid "\\ **注意:** 在迭代字典时不要擦除元素。可以迭代 :ref:`keys<class_Dictionary_method_keys>` 数组。"
msgstr ""

#: ../classes/class_dictionary.rst:190
msgid ":ref:`Variant<class_Variant>` **get** **(** :ref:`Variant<class_Variant>` key, :ref:`Variant<class_Variant>` default=null **)**"
msgstr ""

#: ../classes/class_dictionary.rst:192
msgid "返回\\ ``Dictionary``\\ 中指定键的当前值。如果键不存在，则该方法返回可选默认参数的值；如果省略，则返回\\ ``null``\\ 。"
msgstr ""

#: ../classes/class_dictionary.rst:198
msgid ":ref:`bool<class_bool>` **has** **(** :ref:`Variant<class_Variant>` key **)**"
msgstr ""

#: ../classes/class_dictionary.rst:200
msgid "如果字典有一个给定的键，返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_dictionary.rst:202
msgid "\\ **注：** 这相当于使用\\ ``in``\\ 运算符，如下所示。"
msgstr ""

#: ../classes/class_dictionary.rst:210
msgid "只要键存在，即使相关的值是\\ ``null``\\ ，这个方法（就像\\ ``in``\\ 运算符一样）也会评估为\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_dictionary.rst:216
msgid ":ref:`bool<class_bool>` **has_all** **(** :ref:`Array<class_Array>` keys **)**"
msgstr ""

#: ../classes/class_dictionary.rst:218
msgid "如果字典具有给定数组中的所有键，则返回 ``true`` 。"
msgstr ""

#: ../classes/class_dictionary.rst:224
msgid ":ref:`int<class_int>` **hash** **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:226
msgid "返回一个代表字典内容的哈希整数值。这可以用来比较字典的值。"
msgstr ""

#: ../classes/class_dictionary.rst:235
msgid "\\ **注意：**\\ 具有相同键/值但顺序不同的字典将有不同的哈希值。"
msgstr ""

#: ../classes/class_dictionary.rst:241
msgid ":ref:`Array<class_Array>` **keys** **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:243
msgid "返回\\ ``Dictionary``\\ 中的键列表。"
msgstr ""

#: ../classes/class_dictionary.rst:249
msgid ":ref:`int<class_int>` **size** **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:251
msgid "返回字典中键的数量。"
msgstr ""

#: ../classes/class_dictionary.rst:257
msgid ":ref:`Array<class_Array>` **values** **(** **)**"
msgstr ""

#: ../classes/class_dictionary.rst:259
msgid "返回\\ ``Dictionary``\\ 中的值列表。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
