# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_regexmatch.rst:10
msgid "RegExMatch"
msgstr ""

#: ../classes/class_regexmatch.rst:12
msgid "**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_regexmatch.rst:14
msgid "包含\\ :ref:`RegEx<class_RegEx>`\\ 搜索的结果。"
msgstr ""

#: ../classes/class_regexmatch.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_regexmatch.rst:19
msgid "包含由\\ :ref:`RegEx.search<class_RegEx_method_search>`\\ 和\\ :ref:`RegEx.search_all<class_RegEx_method_search_all>`\\ 返回的单个\\ :ref:`RegEx<class_RegEx>`\\ 匹配结果。它可以用来查找匹配的位置和范围以及它的捕获组，并且可以提取其子字符串。"
msgstr ""

#: ../classes/class_regexmatch.rst:22
msgid "属性"
msgstr ""

#: ../classes/class_regexmatch.rst:25
msgid ":ref:`Dictionary<class_Dictionary>`"
msgstr ""

#: ../classes/class_regexmatch.rst:25
msgid ":ref:`names<class_RegExMatch_property_names>`"
msgstr ""

#: ../classes/class_regexmatch.rst:25
#: ../classes/class_regexmatch.rst:53
msgid "``{}``"
msgstr ""

#: ../classes/class_regexmatch.rst:27
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_regexmatch.rst:27
msgid ":ref:`strings<class_RegExMatch_property_strings>`"
msgstr ""

#: ../classes/class_regexmatch.rst:27
#: ../classes/class_regexmatch.rst:67
msgid "``[  ]``"
msgstr ""

#: ../classes/class_regexmatch.rst:29
#: ../classes/class_regexmatch.rst:42
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_regexmatch.rst:29
msgid ":ref:`subject<class_RegExMatch_property_subject>`"
msgstr ""

#: ../classes/class_regexmatch.rst:29
#: ../classes/class_regexmatch.rst:81
msgid "``\"\"``"
msgstr ""

#: ../classes/class_regexmatch.rst:33
msgid "方法"
msgstr ""

#: ../classes/class_regexmatch.rst:36
#: ../classes/class_regexmatch.rst:38
#: ../classes/class_regexmatch.rst:40
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_regexmatch.rst:36
msgid ":ref:`get_end<class_RegExMatch_method_get_end>` **(** :ref:`Variant<class_Variant>` name=0 **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:38
msgid ":ref:`get_group_count<class_RegExMatch_method_get_group_count>` **(** **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:40
msgid ":ref:`get_start<class_RegExMatch_method_get_start>` **(** :ref:`Variant<class_Variant>` name=0 **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:42
msgid ":ref:`get_string<class_RegExMatch_method_get_string>` **(** :ref:`Variant<class_Variant>` name=0 **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:46
msgid "属性说明"
msgstr ""

#: ../classes/class_regexmatch.rst:50
msgid ":ref:`Dictionary<class_Dictionary>` **names**"
msgstr ""

#: ../classes/class_regexmatch.rst:53
#: ../classes/class_regexmatch.rst:67
#: ../classes/class_regexmatch.rst:81
msgid "*Default*"
msgstr ""

#: ../classes/class_regexmatch.rst:55
#: ../classes/class_regexmatch.rst:69
#: ../classes/class_regexmatch.rst:83
msgid "*Getter*"
msgstr ""

#: ../classes/class_regexmatch.rst:55
msgid "get_names()"
msgstr ""

#: ../classes/class_regexmatch.rst:58
msgid "一个命名组的字典和它相应的组号。只有被匹配的组才被包括在内。如果多个组有相同的名称，该名称将指第一个匹配的组。"
msgstr ""

#: ../classes/class_regexmatch.rst:64
msgid ":ref:`Array<class_Array>` **strings**"
msgstr ""

#: ../classes/class_regexmatch.rst:69
msgid "get_strings()"
msgstr ""

#: ../classes/class_regexmatch.rst:72
msgid "匹配项及其捕获组的 :ref:`Array<class_Array>`\\ 。"
msgstr ""

#: ../classes/class_regexmatch.rst:78
msgid ":ref:`String<class_String>` **subject**"
msgstr ""

#: ../classes/class_regexmatch.rst:83
msgid "get_subject()"
msgstr ""

#: ../classes/class_regexmatch.rst:86
msgid "与搜索模式一起使用的源字符串，以找到这个匹配结果。"
msgstr ""

#: ../classes/class_regexmatch.rst:89
msgid "方法说明"
msgstr ""

#: ../classes/class_regexmatch.rst:93
msgid ":ref:`int<class_int>` **get_end** **(** :ref:`Variant<class_Variant>` name=0 **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:95
msgid "返回源字符串中匹配的结束位置。捕获组的结束位置可以通过提供其组号的整数或其字符串名称（如果它是一个命名组）来检索。默认值为0，指的是整个表达式。"
msgstr ""

#: ../classes/class_regexmatch.rst:97
msgid "如果该组没有匹配或不存在，则返回-1。"
msgstr ""

#: ../classes/class_regexmatch.rst:103
msgid ":ref:`int<class_int>` **get_group_count** **(** **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:105
msgid "返回捕获组的数量。"
msgstr ""

#: ../classes/class_regexmatch.rst:111
msgid ":ref:`int<class_int>` **get_start** **(** :ref:`Variant<class_Variant>` name=0 **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:113
msgid "返回源字符串中匹配的起始位置。捕获组的起始位置可以通过提供它的组号作为一个整数或它的字符串名称（如果它是一个命名组）来检索。默认值为0，指的是整个表达式。"
msgstr ""

#: ../classes/class_regexmatch.rst:115
msgid "如果组没有匹配或不存在，返回-1。"
msgstr ""

#: ../classes/class_regexmatch.rst:121
msgid ":ref:`String<class_String>` **get_string** **(** :ref:`Variant<class_Variant>` name=0 **)** |const|"
msgstr ""

#: ../classes/class_regexmatch.rst:123
msgid "返回源字符串中匹配的子串。捕获组可以通过提供它的组号作为整数或它的字符串名称（如果它是一个命名组）来检索。默认值为0，指的是整个表达式。"
msgstr ""

#: ../classes/class_regexmatch.rst:125
msgid "如果组没有匹配或不存在，则返回一个空字符串。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
