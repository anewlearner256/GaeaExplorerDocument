# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_arvrserver.rst:10
msgid "ARVRServer"
msgstr ""

#: ../classes/class_arvrserver.rst:12
msgid "**Inherits:** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_arvrserver.rst:14
msgid "AR 和 VR 功能的服务。"
msgstr ""

#: ../classes/class_arvrserver.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_arvrserver.rst:19
msgid "AR/VR服务是我们高级的虚拟现实解决方案的核心，负责处理所有的过程。"
msgstr ""

#: ../classes/class_arvrserver.rst:22
msgid "教程"
msgstr ""

#: ../classes/class_arvrserver.rst:24
msgid ":doc:`../tutorials/vr/index`"
msgstr ""

#: ../classes/class_arvrserver.rst:27
msgid "属性"
msgstr ""

#: ../classes/class_arvrserver.rst:30
#: ../classes/class_arvrserver.rst:47
#: ../classes/class_arvrserver.rst:51
msgid ":ref:`ARVRInterface<class_ARVRInterface>`"
msgstr ""

#: ../classes/class_arvrserver.rst:30
msgid ":ref:`primary_interface<class_ARVRServer_property_primary_interface>`"
msgstr ""

#: ../classes/class_arvrserver.rst:32
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_arvrserver.rst:32
msgid ":ref:`world_scale<class_ARVRServer_property_world_scale>`"
msgstr ""

#: ../classes/class_arvrserver.rst:32
#: ../classes/class_arvrserver.rst:178
msgid "``1.0``"
msgstr ""

#: ../classes/class_arvrserver.rst:36
msgid "方法"
msgstr ""

#: ../classes/class_arvrserver.rst:39
#: ../classes/class_arvrserver.rst:41
#: ../classes/class_arvrserver.rst:43
#: ../classes/class_arvrserver.rst:45
#: ../classes/class_arvrserver.rst:69
#: ../classes/class_arvrserver.rst:71
msgid "void"
msgstr ""

#: ../classes/class_arvrserver.rst:39
msgid ":ref:`add_interface<class_ARVRServer_method_add_interface>` **(** :ref:`ARVRInterface<class_ARVRInterface>` interface **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:41
msgid ":ref:`add_tracker<class_ARVRServer_method_add_tracker>` **(** :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` tracker **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:43
msgid ":ref:`center_on_hmd<class_ARVRServer_method_center_on_hmd>` **(** :ref:`RotationMode<enum_ARVRServer_RotationMode>` rotation_mode, :ref:`bool<class_bool>` keep_height **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:45
msgid ":ref:`clear_primary_interface_if<class_ARVRServer_method_clear_primary_interface_if>` **(** :ref:`ARVRInterface<class_ARVRInterface>` interface **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:47
msgid ":ref:`find_interface<class_ARVRServer_method_find_interface>` **(** :ref:`String<class_String>` name **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:49
#: ../classes/class_arvrserver.rst:63
msgid ":ref:`Transform<class_Transform>`"
msgstr ""

#: ../classes/class_arvrserver.rst:49
msgid ":ref:`get_hmd_transform<class_ARVRServer_method_get_hmd_transform>` **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:51
msgid ":ref:`get_interface<class_ARVRServer_method_get_interface>` **(** :ref:`int<class_int>` idx **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:53
#: ../classes/class_arvrserver.rst:57
#: ../classes/class_arvrserver.rst:59
#: ../classes/class_arvrserver.rst:61
#: ../classes/class_arvrserver.rst:67
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_arvrserver.rst:53
msgid ":ref:`get_interface_count<class_ARVRServer_method_get_interface_count>` **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:55
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_arvrserver.rst:55
msgid ":ref:`get_interfaces<class_ARVRServer_method_get_interfaces>` **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:57
msgid ":ref:`get_last_commit_usec<class_ARVRServer_method_get_last_commit_usec>` **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:59
msgid ":ref:`get_last_frame_usec<class_ARVRServer_method_get_last_frame_usec>` **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:61
msgid ":ref:`get_last_process_usec<class_ARVRServer_method_get_last_process_usec>` **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:63
msgid ":ref:`get_reference_frame<class_ARVRServer_method_get_reference_frame>` **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:65
msgid ":ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>`"
msgstr ""

#: ../classes/class_arvrserver.rst:65
msgid ":ref:`get_tracker<class_ARVRServer_method_get_tracker>` **(** :ref:`int<class_int>` idx **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:67
msgid ":ref:`get_tracker_count<class_ARVRServer_method_get_tracker_count>` **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:69
msgid ":ref:`remove_interface<class_ARVRServer_method_remove_interface>` **(** :ref:`ARVRInterface<class_ARVRInterface>` interface **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:71
msgid ":ref:`remove_tracker<class_ARVRServer_method_remove_tracker>` **(** :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` tracker **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:75
msgid "信号"
msgstr ""

#: ../classes/class_arvrserver.rst:79
msgid "**interface_added** **(** :ref:`String<class_String>` interface_name **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:81
msgid "添加新接口时触发。"
msgstr ""

#: ../classes/class_arvrserver.rst:87
msgid "**interface_removed** **(** :ref:`String<class_String>` interface_name **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:89
msgid "当接口被删除时触发。"
msgstr ""

#: ../classes/class_arvrserver.rst:95
msgid "**tracker_added** **(** :ref:`String<class_String>` tracker_name, :ref:`int<class_int>` type, :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:97
msgid "当新的追踪器被添加时触发。如果你不使用固定数量的控制器，或者你在AR解决方案中使用\\ :ref:`ARVRAnchor<class_ARVRAnchor>`\\ ，那么对这个信号做出反应，以添加与这个新追踪器相关的适当的\\ :ref:`ARVRController<class_ARVRController>`\\ 或\\ :ref:`ARVRAnchor<class_ARVRAnchor>`\\ 节点，将会很重要。"
msgstr ""

#: ../classes/class_arvrserver.rst:103
msgid "**tracker_removed** **(** :ref:`String<class_String>` tracker_name, :ref:`int<class_int>` type, :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:105
msgid "删除跟踪器时触发。如果适当，您应该删除所有 :ref:`ARVRController<class_ARVRController>` 或 :ref:`ARVRAnchor<class_ARVRAnchor>` 点。这不是强制性的，节点只是变为不活动状态，当新的跟踪器可用时将再次激活，即打开一个新的控制器来代替前一个控制器。"
msgstr ""

#: ../classes/class_arvrserver.rst:108
msgid "枚举"
msgstr ""

#: ../classes/class_arvrserver.rst:124
msgid "enum **TrackerType**:"
msgstr ""

#: ../classes/class_arvrserver.rst:126
msgid "**TRACKER_CONTROLLER** = **1** --- 追踪器追踪控制器的位置。"
msgstr ""

#: ../classes/class_arvrserver.rst:128
msgid "**TRACKER_BASESTATION** = **2** --- 追踪器追踪基站的位置。"
msgstr ""

#: ../classes/class_arvrserver.rst:130
msgid "**TRACKER_ANCHOR** = **4** --- 追踪器追踪AR锚的位置和大小。"
msgstr ""

#: ../classes/class_arvrserver.rst:132
msgid "**TRACKER_ANY_KNOWN** = **127** --- 内部用于过滤任何已知类型的跟踪器。"
msgstr ""

#: ../classes/class_arvrserver.rst:134
msgid "**TRACKER_UNKNOWN** = **128** --- 如果我们尚未设置跟踪器类型，则在内部使用。"
msgstr ""

#: ../classes/class_arvrserver.rst:136
msgid "**TRACKER_ANY** = **255** --- 在内部用于选择所有跟踪器。"
msgstr ""

#: ../classes/class_arvrserver.rst:148
msgid "enum **RotationMode**:"
msgstr ""

#: ../classes/class_arvrserver.rst:150
msgid "**RESET_FULL_ROTATION** = **0** --- 完全重置HMD的方向。无论用户在现实世界中看向哪个方向。将在虚拟世界中锁定视角。"
msgstr ""

#: ../classes/class_arvrserver.rst:152
msgid "**RESET_BUT_KEEP_TILT** = **1** --- 重置方向，但保持设备的倾斜度。因此，如果我们正在往下看，会继续往下看，但方向会被重置。"
msgstr ""

#: ../classes/class_arvrserver.rst:154
msgid "**DONT_RESET_ROTATION** = **2** --- 不重置HMD的方向，只让玩家的位置居中。"
msgstr ""

#: ../classes/class_arvrserver.rst:157
msgid "属性说明"
msgstr ""

#: ../classes/class_arvrserver.rst:161
msgid ":ref:`ARVRInterface<class_ARVRInterface>` **primary_interface**"
msgstr ""

#: ../classes/class_arvrserver.rst:164
#: ../classes/class_arvrserver.rst:180
msgid "*Setter*"
msgstr ""

#: ../classes/class_arvrserver.rst:164
msgid "set_primary_interface(value)"
msgstr ""

#: ../classes/class_arvrserver.rst:166
#: ../classes/class_arvrserver.rst:182
msgid "*Getter*"
msgstr ""

#: ../classes/class_arvrserver.rst:166
msgid "get_primary_interface()"
msgstr ""

#: ../classes/class_arvrserver.rst:169
msgid "当前绑定到 ``ARVRServer`` 的主要 :ref:`ARVRInterface<class_ARVRInterface>`\\ 。"
msgstr ""

#: ../classes/class_arvrserver.rst:175
msgid ":ref:`float<class_float>` **world_scale**"
msgstr ""

#: ../classes/class_arvrserver.rst:178
msgid "*Default*"
msgstr ""

#: ../classes/class_arvrserver.rst:180
msgid "set_world_scale(value)"
msgstr ""

#: ../classes/class_arvrserver.rst:182
msgid "get_world_scale()"
msgstr ""

#: ../classes/class_arvrserver.rst:185
msgid "允许你根据你的游戏的单位来调整缩放。大多数AR/VR平台假定1个游戏世界单位=1个现实世界的米。"
msgstr ""

#: ../classes/class_arvrserver.rst:188
msgid "方法说明"
msgstr ""

#: ../classes/class_arvrserver.rst:192
msgid "void **add_interface** **(** :ref:`ARVRInterface<class_ARVRInterface>` interface **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:194
msgid "注册一个\\ :ref:`ARVRInterface<class_ARVRInterface>`\\ 对象。"
msgstr ""

#: ../classes/class_arvrserver.rst:200
msgid "void **add_tracker** **(** :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` tracker **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:202
msgid "注册一个新的\\ :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>`\\ ，跟踪现实空间中的空间位置。"
msgstr ""

#: ../classes/class_arvrserver.rst:208
msgid "void **center_on_hmd** **(** :ref:`RotationMode<enum_ARVRServer_RotationMode>` rotation_mode, :ref:`bool<class_bool>` keep_height **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:210
msgid "这是正确理解的重要功能。 AR 和 VR 平台处理定位的方式略有不同。"
msgstr ""

#: ../classes/class_arvrserver.rst:212
msgid "对于不提供空间跟踪的平台，我们的原点 (0,0,0) 是 HMD 的位置，但您几乎无法控制玩家在现实世界中面对的方向。"
msgstr ""

#: ../classes/class_arvrserver.rst:214
msgid "对于提供空间跟踪的平台，我们的原点在很大程度上取决于系统。对于 OpenVR，原点通常是地面上跟踪空间的中心。对于其他平台，它通常是跟踪相机的位置。"
msgstr ""

#: ../classes/class_arvrserver.rst:216
msgid "此方法允许您将跟踪器置于 HMD 的位置。它将获取 HMD 的当前位置并使用它来调整您的所有跟踪数据；从本质上讲，将现实世界重新调整到玩家在游戏世界中的当前位置。"
msgstr ""

#: ../classes/class_arvrserver.rst:218
msgid "为了使这种方法产生可用的结果，跟踪信息必须可用。这通常在开始游戏后需要几帧。"
msgstr ""

#: ../classes/class_arvrserver.rst:220
msgid "您应该在几秒钟后调用此方法。例如，当用户请求重新调整显示时，按住控制器上的指定按钮一小段时间，或者当实现传送机制时。"
msgstr ""

#: ../classes/class_arvrserver.rst:226
msgid "void **clear_primary_interface_if** **(** :ref:`ARVRInterface<class_ARVRInterface>` interface **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:228
msgid "如果设置为提供的接口，则清除我们当前的主接口。"
msgstr ""

#: ../classes/class_arvrserver.rst:234
msgid ":ref:`ARVRInterface<class_ARVRInterface>` **find_interface** **(** :ref:`String<class_String>` name **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:236
msgid "通过名字找到一个接口。例如，如果你的项目使用AR/VR平台的功能，你可以通过名称找到该平台的接口并初始化它。"
msgstr ""

#: ../classes/class_arvrserver.rst:242
msgid ":ref:`Transform<class_Transform>` **get_hmd_transform** **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:244
msgid "返回主界面的变换。"
msgstr ""

#: ../classes/class_arvrserver.rst:250
msgid ":ref:`ARVRInterface<class_ARVRInterface>` **get_interface** **(** :ref:`int<class_int>` idx **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:252
msgid "返回在我们的接口列表中以指定索引注册的接口。"
msgstr ""

#: ../classes/class_arvrserver.rst:258
msgid ":ref:`int<class_int>` **get_interface_count** **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:260
msgid "返回当前在AR/VR服务器上注册的接口数量。如果你的项目支持多个AR/VR平台，你可以查看可用的接口，并向用户展示一个选择，或者简单地尝试初始化每个接口，并使用第一个返回\\ ``true``\\ 的接口。"
msgstr ""

#: ../classes/class_arvrserver.rst:266
msgid ":ref:`Array<class_Array>` **get_interfaces** **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:268
msgid "返回可用接口的列表，每个接口的ID和名称。"
msgstr ""

#: ../classes/class_arvrserver.rst:274
msgid ":ref:`int<class_int>` **get_last_commit_usec** **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:276
msgid "返回 AR/VR 眼睛最后一次 ``ARVRServer`` 提交到 :ref:`VisualServer<class_VisualServer>` 的绝对时间戳（单位为 μs）。该值来自对 :ref:`OS.get_ticks_usec<class_OS_method_get_ticks_usec>` 的内部调用。"
msgstr ""

#: ../classes/class_arvrserver.rst:282
msgid ":ref:`int<class_int>` **get_last_frame_usec** **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:284
msgid "返回最后一帧的持续时间（单位：μs）。这被计算为提交时\\ :ref:`get_last_commit_usec<class_ARVRServer_method_get_last_commit_usec>`\\ 和\\ :ref:`get_last_process_usec<class_ARVRServer_method_get_last_process_usec>`\\ 之间的差异。"
msgstr ""

#: ../classes/class_arvrserver.rst:290
msgid ":ref:`int<class_int>` **get_last_process_usec** **(** **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:292
msgid "返回最后一次 ``ARVRServer`` 进程回调的绝对时间戳（单位为 μs）。该值来自对 :ref:`OS.get_ticks_usec<class_OS_method_get_ticks_usec>` 的内部调用。"
msgstr ""

#: ../classes/class_arvrserver.rst:298
msgid ":ref:`Transform<class_Transform>` **get_reference_frame** **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:300
msgid "返回引用帧的变换。主要在内部使用，并公开在GDNative构建接口中。"
msgstr ""

#: ../classes/class_arvrserver.rst:306
msgid ":ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` **get_tracker** **(** :ref:`int<class_int>` idx **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:308
msgid "返回给定ID处的位置追踪器。"
msgstr ""

#: ../classes/class_arvrserver.rst:314
msgid ":ref:`int<class_int>` **get_tracker_count** **(** **)** |const|"
msgstr ""

#: ../classes/class_arvrserver.rst:316
msgid "返回当前注册的跟踪器的数量。"
msgstr ""

#: ../classes/class_arvrserver.rst:322
msgid "void **remove_interface** **(** :ref:`ARVRInterface<class_ARVRInterface>` interface **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:324
msgid "移除此接口。"
msgstr ""

#: ../classes/class_arvrserver.rst:330
msgid "void **remove_tracker** **(** :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` tracker **)**"
msgstr ""

#: ../classes/class_arvrserver.rst:332
msgid "移除此位置跟踪器。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
