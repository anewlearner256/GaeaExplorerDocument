# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_navigation.rst:10
msgid "Navigation"
msgstr ""

#: ../classes/class_navigation.rst:12
msgid "**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_navigation.rst:14
msgid "基于网格的导航和寻路节点。"
msgstr ""

#: ../classes/class_navigation.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_navigation.rst:19
msgid "在\\ :ref:`NavigationMesh<class_NavigationMesh>`\\ 的集合中提供导航和寻路功能。默认情况下，这些将自动从子\\ :ref:`NavigationMeshInstance<class_NavigationMeshInstance>`\\ 节点中收集，也可以通过\\ :ref:`navmesh_add<class_Navigation_method_navmesh_add>`\\ 即时添加。除了基本的寻路之外，这个类还能帮助导航代理与其所导航的网格对齐。"
msgstr ""

#: ../classes/class_navigation.rst:21
msgid "\\ **注意：** 目前的导航系统有许多已知的问题，并不总是能像预期的那样返回最佳路径。这些问题将在GaaeExplorer 4.0中得到解决。"
msgstr ""

#: ../classes/class_navigation.rst:24
msgid "教程"
msgstr ""

#: ../classes/class_navigation.rst:26
msgid "`3D Navmesh Demo <https://godotengine.org/asset-library/asset/124>`__"
msgstr ""

#: ../classes/class_navigation.rst:29
msgid "属性"
msgstr ""

#: ../classes/class_navigation.rst:32
#: ../classes/class_navigation.rst:39
#: ../classes/class_navigation.rst:41
#: ../classes/class_navigation.rst:45
msgid ":ref:`Vector3<class_Vector3>`"
msgstr ""

#: ../classes/class_navigation.rst:32
msgid ":ref:`up_vector<class_Navigation_property_up_vector>`"
msgstr ""

#: ../classes/class_navigation.rst:32
#: ../classes/class_navigation.rst:64
msgid "``Vector3( 0, 1, 0 )``"
msgstr ""

#: ../classes/class_navigation.rst:36
msgid "方法"
msgstr ""

#: ../classes/class_navigation.rst:39
msgid ":ref:`get_closest_point<class_Navigation_method_get_closest_point>` **(** :ref:`Vector3<class_Vector3>` to_point **)**"
msgstr ""

#: ../classes/class_navigation.rst:41
msgid ":ref:`get_closest_point_normal<class_Navigation_method_get_closest_point_normal>` **(** :ref:`Vector3<class_Vector3>` to_point **)**"
msgstr ""

#: ../classes/class_navigation.rst:43
msgid ":ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_navigation.rst:43
msgid ":ref:`get_closest_point_owner<class_Navigation_method_get_closest_point_owner>` **(** :ref:`Vector3<class_Vector3>` to_point **)**"
msgstr ""

#: ../classes/class_navigation.rst:45
msgid ":ref:`get_closest_point_to_segment<class_Navigation_method_get_closest_point_to_segment>` **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` use_collision=false **)**"
msgstr ""

#: ../classes/class_navigation.rst:47
msgid ":ref:`PoolVector3Array<class_PoolVector3Array>`"
msgstr ""

#: ../classes/class_navigation.rst:47
msgid ":ref:`get_simple_path<class_Navigation_method_get_simple_path>` **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` optimize=true **)**"
msgstr ""

#: ../classes/class_navigation.rst:49
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_navigation.rst:49
msgid ":ref:`navmesh_add<class_Navigation_method_navmesh_add>` **(** :ref:`NavigationMesh<class_NavigationMesh>` mesh, :ref:`Transform<class_Transform>` xform, :ref:`Object<class_Object>` owner=null **)**"
msgstr ""

#: ../classes/class_navigation.rst:51
#: ../classes/class_navigation.rst:53
msgid "void"
msgstr ""

#: ../classes/class_navigation.rst:51
msgid ":ref:`navmesh_remove<class_Navigation_method_navmesh_remove>` **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_navigation.rst:53
msgid ":ref:`navmesh_set_transform<class_Navigation_method_navmesh_set_transform>` **(** :ref:`int<class_int>` id, :ref:`Transform<class_Transform>` xform **)**"
msgstr ""

#: ../classes/class_navigation.rst:57
msgid "属性说明"
msgstr ""

#: ../classes/class_navigation.rst:61
msgid ":ref:`Vector3<class_Vector3>` **up_vector**"
msgstr ""

#: ../classes/class_navigation.rst:64
msgid "*Default*"
msgstr ""

#: ../classes/class_navigation.rst:66
msgid "*Setter*"
msgstr ""

#: ../classes/class_navigation.rst:66
msgid "set_up_vector(value)"
msgstr ""

#: ../classes/class_navigation.rst:68
msgid "*Getter*"
msgstr ""

#: ../classes/class_navigation.rst:68
msgid "get_up_vector()"
msgstr ""

#: ../classes/class_navigation.rst:71
msgid "定义了向上的方向。默认情况下，这是\\ ``(0,1,0)``\\ ，这是世界的“向上”方向。"
msgstr ""

#: ../classes/class_navigation.rst:74
msgid "方法说明"
msgstr ""

#: ../classes/class_navigation.rst:78
msgid ":ref:`Vector3<class_Vector3>` **get_closest_point** **(** :ref:`Vector3<class_Vector3>` to_point **)**"
msgstr ""

#: ../classes/class_navigation.rst:80
msgid "返回最接近给定点的导航点。点位于局部坐标空间。"
msgstr ""

#: ../classes/class_navigation.rst:86
msgid ":ref:`Vector3<class_Vector3>` **get_closest_point_normal** **(** :ref:`Vector3<class_Vector3>` to_point **)**"
msgstr ""

#: ../classes/class_navigation.rst:88
msgid "返回最接近给定点的导航点处的表面法线。用于根据导航代理移动的导航网格旋转导航代理。"
msgstr ""

#: ../classes/class_navigation.rst:94
msgid ":ref:`Object<class_Object>` **get_closest_point_owner** **(** :ref:`Vector3<class_Vector3>` to_point **)**"
msgstr ""

#: ../classes/class_navigation.rst:96
msgid "返回包含最接近给定点的导航点的 :ref:`NavigationMesh<class_NavigationMesh>` 的所有者。这通常是一个 :ref:`NavigationMeshInstance<class_NavigationMeshInstance>`\\ 。对于通过 :ref:`navmesh_add<class_Navigation_method_navmesh_add>` 添加的网格，返回给定的所有者（如果省略 ``owner`` 参数，则返回 ``null``\\ ）。"
msgstr ""

#: ../classes/class_navigation.rst:102
msgid ":ref:`Vector3<class_Vector3>` **get_closest_point_to_segment** **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` use_collision=false **)**"
msgstr ""

#: ../classes/class_navigation.rst:104
msgid "返回最接近给定线段的导航点。启用 ``use_collision`` 时，仅考虑线段和导航网格之间的交点。如果找到多个交点，则返回最接近线段起点的交点。"
msgstr ""

#: ../classes/class_navigation.rst:110
msgid ":ref:`PoolVector3Array<class_PoolVector3Array>` **get_simple_path** **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` optimize=true **)**"
msgstr ""

#: ../classes/class_navigation.rst:112
msgid "返回两个给定点之间的路径。点是在局部坐标空间中。如果\\ ``optimize``\\ 是\\ ``true``\\ （默认），与每个\\ :ref:`NavigationMesh<class_NavigationMesh>`\\ 相关的代理属性（半径、高度等）在路径计算中被考虑，否则其被忽略。"
msgstr ""

#: ../classes/class_navigation.rst:114
msgid "\\ **注意：** 这个方法有已知的问题，经常会返回非最佳的路径。这些问题将在GaaeExplorer 4.0中得到修正。"
msgstr ""

#: ../classes/class_navigation.rst:120
msgid ":ref:`int<class_int>` **navmesh_add** **(** :ref:`NavigationMesh<class_NavigationMesh>` mesh, :ref:`Transform<class_Transform>` xform, :ref:`Object<class_Object>` owner=null **)**"
msgstr ""

#: ../classes/class_navigation.rst:122
msgid "添加一个 :ref:`NavigationMesh<class_NavigationMesh>`\\ 。返回用于 :ref:`navmesh_remove<class_Navigation_method_navmesh_remove>` 或 :ref:`navmesh_set_transform<class_Navigation_method_navmesh_set_transform>` 的 ID。如果给定，则将 :ref:`Transform2D<class_Transform2D>` 应用于多边形。可选的 ``owner`` 用作 :ref:`get_closest_point_owner<class_Navigation_method_get_closest_point_owner>` 的返回值。"
msgstr ""

#: ../classes/class_navigation.rst:128
msgid "void **navmesh_remove** **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_navigation.rst:130
msgid "移除具有指定ID的\\ :ref:`NavigationMesh<class_NavigationMesh>`\\ 。"
msgstr ""

#: ../classes/class_navigation.rst:136
msgid "void **navmesh_set_transform** **(** :ref:`int<class_int>` id, :ref:`Transform<class_Transform>` xform **)**"
msgstr ""

#: ../classes/class_navigation.rst:138
msgid "设置应用于具有指定ID的\\ :ref:`NavigationMesh<class_NavigationMesh>`\\ 的变换。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
