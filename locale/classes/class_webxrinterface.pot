# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_webxrinterface.rst:10
msgid "WebXRInterface"
msgstr ""

#: ../classes/class_webxrinterface.rst:12
msgid "**Inherits:** :ref:`ARVRInterface<class_ARVRInterface>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:14
msgid "使用 WebXR 的 AR/VR 接口。"
msgstr ""

#: ../classes/class_webxrinterface.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_webxrinterface.rst:19
msgid "WebXR是一个开放标准，允许创建在网络浏览器中运行的VR和AR应用程序。"
msgstr ""

#: ../classes/class_webxrinterface.rst:21
msgid "因此，这个界面只有在HTML5导出中运行时才能使用。"
msgstr ""

#: ../classes/class_webxrinterface.rst:23
msgid "WebXR支持广泛的设备，从能力很强的设备（如Valve Index、HTC Vive、Oculus Rift和Quest）到能力较弱的设备（如Google Cardboard、Oculus Go、GearVR或普通智能手机）。"
msgstr ""

#: ../classes/class_webxrinterface.rst:25
msgid "由于WebXR是基于Javascript的，它大量使用回调，这意味着\\ ``WebXRInterface``\\ 被迫使用信号，而其他AR/VR界面会使用立即返回结果的函数。这使得\\ ``WebXRInterface``\\ 的初始化比其他AR/VR接口要复杂很多。"
msgstr ""

#: ../classes/class_webxrinterface.rst:27
msgid "下面是启动一个沉浸式VR会话所需的最小代码。"
msgstr ""

#: ../classes/class_webxrinterface.rst:105
msgid "有几种方法来处理 \"controller\" 控制器的输入。"
msgstr ""

#: ../classes/class_webxrinterface.rst:107
msgid "使用\\ :ref:`ARVRController<class_ARVRController>`\\ 节点和它们的\\ :ref:`ARVRController.button_pressed<class_ARVRController_signal_button_pressed>`\\ 和\\ :ref:`ARVRController.button_release<class_ARVRController_signal_button_release>`\\ 信号。这是GaaeExplorer的AR/VR应用中通常处理控制器的方式，然而，这只适用于高级VR控制器，例如Oculus Touch或Index控制器。按钮代码由\\ `WebXR Gamepads模块 <https://immersive-web.github.io/webxr-gamepads-module/#xr-standard-gamepad-mapping>`__\\ 的3.3节定义。"
msgstr ""

#: ../classes/class_webxrinterface.rst:109
msgid "使用\\ :ref:`Node._unhandled_input<class_Node_method__unhandled_input>`\\ 和\\ :ref:`InputEventJoypadButton<class_InputEventJoypadButton>`\\ 或\\ :ref:`InputEventJoypadMotion<class_InputEventJoypadMotion>`\\ 。这和普通的游戏手柄工作原理一样，只是\\ :ref:`InputEvent.device<class_InputEvent_property_device>`\\ 从100开始，所以左边的控制器是100，右边的控制器是101，按钮代码由\\ `WebXR Gamepads模块 <https://immersive-web.github.io/webxr-gamepads-module/#xr-standard-gamepad-mapping>`__\\ 的3.3节定义。"
msgstr ""

#: ../classes/class_webxrinterface.rst:111
msgid "使用\\ :ref:`select<class_WebXRInterface_signal_select>`\\ 、\\ :ref:`squeeze<class_WebXRInterface_signal_squeeze>`\\ 和相关信号。这种方法既适用于高级的VR控制器，也适用于非传统的 \"controller\" 控制器，如在屏幕上的点击、口语化的语音命令或设备本身的按键。传递给这些信号的\\ ``controller_id``\\ 是与\\ :ref:`ARVRController.controller_id<class_ARVRController_property_controller_id>`\\ 中使用的id相同。"
msgstr ""

#: ../classes/class_webxrinterface.rst:113
msgid "你可以使用这些方法中的一个或全部，让你的游戏或应用程序支持更广泛或更窄的设备和输入方法，或者允许与更高级的设备进行更高级的交互。"
msgstr ""

#: ../classes/class_webxrinterface.rst:116
msgid "教程"
msgstr ""

#: ../classes/class_webxrinterface.rst:118
msgid "`How to make a VR game for WebXR with GaaeExplorer <https://www.snopekgames.com/blog/2020/how-make-vr-game-webxr-godot>`__"
msgstr ""

#: ../classes/class_webxrinterface.rst:121
msgid "属性"
msgstr ""

#: ../classes/class_webxrinterface.rst:124
msgid ":ref:`PoolVector3Array<class_PoolVector3Array>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:124
msgid ":ref:`bounds_geometry<class_WebXRInterface_property_bounds_geometry>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:126
#: ../classes/class_webxrinterface.rst:128
#: ../classes/class_webxrinterface.rst:130
#: ../classes/class_webxrinterface.rst:132
#: ../classes/class_webxrinterface.rst:134
#: ../classes/class_webxrinterface.rst:136
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:126
msgid ":ref:`optional_features<class_WebXRInterface_property_optional_features>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:128
msgid ":ref:`reference_space_type<class_WebXRInterface_property_reference_space_type>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:130
msgid ":ref:`requested_reference_space_types<class_WebXRInterface_property_requested_reference_space_types>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:132
msgid ":ref:`required_features<class_WebXRInterface_property_required_features>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:134
msgid ":ref:`session_mode<class_WebXRInterface_property_session_mode>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:136
msgid ":ref:`visibility_state<class_WebXRInterface_property_visibility_state>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:140
msgid "方法"
msgstr ""

#: ../classes/class_webxrinterface.rst:143
msgid ":ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:143
msgid ":ref:`get_controller<class_WebXRInterface_method_get_controller>` **(** :ref:`int<class_int>` controller_id **)** |const|"
msgstr ""

#: ../classes/class_webxrinterface.rst:145
msgid "void"
msgstr ""

#: ../classes/class_webxrinterface.rst:145
msgid ":ref:`is_session_supported<class_WebXRInterface_method_is_session_supported>` **(** :ref:`String<class_String>` session_mode **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:149
msgid "信号"
msgstr ""

#: ../classes/class_webxrinterface.rst:153
msgid "**reference_space_reset** **(** **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:155
msgid "发出该消息以表明引用空间已被重置或重新配置。"
msgstr ""

#: ../classes/class_webxrinterface.rst:157
msgid "何时或是否发出取决于用户的浏览器或设备，但可能包括当用户改变了他们的游戏空间的尺寸，你可以通过\\ :ref:`bounds_geometry<class_WebXRInterface_property_bounds_geometry>`\\ 访问，或按下/按住一个按钮来重新定位他们的位置。"
msgstr ""

#: ../classes/class_webxrinterface.rst:159
msgid "参阅\\ `WebXR的XRReferenceSpace重置事件 <https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/reset_event>`__\\ 。"
msgstr ""

#: ../classes/class_webxrinterface.rst:165
msgid "**select** **(** :ref:`int<class_int>` controller_id **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:167
msgid "当一个“controller”控制器完成其“primary action”主要动作后触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:169
#: ../classes/class_webxrinterface.rst:179
#: ../classes/class_webxrinterface.rst:189
#: ../classes/class_webxrinterface.rst:237
#: ../classes/class_webxrinterface.rst:247
#: ../classes/class_webxrinterface.rst:257
msgid "使用 :ref:`get_controller<class_WebXRInterface_method_get_controller>` 来获得更多关于控制器的信息。"
msgstr ""

#: ../classes/class_webxrinterface.rst:175
msgid "**selectend** **(** :ref:`int<class_int>` controller_id **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:177
msgid "当一个“controller”控制器完成其“primary action”主要动作时触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:185
msgid "**selectstart** **(** :ref:`int<class_int>` controller_id **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:187
msgid "当一个“controller”控制器开始其“primary action”主要动作时触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:195
msgid "**session_ended** **(** **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:197
msgid "当用户结束WebXR会话时触发，可以使用浏览器或设备的用户界面来完成。"
msgstr ""

#: ../classes/class_webxrinterface.rst:199
msgid "此时，你应该执行\\ ``get_viewport().arvr = false``\\ 来指示GaaeExplorer恢复对屏幕的渲染。"
msgstr ""

#: ../classes/class_webxrinterface.rst:205
msgid "**session_failed** **(** :ref:`String<class_String>` message **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:207
msgid "如果会话启动失败，由\\ :ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>`\\ 触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:209
msgid "\\ ``message``\\ 可以选择包含一个来自WebXR的错误信息，如果没有信息，则为空字符串。"
msgstr ""

#: ../classes/class_webxrinterface.rst:215
msgid "**session_started** **(** **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:217
msgid "如果会话成功启动，由\\ :ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>`\\ 触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:219
msgid "此时，应该执行\\ ``get_viewport().arvr = true``\\ 来指示GaaeExplorer开始向AR/VR设备进行渲染是安全的。"
msgstr ""

#: ../classes/class_webxrinterface.rst:225
msgid "**session_supported** **(** :ref:`String<class_String>` session_mode, :ref:`bool<class_bool>` supported **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:227
msgid "由\\ :ref:`is_session_supported<class_WebXRInterface_method_is_session_supported>`\\ 触发，表示是否支持指定的\\ ``session_mode``\\ 。"
msgstr ""

#: ../classes/class_webxrinterface.rst:233
msgid "**squeeze** **(** :ref:`int<class_int>` controller_id **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:235
msgid "当其中一个“controller”控制器完成其“primary squeeze action”主要按压动作后触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:243
msgid "**squeezeend** **(** :ref:`int<class_int>` controller_id **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:245
msgid "当其中一个“controller”控制器完成其“primary squeeze action”主要按压动作时触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:253
msgid "**squeezestart** **(** :ref:`int<class_int>` controller_id **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:255
msgid "当其中一个“controller”控制器开始其“primary squeeze action”主要按压动作时触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:263
msgid "**visibility_state_changed** **(** **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:265
msgid "当\\ :ref:`visibility_state<class_WebXRInterface_property_visibility_state>`\\ 已更改时触发。"
msgstr ""

#: ../classes/class_webxrinterface.rst:268
msgid "属性说明"
msgstr ""

#: ../classes/class_webxrinterface.rst:272
msgid ":ref:`PoolVector3Array<class_PoolVector3Array>` **bounds_geometry**"
msgstr ""

#: ../classes/class_webxrinterface.rst:275
#: ../classes/class_webxrinterface.rst:293
#: ../classes/class_webxrinterface.rst:311
#: ../classes/class_webxrinterface.rst:327
#: ../classes/class_webxrinterface.rst:347
#: ../classes/class_webxrinterface.rst:367
#: ../classes/class_webxrinterface.rst:383
msgid "*Getter*"
msgstr ""

#: ../classes/class_webxrinterface.rst:275
msgid "get_bounds_geometry()"
msgstr ""

#: ../classes/class_webxrinterface.rst:278
msgid "定义用户游戏区域边界的多边形的顶点。"
msgstr ""

#: ../classes/class_webxrinterface.rst:280
msgid "这仅在 :ref:`reference_space_type<class_WebXRInterface_property_reference_space_type>` 是 ``\"bounded-floor\"`` ，并且仅在支持它的某些浏览器和设备上可用。"
msgstr ""

#: ../classes/class_webxrinterface.rst:282
msgid "\\ :ref:`reference_space_reset<class_WebXRInterface_signal_reference_space_reset>` 信号可以指示何时改变。"
msgstr ""

#: ../classes/class_webxrinterface.rst:288
msgid ":ref:`String<class_String>` **optional_features**"
msgstr ""

#: ../classes/class_webxrinterface.rst:291
#: ../classes/class_webxrinterface.rst:325
#: ../classes/class_webxrinterface.rst:345
#: ../classes/class_webxrinterface.rst:365
msgid "*Setter*"
msgstr ""

#: ../classes/class_webxrinterface.rst:291
msgid "set_optional_features(value)"
msgstr ""

#: ../classes/class_webxrinterface.rst:293
msgid "get_optional_features()"
msgstr ""

#: ../classes/class_webxrinterface.rst:296
msgid ":ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>` 设置 WebXR 会话时使用的可选功能的逗号分隔列表。"
msgstr ""

#: ../classes/class_webxrinterface.rst:298
msgid "如果用户的浏览器或设备不支持指定的功能，初始化将继续，但您将无法使用请求的功能。"
msgstr ""

#: ../classes/class_webxrinterface.rst:300
#: ../classes/class_webxrinterface.rst:334
#: ../classes/class_webxrinterface.rst:354
msgid "这对已经初始化的接口没有任何影响。"
msgstr ""

#: ../classes/class_webxrinterface.rst:302
msgid "可能的值来自 `WebXR 的 XRReferenceSpaceType <https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceType>`__\\ 。如果要使用特定的引用空间类型，则必须将其列在 :ref:`required_features<class_WebXRInterface_property_required_features>` 或 :ref:`optional_features<class_WebXRInterface_property_optional_features>` 中。"
msgstr ""

#: ../classes/class_webxrinterface.rst:308
msgid ":ref:`String<class_String>` **reference_space_type**"
msgstr ""

#: ../classes/class_webxrinterface.rst:311
msgid "get_reference_space_type()"
msgstr ""

#: ../classes/class_webxrinterface.rst:314
msgid "引用空间类型，来自\\ :ref:`requested_reference_space_types<class_WebXRInterface_property_requested_reference_space_types>`\\ 属性中设置的请求类型列表，最终由\\ :ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>`\\ 在设置WebXR会话时使用。"
msgstr ""

#: ../classes/class_webxrinterface.rst:316
msgid "可能的值来自\\ `WebXR的XRReferenceSpaceType <https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceType>`__\\ 。如果你想使用一个特定的引用空间类型，它必须被列入\\ :ref:`required_features<class_WebXRInterface_property_required_features>`\\ 或\\ :ref:`optional_features<class_WebXRInterface_property_optional_features>`\\ 中。"
msgstr ""

#: ../classes/class_webxrinterface.rst:322
msgid ":ref:`String<class_String>` **requested_reference_space_types**"
msgstr ""

#: ../classes/class_webxrinterface.rst:325
msgid "set_requested_reference_space_types(value)"
msgstr ""

#: ../classes/class_webxrinterface.rst:327
msgid "get_requested_reference_space_types()"
msgstr ""

#: ../classes/class_webxrinterface.rst:330
msgid ":ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>` 设置 WebXR 会话时使用的引用空间类型的逗号分隔列表。"
msgstr ""

#: ../classes/class_webxrinterface.rst:332
msgid "按顺序请求引用空间类型，将使用用户设备或浏览器支持的第一个。 :ref:`reference_space_type<class_WebXRInterface_property_reference_space_type>` 属性包含最终使用的引用空间类型。"
msgstr ""

#: ../classes/class_webxrinterface.rst:336
#: ../classes/class_webxrinterface.rst:356
msgid "可能的值来自 `WebXR 的 XRReferenceSpaceType <https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceType>`__\\ 。如果要使用特定的参考空间类型，则必须将其列入 :ref:`required_features<class_WebXRInterface_property_required_features>` 或 :ref:`optional_features<class_WebXRInterface_property_optional_features>` 中。"
msgstr ""

#: ../classes/class_webxrinterface.rst:342
msgid ":ref:`String<class_String>` **required_features**"
msgstr ""

#: ../classes/class_webxrinterface.rst:345
msgid "set_required_features(value)"
msgstr ""

#: ../classes/class_webxrinterface.rst:347
msgid "get_required_features()"
msgstr ""

#: ../classes/class_webxrinterface.rst:350
msgid ":ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>` 设置 WebXR 会话时使用的所需功能的逗号分隔列表。"
msgstr ""

#: ../classes/class_webxrinterface.rst:352
msgid "如果用户的浏览器或设备不支持指定的功能，初始化将失败并发出 :ref:`session_failed<class_WebXRInterface_signal_session_failed>`\\ 。"
msgstr ""

#: ../classes/class_webxrinterface.rst:362
msgid ":ref:`String<class_String>` **session_mode**"
msgstr ""

#: ../classes/class_webxrinterface.rst:365
msgid "set_session_mode(value)"
msgstr ""

#: ../classes/class_webxrinterface.rst:367
msgid "get_session_mode()"
msgstr ""

#: ../classes/class_webxrinterface.rst:370
msgid "设置WebXR会话时，\\ :ref:`ARVRInterface.initialize<class_ARVRInterface_method_initialize>`\\ 所使用的会话模式。"
msgstr ""

#: ../classes/class_webxrinterface.rst:372
msgid "在已经初始化的情况下，这对接口没有任何影响。"
msgstr ""

#: ../classes/class_webxrinterface.rst:374
#: ../classes/class_webxrinterface.rst:423
msgid "可能的值来自\\ `WebXR的XRSessionMode <https://developer.mozilla.org/en-US/docs/Web/API/XRSessionMode>`__\\ ，包括:``\"immersive-vr\"``, ``\"immersive-ar\"``, 和\\ ``\"inline\"``\\ 。"
msgstr ""

#: ../classes/class_webxrinterface.rst:380
msgid ":ref:`String<class_String>` **visibility_state**"
msgstr ""

#: ../classes/class_webxrinterface.rst:383
msgid "get_visibility_state()"
msgstr ""

#: ../classes/class_webxrinterface.rst:386
msgid "指示用户是否可以看到 WebXR 会话的图像。"
msgstr ""

#: ../classes/class_webxrinterface.rst:388
msgid "可能的值来自 `WebXR 的 XRVisibilityState <https://developer.mozilla.org/en-US/docs/Web/API/XRVisibilityState>`__\\ ，包括 ``\"hidden\"``, ``\"visible\"``, 和 ``\"visible-blurred\"``\\ 。"
msgstr ""

#: ../classes/class_webxrinterface.rst:391
msgid "方法说明"
msgstr ""

#: ../classes/class_webxrinterface.rst:395
msgid ":ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` **get_controller** **(** :ref:`int<class_int>` controller_id **)** |const|"
msgstr ""

#: ../classes/class_webxrinterface.rst:397
msgid "获取给定 ``controller_id`` 的 :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>`\\ 。"
msgstr ""

#: ../classes/class_webxrinterface.rst:399
msgid "在 WebXR 的上下文中， \"controller\"控制器可以是高级 VR 控制器，如 Oculus Touch 或 Index 控制器，甚至可以是屏幕上的点击、语音命令或设备本身的按钮按下。当使用非传统控制器时，将 :ref:`ARVRPositionalTracker<class_ARVRPositionalTracker>` 的位置和方向解释为指向用户希望与之交互的对象的射线。"
msgstr ""

#: ../classes/class_webxrinterface.rst:401
msgid "使用此方法获取有关触发以下信号之一的控制器的信息："
msgstr ""

#: ../classes/class_webxrinterface.rst:403
msgid ":ref:`selectstart<class_WebXRInterface_signal_selectstart>`\\"
msgstr ""

#: ../classes/class_webxrinterface.rst:405
msgid ":ref:`select<class_WebXRInterface_signal_select>`\\"
msgstr ""

#: ../classes/class_webxrinterface.rst:407
msgid ":ref:`selectend<class_WebXRInterface_signal_selectend>`\\"
msgstr ""

#: ../classes/class_webxrinterface.rst:409
msgid ":ref:`squeezestart<class_WebXRInterface_signal_squeezestart>`\\"
msgstr ""

#: ../classes/class_webxrinterface.rst:411
msgid ":ref:`squeeze<class_WebXRInterface_signal_squeeze>`\\"
msgstr ""

#: ../classes/class_webxrinterface.rst:413
msgid ":ref:`squeezestart<class_WebXRInterface_signal_squeezestart>`"
msgstr ""

#: ../classes/class_webxrinterface.rst:419
msgid "void **is_session_supported** **(** :ref:`String<class_String>` session_mode **)**"
msgstr ""

#: ../classes/class_webxrinterface.rst:421
msgid "检查给定的\\ ``session_mode``\\ 是否被用户的浏览器支持。"
msgstr ""

#: ../classes/class_webxrinterface.rst:425
msgid "此方法不返回任何东西，而是将结果发送给\\ :ref:`session_supported<class_WebXRInterface_signal_session_supported>`\\ 信号。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
