# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_streampeer.rst:10
msgid "StreamPeer"
msgstr ""

#: ../classes/class_streampeer.rst:12
msgid "**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_streampeer.rst:14
msgid "**Inherited By:** :ref:`StreamPeerBuffer<class_StreamPeerBuffer>`, :ref:`StreamPeerGDNative<class_StreamPeerGDNative>`, :ref:`StreamPeerSSL<class_StreamPeerSSL>`, :ref:`StreamPeerTCP<class_StreamPeerTCP>`"
msgstr ""

#: ../classes/class_streampeer.rst:16
msgid "基于流的协议的抽象和基类。"
msgstr ""

#: ../classes/class_streampeer.rst:19
msgid "描述"
msgstr ""

#: ../classes/class_streampeer.rst:21
msgid "StreamPeer 是对流式协议（如 TCP）的抽象和基类。它提供了用于通过流发送和接收原始数据或字符串的数据的 API。"
msgstr ""

#: ../classes/class_streampeer.rst:24
msgid "属性"
msgstr ""

#: ../classes/class_streampeer.rst:27
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_streampeer.rst:27
msgid ":ref:`big_endian<class_StreamPeer_property_big_endian>`"
msgstr ""

#: ../classes/class_streampeer.rst:27
#: ../classes/class_streampeer.rst:105
msgid "``false``"
msgstr ""

#: ../classes/class_streampeer.rst:31
msgid "方法"
msgstr ""

#: ../classes/class_streampeer.rst:34
#: ../classes/class_streampeer.rst:36
#: ../classes/class_streampeer.rst:38
#: ../classes/class_streampeer.rst:40
#: ../classes/class_streampeer.rst:42
#: ../classes/class_streampeer.rst:54
#: ../classes/class_streampeer.rst:56
#: ../classes/class_streampeer.rst:58
#: ../classes/class_streampeer.rst:60
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_streampeer.rst:34
msgid ":ref:`get_16<class_StreamPeer_method_get_16>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:36
msgid ":ref:`get_32<class_StreamPeer_method_get_32>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:38
msgid ":ref:`get_64<class_StreamPeer_method_get_64>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:40
msgid ":ref:`get_8<class_StreamPeer_method_get_8>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:42
msgid ":ref:`get_available_bytes<class_StreamPeer_method_get_available_bytes>` **(** **)** |const|"
msgstr ""

#: ../classes/class_streampeer.rst:44
#: ../classes/class_streampeer.rst:50
#: ../classes/class_streampeer.rst:80
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_streampeer.rst:44
msgid ":ref:`get_data<class_StreamPeer_method_get_data>` **(** :ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../classes/class_streampeer.rst:46
#: ../classes/class_streampeer.rst:48
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_streampeer.rst:46
msgid ":ref:`get_double<class_StreamPeer_method_get_double>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:48
msgid ":ref:`get_float<class_StreamPeer_method_get_float>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:50
msgid ":ref:`get_partial_data<class_StreamPeer_method_get_partial_data>` **(** :ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../classes/class_streampeer.rst:52
#: ../classes/class_streampeer.rst:62
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_streampeer.rst:52
msgid ":ref:`get_string<class_StreamPeer_method_get_string>` **(** :ref:`int<class_int>` bytes=-1 **)**"
msgstr ""

#: ../classes/class_streampeer.rst:54
msgid ":ref:`get_u16<class_StreamPeer_method_get_u16>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:56
msgid ":ref:`get_u32<class_StreamPeer_method_get_u32>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:58
msgid ":ref:`get_u64<class_StreamPeer_method_get_u64>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:60
msgid ":ref:`get_u8<class_StreamPeer_method_get_u8>` **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:62
msgid ":ref:`get_utf8_string<class_StreamPeer_method_get_utf8_string>` **(** :ref:`int<class_int>` bytes=-1 **)**"
msgstr ""

#: ../classes/class_streampeer.rst:64
msgid ":ref:`Variant<class_Variant>`"
msgstr ""

#: ../classes/class_streampeer.rst:64
msgid ":ref:`get_var<class_StreamPeer_method_get_var>` **(** :ref:`bool<class_bool>` allow_objects=false **)**"
msgstr ""

#: ../classes/class_streampeer.rst:66
#: ../classes/class_streampeer.rst:68
#: ../classes/class_streampeer.rst:70
#: ../classes/class_streampeer.rst:72
#: ../classes/class_streampeer.rst:76
#: ../classes/class_streampeer.rst:78
#: ../classes/class_streampeer.rst:82
#: ../classes/class_streampeer.rst:84
#: ../classes/class_streampeer.rst:86
#: ../classes/class_streampeer.rst:88
#: ../classes/class_streampeer.rst:90
#: ../classes/class_streampeer.rst:92
#: ../classes/class_streampeer.rst:94
msgid "void"
msgstr ""

#: ../classes/class_streampeer.rst:66
msgid ":ref:`put_16<class_StreamPeer_method_put_16>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:68
msgid ":ref:`put_32<class_StreamPeer_method_put_32>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:70
msgid ":ref:`put_64<class_StreamPeer_method_put_64>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:72
msgid ":ref:`put_8<class_StreamPeer_method_put_8>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:74
msgid ":ref:`Error<enum_@GlobalScope_Error>`"
msgstr ""

#: ../classes/class_streampeer.rst:74
msgid ":ref:`put_data<class_StreamPeer_method_put_data>` **(** :ref:`PoolByteArray<class_PoolByteArray>` data **)**"
msgstr ""

#: ../classes/class_streampeer.rst:76
msgid ":ref:`put_double<class_StreamPeer_method_put_double>` **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:78
msgid ":ref:`put_float<class_StreamPeer_method_put_float>` **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:80
msgid ":ref:`put_partial_data<class_StreamPeer_method_put_partial_data>` **(** :ref:`PoolByteArray<class_PoolByteArray>` data **)**"
msgstr ""

#: ../classes/class_streampeer.rst:82
msgid ":ref:`put_string<class_StreamPeer_method_put_string>` **(** :ref:`String<class_String>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:84
msgid ":ref:`put_u16<class_StreamPeer_method_put_u16>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:86
msgid ":ref:`put_u32<class_StreamPeer_method_put_u32>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:88
msgid ":ref:`put_u64<class_StreamPeer_method_put_u64>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:90
msgid ":ref:`put_u8<class_StreamPeer_method_put_u8>` **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:92
msgid ":ref:`put_utf8_string<class_StreamPeer_method_put_utf8_string>` **(** :ref:`String<class_String>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:94
msgid ":ref:`put_var<class_StreamPeer_method_put_var>` **(** :ref:`Variant<class_Variant>` value, :ref:`bool<class_bool>` full_objects=false **)**"
msgstr ""

#: ../classes/class_streampeer.rst:98
msgid "属性说明"
msgstr ""

#: ../classes/class_streampeer.rst:102
msgid ":ref:`bool<class_bool>` **big_endian**"
msgstr ""

#: ../classes/class_streampeer.rst:105
msgid "*Default*"
msgstr ""

#: ../classes/class_streampeer.rst:107
msgid "*Setter*"
msgstr ""

#: ../classes/class_streampeer.rst:107
msgid "set_big_endian(value)"
msgstr ""

#: ../classes/class_streampeer.rst:109
msgid "*Getter*"
msgstr ""

#: ../classes/class_streampeer.rst:109
msgid "is_big_endian_enabled()"
msgstr ""

#: ../classes/class_streampeer.rst:112
msgid "为 ``true`` 时，该 ``StreamPeer`` 进行编解码时会使用大端格式。"
msgstr ""

#: ../classes/class_streampeer.rst:115
msgid "方法说明"
msgstr ""

#: ../classes/class_streampeer.rst:119
msgid ":ref:`int<class_int>` **get_16** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:121
msgid "从流中获取一个有符号 16 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:127
msgid ":ref:`int<class_int>` **get_32** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:129
msgid "从流中获取一个有符号 32 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:135
msgid ":ref:`int<class_int>` **get_64** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:137
msgid "从流中获取一个有符号 64 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:143
msgid ":ref:`int<class_int>` **get_8** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:145
msgid "从流中获取一个有符号字节。"
msgstr ""

#: ../classes/class_streampeer.rst:151
msgid ":ref:`int<class_int>` **get_available_bytes** **(** **)** |const|"
msgstr ""

#: ../classes/class_streampeer.rst:153
msgid "返回该 ``StreamPeer`` 可用的字节数。"
msgstr ""

#: ../classes/class_streampeer.rst:159
msgid ":ref:`Array<class_Array>` **get_data** **(** :ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../classes/class_streampeer.rst:161
msgid "返回接收到的块数据。可以使用 ``bytes`` 参数设置所需接收的字节数。如果可用的字节数不足，函数会阻塞至接收到所需字节数为止。该函数返回两个值，一个 :ref:`Error<enum_@GlobalScope_Error>` 错误码以及一个数据数组。"
msgstr ""

#: ../classes/class_streampeer.rst:167
msgid ":ref:`float<class_float>` **get_double** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:169
msgid "从流中获取一个双精度浮点数。"
msgstr ""

#: ../classes/class_streampeer.rst:175
msgid ":ref:`float<class_float>` **get_float** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:177
msgid "从流中获取一个单精度浮点数。"
msgstr ""

#: ../classes/class_streampeer.rst:183
msgid ":ref:`Array<class_Array>` **get_partial_data** **(** :ref:`int<class_int>` bytes **)**"
msgstr ""

#: ../classes/class_streampeer.rst:185
msgid "返回接收到的块数据。可以使用“bytes”参数设置所需接收的字节数。如果可用的字节数不足，函数会阻塞至接收到所需字节数为止。该函数返回两个值，一个 :ref:`Error<enum_@GlobalScope_Error>` 错误码以及一个数据数组。"
msgstr ""

#: ../classes/class_streampeer.rst:191
msgid ":ref:`String<class_String>` **get_string** **(** :ref:`int<class_int>` bytes=-1 **)**"
msgstr ""

#: ../classes/class_streampeer.rst:193
msgid "从流中获取一个字节长度为 ``bytes`` 的字符串。如果 ``bytes`` 为负（默认），会按照 :ref:`put_string<class_StreamPeer_method_put_string>` 的逆向操作从流中读取长度。"
msgstr ""

#: ../classes/class_streampeer.rst:199
msgid ":ref:`int<class_int>` **get_u16** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:201
msgid "从流中获取一个无符号 16 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:207
msgid ":ref:`int<class_int>` **get_u32** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:209
msgid "从流中获取一个无符号 32 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:215
msgid ":ref:`int<class_int>` **get_u64** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:217
msgid "从流中获取一个无符号 64 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:223
msgid ":ref:`int<class_int>` **get_u8** **(** **)**"
msgstr ""

#: ../classes/class_streampeer.rst:225
msgid "从流中获取一个无符号字节。"
msgstr ""

#: ../classes/class_streampeer.rst:231
msgid ":ref:`String<class_String>` **get_utf8_string** **(** :ref:`int<class_int>` bytes=-1 **)**"
msgstr ""

#: ../classes/class_streampeer.rst:233
msgid "从流中获取一个字节长度为 ``bytes`` 的 UTF-8 字符串（将发送的字符串解码为 UTF-8）。如果 ``bytes`` 为负（默认），会按照 :ref:`put_utf8_string<class_StreamPeer_method_put_utf8_string>` 的逆向操作从流中读取长度。"
msgstr ""

#: ../classes/class_streampeer.rst:239
msgid ":ref:`Variant<class_Variant>` **get_var** **(** :ref:`bool<class_bool>` allow_objects=false **)**"
msgstr ""

#: ../classes/class_streampeer.rst:241
msgid "从流中获取一个 Variant。如果 ``allow_object`` 为 ``true``\\ ，则会允许解码出对象。"
msgstr ""

#: ../classes/class_streampeer.rst:243
msgid "\\ **警告：** 反序列化的对象可能包含会被执行的代码。如果序列化的对象来自不可信的来源，请勿使用该选项，以免造成远程代码执行等安全威胁。"
msgstr ""

#: ../classes/class_streampeer.rst:249
msgid "void **put_16** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:251
msgid "向流中放入一个有符号 16 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:257
msgid "void **put_32** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:259
msgid "向流中放入一个有符号 32 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:265
msgid "void **put_64** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:267
msgid "向流中放入一个有符号 64 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:273
msgid "void **put_8** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:275
msgid "向流中放入一个有符号字节。"
msgstr ""

#: ../classes/class_streampeer.rst:281
msgid ":ref:`Error<enum_@GlobalScope_Error>` **put_data** **(** :ref:`PoolByteArray<class_PoolByteArray>` data **)**"
msgstr ""

#: ../classes/class_streampeer.rst:283
msgid "通过连接发送块数据，数据完成发送前会阻塞。该函数返回 :ref:`Error<enum_@GlobalScope_Error>` 错误码。"
msgstr ""

#: ../classes/class_streampeer.rst:289
msgid "void **put_double** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:291
msgid "向流中放入一个双精度浮点数。"
msgstr ""

#: ../classes/class_streampeer.rst:297
msgid "void **put_float** **(** :ref:`float<class_float>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:299
msgid "向流中放入一个单精度浮点数。"
msgstr ""

#: ../classes/class_streampeer.rst:305
msgid ":ref:`Array<class_Array>` **put_partial_data** **(** :ref:`PoolByteArray<class_PoolByteArray>` data **)**"
msgstr ""

#: ../classes/class_streampeer.rst:307
msgid "通过连接发送数据。如果数据无法一次性发完，则仅会发送部分数据。该函数返回两个值，一个 :ref:`Error<enum_@GlobalScope_Error>` 错误码以及一个整数，表示实际发送的数据量。"
msgstr ""

#: ../classes/class_streampeer.rst:313
msgid "void **put_string** **(** :ref:`String<class_String>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:315
msgid "向流中放入一个以零结尾的 ASCII 字符串，前缀一个表示其长度的 32 位无符号整数。"
msgstr ""

#: ../classes/class_streampeer.rst:317
msgid "\\ **注意：** 如果想发送不包含长度前缀的 ASCII 字符串，可以使用 :ref:`put_data<class_StreamPeer_method_put_data>`\\ ："
msgstr ""

#: ../classes/class_streampeer.rst:327
msgid "void **put_u16** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:329
msgid "向流中放入一个无符号 16 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:335
msgid "void **put_u32** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:337
msgid "向流中放入一个无符号 32 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:343
msgid "void **put_u64** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:345
msgid "向流中放入一个无符号 64 位值。"
msgstr ""

#: ../classes/class_streampeer.rst:351
msgid "void **put_u8** **(** :ref:`int<class_int>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:353
msgid "向流中放入一个无符号字节。"
msgstr ""

#: ../classes/class_streampeer.rst:359
msgid "void **put_utf8_string** **(** :ref:`String<class_String>` value **)**"
msgstr ""

#: ../classes/class_streampeer.rst:361
msgid "向流中放入一个以零结尾的 UTF-8 字符串，前缀一个表示其长度的 32 位无符号整数。"
msgstr ""

#: ../classes/class_streampeer.rst:363
msgid "\\ **注意：** 如果想发送不包含长度前缀的 UTF-8 字符串，可以使用 :ref:`put_data<class_StreamPeer_method_put_data>`\\ ："
msgstr ""

#: ../classes/class_streampeer.rst:373
msgid "void **put_var** **(** :ref:`Variant<class_Variant>` value, :ref:`bool<class_bool>` full_objects=false **)**"
msgstr ""

#: ../classes/class_streampeer.rst:375
msgid "向流中放入一个 Variant。如果 ``full_objects`` 为 ``true``\\ ，则会允许将对象编码（其中可能包含代码）。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
