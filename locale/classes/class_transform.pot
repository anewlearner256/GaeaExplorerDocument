# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_transform.rst:10
msgid "Transform"
msgstr ""

#: ../classes/class_transform.rst:12
msgid "3D 变换（3×4 矩阵）。"
msgstr ""

#: ../classes/class_transform.rst:15
msgid "描述"
msgstr ""

#: ../classes/class_transform.rst:17
msgid "用于 3D 线性变换的 3×4 矩阵（3 行 4 列），可以表示平移、旋转、缩放等变换。它由一个 :ref:`basis<class_Transform_property_basis>`\\ （前 3 列）和一个 :ref:`origin<class_Transform_property_origin>` 的 :ref:`Vector3<class_Vector3>`\\ （最后一列）组成。"
msgstr ""

#: ../classes/class_transform.rst:19
msgid "更多信息请阅读文档文章《矩阵和变换》。"
msgstr ""

#: ../classes/class_transform.rst:22
msgid "教程"
msgstr ""

#: ../classes/class_transform.rst:24
msgid ":doc:`Math tutorial index <../tutorials/math/index>`"
msgstr ""

#: ../classes/class_transform.rst:26
msgid ":doc:`Matrices and transforms <../tutorials/math/matrices_and_transforms>`"
msgstr ""

#: ../classes/class_transform.rst:28
msgid ":doc:`Using 3D transforms <../tutorials/3d/using_transforms>`"
msgstr ""

#: ../classes/class_transform.rst:30
msgid "`Matrix Transform Demo <https://godotengine.org/asset-library/asset/584>`__"
msgstr ""

#: ../classes/class_transform.rst:32
msgid "`3D Platformer Demo <https://godotengine.org/asset-library/asset/125>`__"
msgstr ""

#: ../classes/class_transform.rst:34
msgid "`2.5D Demo <https://godotengine.org/asset-library/asset/583>`__"
msgstr ""

#: ../classes/class_transform.rst:37
msgid "属性"
msgstr ""

#: ../classes/class_transform.rst:40
msgid ":ref:`Basis<class_Basis>`"
msgstr ""

#: ../classes/class_transform.rst:40
msgid ":ref:`basis<class_Transform_property_basis>`"
msgstr ""

#: ../classes/class_transform.rst:40
#: ../classes/class_transform.rst:109
msgid "``Basis( 1, 0, 0, 0, 1, 0, 0, 0, 1 )``"
msgstr ""

#: ../classes/class_transform.rst:42
msgid ":ref:`Vector3<class_Vector3>`"
msgstr ""

#: ../classes/class_transform.rst:42
msgid ":ref:`origin<class_Transform_property_origin>`"
msgstr ""

#: ../classes/class_transform.rst:42
#: ../classes/class_transform.rst:121
msgid "``Vector3( 0, 0, 0 )``"
msgstr ""

#: ../classes/class_transform.rst:46
msgid "方法"
msgstr ""

#: ../classes/class_transform.rst:49
#: ../classes/class_transform.rst:51
#: ../classes/class_transform.rst:53
#: ../classes/class_transform.rst:55
#: ../classes/class_transform.rst:57
#: ../classes/class_transform.rst:59
#: ../classes/class_transform.rst:61
#: ../classes/class_transform.rst:63
#: ../classes/class_transform.rst:67
#: ../classes/class_transform.rst:69
#: ../classes/class_transform.rst:71
#: ../classes/class_transform.rst:73
#: ../classes/class_transform.rst:75
msgid ":ref:`Transform<class_Transform>`"
msgstr ""

#: ../classes/class_transform.rst:49
msgid ":ref:`Transform<class_Transform_method_Transform>` **(** :ref:`Vector3<class_Vector3>` x_axis, :ref:`Vector3<class_Vector3>` y_axis, :ref:`Vector3<class_Vector3>` z_axis, :ref:`Vector3<class_Vector3>` origin **)**"
msgstr ""

#: ../classes/class_transform.rst:51
msgid ":ref:`Transform<class_Transform_method_Transform>` **(** :ref:`Basis<class_Basis>` basis, :ref:`Vector3<class_Vector3>` origin **)**"
msgstr ""

#: ../classes/class_transform.rst:53
msgid ":ref:`Transform<class_Transform_method_Transform>` **(** :ref:`Transform2D<class_Transform2D>` from **)**"
msgstr ""

#: ../classes/class_transform.rst:55
msgid ":ref:`Transform<class_Transform_method_Transform>` **(** :ref:`Quat<class_Quat>` from **)**"
msgstr ""

#: ../classes/class_transform.rst:57
msgid ":ref:`Transform<class_Transform_method_Transform>` **(** :ref:`Basis<class_Basis>` from **)**"
msgstr ""

#: ../classes/class_transform.rst:59
msgid ":ref:`affine_inverse<class_Transform_method_affine_inverse>` **(** **)**"
msgstr ""

#: ../classes/class_transform.rst:61
msgid ":ref:`interpolate_with<class_Transform_method_interpolate_with>` **(** :ref:`Transform<class_Transform>` transform, :ref:`float<class_float>` weight **)**"
msgstr ""

#: ../classes/class_transform.rst:63
msgid ":ref:`inverse<class_Transform_method_inverse>` **(** **)**"
msgstr ""

#: ../classes/class_transform.rst:65
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_transform.rst:65
msgid ":ref:`is_equal_approx<class_Transform_method_is_equal_approx>` **(** :ref:`Transform<class_Transform>` transform **)**"
msgstr ""

#: ../classes/class_transform.rst:67
msgid ":ref:`looking_at<class_Transform_method_looking_at>` **(** :ref:`Vector3<class_Vector3>` target, :ref:`Vector3<class_Vector3>` up **)**"
msgstr ""

#: ../classes/class_transform.rst:69
msgid ":ref:`orthonormalized<class_Transform_method_orthonormalized>` **(** **)**"
msgstr ""

#: ../classes/class_transform.rst:71
msgid ":ref:`rotated<class_Transform_method_rotated>` **(** :ref:`Vector3<class_Vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../classes/class_transform.rst:73
msgid ":ref:`scaled<class_Transform_method_scaled>` **(** :ref:`Vector3<class_Vector3>` scale **)**"
msgstr ""

#: ../classes/class_transform.rst:75
msgid ":ref:`translated<class_Transform_method_translated>` **(** :ref:`Vector3<class_Vector3>` offset **)**"
msgstr ""

#: ../classes/class_transform.rst:77
#: ../classes/class_transform.rst:79
msgid ":ref:`Variant<class_Variant>`"
msgstr ""

#: ../classes/class_transform.rst:77
msgid ":ref:`xform<class_Transform_method_xform>` **(** :ref:`Variant<class_Variant>` v **)**"
msgstr ""

#: ../classes/class_transform.rst:79
msgid ":ref:`xform_inv<class_Transform_method_xform_inv>` **(** :ref:`Variant<class_Variant>` v **)**"
msgstr ""

#: ../classes/class_transform.rst:83
msgid "常量"
msgstr ""

#: ../classes/class_transform.rst:93
msgid "**IDENTITY** = **Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )** --- 未应用平移、旋转、缩放的 ``Transform``\\ 。当应用于其他数据结构时，\\ :ref:`IDENTITY<class_Transform_constant_IDENTITY>` 不执行变换。"
msgstr ""

#: ../classes/class_transform.rst:95
msgid "**FLIP_X** = **Transform( -1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 )** --- ``Transform`` 变换与垂直于YZ平面的镜像应用。"
msgstr ""

#: ../classes/class_transform.rst:97
msgid "**FLIP_Y** = **Transform( 1, 0, 0, 0, -1, 0, 0, 0, 1, 0, 0, 0 )** --- ``Transform`` 变换与垂直于XZ平面的镜像应用。"
msgstr ""

#: ../classes/class_transform.rst:99
msgid "**FLIP_Z** = **Transform( 1, 0, 0, 0, 1, 0, 0, 0, -1, 0, 0, 0 )** --- ``Transform``\\ 变换与垂直于XY平面的镜像应用。"
msgstr ""

#: ../classes/class_transform.rst:102
msgid "属性说明"
msgstr ""

#: ../classes/class_transform.rst:106
msgid ":ref:`Basis<class_Basis>` **basis**"
msgstr ""

#: ../classes/class_transform.rst:109
#: ../classes/class_transform.rst:121
msgid "*Default*"
msgstr ""

#: ../classes/class_transform.rst:112
msgid "基础是一个包含3个\\ :ref:`Vector3<class_Vector3>`\\ 作为其列的矩阵：X轴、Y轴和Z轴。这些向量可以被解释为随物体移动的局部坐标系的基础向量。"
msgstr ""

#: ../classes/class_transform.rst:118
msgid ":ref:`Vector3<class_Vector3>` **origin**"
msgstr ""

#: ../classes/class_transform.rst:124
msgid "变换的平移偏移量，即第3、4列。相当于数组索引\\ ``3``\\ 。"
msgstr ""

#: ../classes/class_transform.rst:127
msgid "方法说明"
msgstr ""

#: ../classes/class_transform.rst:131
msgid ":ref:`Transform<class_Transform>` **Transform** **(** :ref:`Vector3<class_Vector3>` x_axis, :ref:`Vector3<class_Vector3>` y_axis, :ref:`Vector3<class_Vector3>` z_axis, :ref:`Vector3<class_Vector3>` origin **)**"
msgstr ""

#: ../classes/class_transform.rst:133
msgid "从四个 :ref:`Vector3<class_Vector3>` 值（即矩阵列）构造一个变换。每个轴对应于局部基础向量，其中一些可能被缩放。"
msgstr ""

#: ../classes/class_transform.rst:137
msgid ":ref:`Transform<class_Transform>` **Transform** **(** :ref:`Basis<class_Basis>` basis, :ref:`Vector3<class_Vector3>` origin **)**"
msgstr ""

#: ../classes/class_transform.rst:139
msgid "从 :ref:`Basis<class_Basis>` 和 :ref:`Vector3<class_Vector3>` 构造一个 Transform 变换。"
msgstr ""

#: ../classes/class_transform.rst:143
msgid ":ref:`Transform<class_Transform>` **Transform** **(** :ref:`Transform2D<class_Transform2D>` from **)**"
msgstr ""

#: ../classes/class_transform.rst:145
msgid "从一个 :ref:`Transform2D<class_Transform2D>` 构造一个 Transform 变换。"
msgstr ""

#: ../classes/class_transform.rst:149
msgid ":ref:`Transform<class_Transform>` **Transform** **(** :ref:`Quat<class_Quat>` from **)**"
msgstr ""

#: ../classes/class_transform.rst:151
msgid "从一个 :ref:`Quat<class_Quat>` 构造一个 Transform 变换。原点是 ``Vector3(0, 0, 0)``\\ 。"
msgstr ""

#: ../classes/class_transform.rst:155
msgid ":ref:`Transform<class_Transform>` **Transform** **(** :ref:`Basis<class_Basis>` from **)**"
msgstr ""

#: ../classes/class_transform.rst:157
msgid "从一个 :ref:`Basis<class_Basis>` 构造 Transform 变换。原点是 Vector3(0, 0, 0)。"
msgstr ""

#: ../classes/class_transform.rst:163
msgid ":ref:`Transform<class_Transform>` **affine_inverse** **(** **)**"
msgstr ""

#: ../classes/class_transform.rst:165
msgid "返回变换的反值，假设变换是由旋转、缩放和平移组成的。"
msgstr ""

#: ../classes/class_transform.rst:171
msgid ":ref:`Transform<class_Transform>` **interpolate_with** **(** :ref:`Transform<class_Transform>` transform, :ref:`float<class_float>` weight **)**"
msgstr ""

#: ../classes/class_transform.rst:173
msgid "通过权重，即在0.0到1.0的范围内，将变换与其他变换进行插值。"
msgstr ""

#: ../classes/class_transform.rst:179
msgid ":ref:`Transform<class_Transform>` **inverse** **(** **)**"
msgstr ""

#: ../classes/class_transform.rst:181
msgid "返回变换的反值，假设该变换是由旋转和平移组成的（没有缩放，对有缩放的变换使用 affine_inverse）。"
msgstr ""

#: ../classes/class_transform.rst:187
msgid ":ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Transform<class_Transform>` transform **)**"
msgstr ""

#: ../classes/class_transform.rst:189
msgid "如果这个变换和\\ ``transform``\\ 近似相等，通过对每个分量调用\\ ``is_equal_approx``\\ ，而返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_transform.rst:195
msgid ":ref:`Transform<class_Transform>` **looking_at** **(** :ref:`Vector3<class_Vector3>` target, :ref:`Vector3<class_Vector3>` up **)**"
msgstr ""

#: ../classes/class_transform.rst:197
msgid "返回一个旋转后的变换副本，使其-Z轴指向\\ ``target``\\ 位置。"
msgstr ""

#: ../classes/class_transform.rst:199
msgid "变换将首先围绕给定的\\ ``up``\\ 向量旋转，然后进一步通过围绕垂直于\\ ``target``\\ 和\\ ``up``\\ 向量的轴旋转，来完全与目标对齐。"
msgstr ""

#: ../classes/class_transform.rst:201
msgid "操作是在全局空间进行的。"
msgstr ""

#: ../classes/class_transform.rst:207
msgid ":ref:`Transform<class_Transform>` **orthonormalized** **(** **)**"
msgstr ""

#: ../classes/class_transform.rst:209
msgid "返回具有基于正交，即90度，和归一化轴向量的变换。"
msgstr ""

#: ../classes/class_transform.rst:215
msgid ":ref:`Transform<class_Transform>` **rotated** **(** :ref:`Vector3<class_Vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../classes/class_transform.rst:217
msgid "使用矩阵乘法，围绕给定的轴旋转给定的角度，即弧度。轴必须是一个归一化的向量。"
msgstr ""

#: ../classes/class_transform.rst:223
msgid ":ref:`Transform<class_Transform>` **scaled** **(** :ref:`Vector3<class_Vector3>` scale **)**"
msgstr ""

#: ../classes/class_transform.rst:225
msgid "使用矩阵乘法，通过给定的缩放系数，对变换的基础和原点进行缩放。"
msgstr ""

#: ../classes/class_transform.rst:231
msgid ":ref:`Transform<class_Transform>` **translated** **(** :ref:`Vector3<class_Vector3>` offset **)**"
msgstr ""

#: ../classes/class_transform.rst:233
msgid "相对于变换的基础向量，将变换按给定的偏移量进行平移。"
msgstr ""

#: ../classes/class_transform.rst:235
msgid "与\\ :ref:`rotated<class_Transform_method_rotated>`\\ 和\\ :ref:`scaled<class_Transform_method_scaled>`\\ 不同，它不使用矩阵乘法。"
msgstr ""

#: ../classes/class_transform.rst:241
msgid ":ref:`Variant<class_Variant>` **xform** **(** :ref:`Variant<class_Variant>` v **)**"
msgstr ""

#: ../classes/class_transform.rst:243
msgid "通过这个变换对指定的\\ :ref:`Vector3<class_Vector3>`\\ 、\\ :ref:`Plane<class_Plane>`\\ 、\\ :ref:`AABB<class_AABB>`\\ 或\\ :ref:`PoolVector3Array<class_PoolVector3Array>`\\ 进行变换。"
msgstr ""

#: ../classes/class_transform.rst:249
msgid ":ref:`Variant<class_Variant>` **xform_inv** **(** :ref:`Variant<class_Variant>` v **)**"
msgstr ""

#: ../classes/class_transform.rst:251
msgid "将给定的 :ref:`Vector3<class_Vector3>`\\ 、\\ :ref:`Plane<class_Plane>`\\ 、\\ :ref:`AABB<class_AABB>`\\ 、\\ :ref:`PoolVector3Array<class_PoolVector3Array>` 做该变换的逆变换，前提假设是该变换仅由旋转和平移构成（不包括缩放）。等价于调用该变换的 ``inverse().xform(v)``\\ 。仿射变换（即包含缩放）请参阅 :ref:`affine_inverse<class_Transform_method_affine_inverse>` 方法。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
