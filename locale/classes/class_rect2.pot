# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_rect2.rst:10
msgid "Rect2"
msgstr ""

#: ../classes/class_rect2.rst:12
msgid "2D 轴对齐边界框。"
msgstr ""

#: ../classes/class_rect2.rst:15
msgid "描述"
msgstr ""

#: ../classes/class_rect2.rst:17
msgid "``Rect2`` consists of a position, a size, and several utility functions. It is typically used for fast overlap tests."
msgstr ""

#: ../classes/class_rect2.rst:19
msgid "It uses floating-point coordinates."
msgstr ""

#: ../classes/class_rect2.rst:21
msgid "The 3D counterpart to ``Rect2`` is :ref:`AABB<class_AABB>`."
msgstr ""

#: ../classes/class_rect2.rst:23
msgid "Negative values for :ref:`size<class_Rect2_property_size>` are not supported and will not work for most methods. Use :ref:`abs<class_Rect2_method_abs>` to get a Rect2 with a positive size."
msgstr ""

#: ../classes/class_rect2.rst:26
msgid "教程"
msgstr ""

#: ../classes/class_rect2.rst:28
msgid ":doc:`Math tutorial index <../tutorials/math/index>`"
msgstr ""

#: ../classes/class_rect2.rst:30
msgid ":doc:`Vector math <../tutorials/math/vector_math>`"
msgstr ""

#: ../classes/class_rect2.rst:32
msgid ":doc:`Advanced vector math <../tutorials/math/vectors_advanced>`"
msgstr ""

#: ../classes/class_rect2.rst:35
msgid "属性"
msgstr ""

#: ../classes/class_rect2.rst:38
#: ../classes/class_rect2.rst:40
#: ../classes/class_rect2.rst:42
#: ../classes/class_rect2.rst:63
msgid ":ref:`Vector2<class_Vector2>`"
msgstr ""

#: ../classes/class_rect2.rst:38
msgid ":ref:`end<class_Rect2_property_end>`"
msgstr ""

#: ../classes/class_rect2.rst:38
#: ../classes/class_rect2.rst:40
#: ../classes/class_rect2.rst:42
#: ../classes/class_rect2.rst:90
#: ../classes/class_rect2.rst:102
#: ../classes/class_rect2.rst:114
msgid "``Vector2( 0, 0 )``"
msgstr ""

#: ../classes/class_rect2.rst:40
msgid ":ref:`position<class_Rect2_property_position>`"
msgstr ""

#: ../classes/class_rect2.rst:42
msgid ":ref:`size<class_Rect2_property_size>`"
msgstr ""

#: ../classes/class_rect2.rst:46
msgid "方法"
msgstr ""

#: ../classes/class_rect2.rst:49
#: ../classes/class_rect2.rst:51
#: ../classes/class_rect2.rst:53
#: ../classes/class_rect2.rst:55
#: ../classes/class_rect2.rst:59
#: ../classes/class_rect2.rst:65
#: ../classes/class_rect2.rst:67
#: ../classes/class_rect2.rst:69
#: ../classes/class_rect2.rst:79
msgid ":ref:`Rect2<class_Rect2>`"
msgstr ""

#: ../classes/class_rect2.rst:49
msgid ":ref:`Rect2<class_Rect2_method_Rect2>` **(** :ref:`Vector2<class_Vector2>` position, :ref:`Vector2<class_Vector2>` size **)**"
msgstr ""

#: ../classes/class_rect2.rst:51
msgid ":ref:`Rect2<class_Rect2_method_Rect2>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` width, :ref:`float<class_float>` height **)**"
msgstr ""

#: ../classes/class_rect2.rst:53
msgid ":ref:`abs<class_Rect2_method_abs>` **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:55
msgid ":ref:`clip<class_Rect2_method_clip>` **(** :ref:`Rect2<class_Rect2>` b **)**"
msgstr ""

#: ../classes/class_rect2.rst:57
#: ../classes/class_rect2.rst:71
#: ../classes/class_rect2.rst:73
#: ../classes/class_rect2.rst:75
#: ../classes/class_rect2.rst:77
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_rect2.rst:57
msgid ":ref:`encloses<class_Rect2_method_encloses>` **(** :ref:`Rect2<class_Rect2>` b **)**"
msgstr ""

#: ../classes/class_rect2.rst:59
msgid ":ref:`expand<class_Rect2_method_expand>` **(** :ref:`Vector2<class_Vector2>` to **)**"
msgstr ""

#: ../classes/class_rect2.rst:61
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_rect2.rst:61
msgid ":ref:`get_area<class_Rect2_method_get_area>` **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:63
msgid ":ref:`get_center<class_Rect2_method_get_center>` **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:65
msgid ":ref:`grow<class_Rect2_method_grow>` **(** :ref:`float<class_float>` by **)**"
msgstr ""

#: ../classes/class_rect2.rst:67
msgid ":ref:`grow_individual<class_Rect2_method_grow_individual>` **(** :ref:`float<class_float>` left, :ref:`float<class_float>` top, :ref:`float<class_float>` right, :ref:`float<class_float>`  bottom **)**"
msgstr ""

#: ../classes/class_rect2.rst:69
msgid ":ref:`grow_margin<class_Rect2_method_grow_margin>` **(** :ref:`int<class_int>` margin, :ref:`float<class_float>` by **)**"
msgstr ""

#: ../classes/class_rect2.rst:71
msgid ":ref:`has_no_area<class_Rect2_method_has_no_area>` **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:73
msgid ":ref:`has_point<class_Rect2_method_has_point>` **(** :ref:`Vector2<class_Vector2>` point **)**"
msgstr ""

#: ../classes/class_rect2.rst:75
msgid ":ref:`intersects<class_Rect2_method_intersects>` **(** :ref:`Rect2<class_Rect2>` b, :ref:`bool<class_bool>` include_borders=false **)**"
msgstr ""

#: ../classes/class_rect2.rst:77
msgid ":ref:`is_equal_approx<class_Rect2_method_is_equal_approx>` **(** :ref:`Rect2<class_Rect2>` rect **)**"
msgstr ""

#: ../classes/class_rect2.rst:79
msgid ":ref:`merge<class_Rect2_method_merge>` **(** :ref:`Rect2<class_Rect2>` b **)**"
msgstr ""

#: ../classes/class_rect2.rst:83
msgid "属性说明"
msgstr ""

#: ../classes/class_rect2.rst:87
msgid ":ref:`Vector2<class_Vector2>` **end**"
msgstr ""

#: ../classes/class_rect2.rst:90
#: ../classes/class_rect2.rst:102
#: ../classes/class_rect2.rst:114
msgid "*Default*"
msgstr ""

#: ../classes/class_rect2.rst:93
msgid "终点角。通过 ``position + size`` 计算而来。设置该值会修改大小。"
msgstr ""

#: ../classes/class_rect2.rst:99
msgid ":ref:`Vector2<class_Vector2>` **position**"
msgstr ""

#: ../classes/class_rect2.rst:105
msgid "起点角。通常比 :ref:`end<class_Rect2_property_end>` 小。"
msgstr ""

#: ../classes/class_rect2.rst:111
msgid ":ref:`Vector2<class_Vector2>` **size**"
msgstr ""

#: ../classes/class_rect2.rst:117
msgid "从\\ :ref:`position<class_Rect2_property_position>` 到 :ref:`end<class_Rect2_property_end>` 的大小。通常所有分量都是正数。"
msgstr ""

#: ../classes/class_rect2.rst:119
msgid "如果大小为负，可以用 :ref:`abs<class_Rect2_method_abs>` 修正。"
msgstr ""

#: ../classes/class_rect2.rst:122
msgid "方法说明"
msgstr ""

#: ../classes/class_rect2.rst:126
msgid ":ref:`Rect2<class_Rect2>` **Rect2** **(** :ref:`Vector2<class_Vector2>` position, :ref:`Vector2<class_Vector2>` size **)**"
msgstr ""

#: ../classes/class_rect2.rst:128
msgid "按位置和大小构造一个\\ ``Rect2``\\ 。"
msgstr ""

#: ../classes/class_rect2.rst:132
msgid ":ref:`Rect2<class_Rect2>` **Rect2** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` width, :ref:`float<class_float>` height **)**"
msgstr ""

#: ../classes/class_rect2.rst:134
msgid "通过x、y、宽度和高度构造一个\\ ``Rect2``\\ 。"
msgstr ""

#: ../classes/class_rect2.rst:140
msgid ":ref:`Rect2<class_Rect2>` **abs** **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:142
msgid "返回具有相同位置和面积的 ``Rect2``\\ ，经过修改，使左上角为原点，\\ ``width`` 和 ``height`` 为正数。"
msgstr ""

#: ../classes/class_rect2.rst:148
msgid ":ref:`Rect2<class_Rect2>` **clip** **(** :ref:`Rect2<class_Rect2>` b **)**"
msgstr ""

#: ../classes/class_rect2.rst:150
msgid "返回此 ``Rect2`` 和 b 的交集。"
msgstr ""

#: ../classes/class_rect2.rst:156
msgid ":ref:`bool<class_bool>` **encloses** **(** :ref:`Rect2<class_Rect2>` b **)**"
msgstr ""

#: ../classes/class_rect2.rst:158
msgid "如果此 ``Rect2`` 完全包含另一个，则返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_rect2.rst:164
msgid ":ref:`Rect2<class_Rect2>` **expand** **(** :ref:`Vector2<class_Vector2>` to **)**"
msgstr ""

#: ../classes/class_rect2.rst:166
msgid "返回该 ``Rect2`` 的副本，该副本扩展至包含给出的点。"
msgstr ""

#: ../classes/class_rect2.rst:168
msgid "\\ **例子：**\\"
msgstr ""

#: ../classes/class_rect2.rst:181
msgid ":ref:`float<class_float>` **get_area** **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:183
msgid "返回 ``Rect2`` 面积。"
msgstr ""

#: ../classes/class_rect2.rst:189
msgid ":ref:`Vector2<class_Vector2>` **get_center** **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:191
msgid "Returns the center of the ``Rect2``, which is equal to :ref:`position<class_Rect2_property_position>` + (:ref:`size<class_Rect2_property_size>` / 2)."
msgstr ""

#: ../classes/class_rect2.rst:197
msgid ":ref:`Rect2<class_Rect2>` **grow** **(** :ref:`float<class_float>` by **)**"
msgstr ""

#: ../classes/class_rect2.rst:199
msgid "返回 ``Rect2`` 的副本，该副本向所有边增长了给定数量的单位。"
msgstr ""

#: ../classes/class_rect2.rst:205
msgid ":ref:`Rect2<class_Rect2>` **grow_individual** **(** :ref:`float<class_float>` left, :ref:`float<class_float>` top, :ref:`float<class_float>` right, :ref:`float<class_float>`  bottom **)**"
msgstr ""

#: ../classes/class_rect2.rst:207
msgid "返回 ``Rect2`` 的副本，该副本分别向各边增长了给定数量的单位。"
msgstr ""

#: ../classes/class_rect2.rst:213
msgid ":ref:`Rect2<class_Rect2>` **grow_margin** **(** :ref:`int<class_int>` margin, :ref:`float<class_float>` by **)**"
msgstr ""

#: ../classes/class_rect2.rst:215
msgid "返回\\ ``Rect2``\\ 向\\ :ref:`Margin<enum_@GlobalScope_Margin>`\\ 方向增长给定数量单位的副本。"
msgstr ""

#: ../classes/class_rect2.rst:221
msgid ":ref:`bool<class_bool>` **has_no_area** **(** **)**"
msgstr ""

#: ../classes/class_rect2.rst:223
msgid "如果\\ ``Rect2``\\ 为flat或空，则返回\\ ``true``\\ 。"
msgstr ""

#: ../classes/class_rect2.rst:229
msgid ":ref:`bool<class_bool>` **has_point** **(** :ref:`Vector2<class_Vector2>` point **)**"
msgstr ""

#: ../classes/class_rect2.rst:231
msgid "返回 ``true`` 时，该 ``Rect2`` 包含此点。依照惯例，\\ ``Rect2`` 的右边缘和下边缘是被排除在外的，因此\\ **不**\\ 包含位于这两条边上的点。"
msgstr ""

#: ../classes/class_rect2.rst:233
msgid "\\ **注意：** 对于\\ *大小为负*\\ 的 ``Rect2``\\ ，该方法并不可靠。请使用 :ref:`abs<class_Rect2_method_abs>` 获取等价的正数大小矩形再检查是否包含某个点。"
msgstr ""

#: ../classes/class_rect2.rst:239
msgid ":ref:`bool<class_bool>` **intersects** **(** :ref:`Rect2<class_Rect2>` b, :ref:`bool<class_bool>` include_borders=false **)**"
msgstr ""

#: ../classes/class_rect2.rst:241
msgid "如果 ``Rect2`` 与 ``b`` 重叠（即它们至少有一个共同点），则返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_rect2.rst:243
msgid "如果 ``include_borders`` 是 ``true``\\ ，如果它们的边界接触，即使没有交叉，它们也会被视为重叠。"
msgstr ""

#: ../classes/class_rect2.rst:249
msgid ":ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Rect2<class_Rect2>` rect **)**"
msgstr ""

#: ../classes/class_rect2.rst:251
msgid "通过在每个组件上调用 ``is_equal_approx``\\ ，如果此 ``Rect2`` 和 ``rect`` 大致相等，则返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_rect2.rst:257
msgid ":ref:`Rect2<class_Rect2>` **merge** **(** :ref:`Rect2<class_Rect2>` b **)**"
msgstr ""

#: ../classes/class_rect2.rst:259
msgid "返回一个更大的 ``Rect2``\\ ，其中包含这个 ``Rect2`` 和 ``b``\\ 。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
