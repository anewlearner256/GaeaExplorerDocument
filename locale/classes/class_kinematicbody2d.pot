# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_kinematicbody2d.rst:10
msgid "KinematicBody2D"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:12
msgid "**Inherits:** :ref:`PhysicsBody2D<class_PhysicsBody2D>` **<** :ref:`CollisionObject2D<class_CollisionObject2D>` **<** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:14
msgid "2D运动体节点。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:19
msgid "运动体是特殊类型的物体，旨在让用户控制。它们完全不受物理影响；对于其他类型的物体，如角色或刚体，它们与静态体一样。然而，它们有两个主要用途:"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:21
msgid "\\ **模拟运动：**\\ 当这些物体被手动移动时，无论是从代码还是从\\ :ref:`AnimationPlayer<class_AnimationPlayer>`\\ ，将\\ :ref:`AnimationPlayer.playback_process_mode<class_AnimationPlayer_property_playback_process_mode>`\\ 设置为 \"physics\"，物理将自动计算其线性和角速度的估值。这使得它们对于移动平台或其他AnimationPlayer控制的物体非常有用，比如一扇门、一座能打开的桥等。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:23
msgid "\\ **运动型角色：** KinematicBody2D也有一个API用于移动物体（\\ :ref:`move_and_collide<class_KinematicBody2D_method_move_and_collide>`\\ 和\\ :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>`\\ 方法），同时进行碰撞测试。这使得它们在实现对世界进行碰撞，但不需要高级物理的角色时非常有用。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:26
msgid "教程"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:28
msgid ":doc:`Kinematic character (2D) <../tutorials/physics/kinematic_character_2d>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:30
msgid ":doc:`Using KinematicBody2D <../tutorials/physics/using_kinematic_body_2d>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:32
msgid "`2D Kinematic Character Demo <https://godotengine.org/asset-library/asset/113>`__"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:34
msgid "`2D Platformer Demo <https://godotengine.org/asset-library/asset/120>`__"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:37
msgid "属性"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:40
#: ../classes/class_kinematicbody2d.rst:49
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:40
msgid ":ref:`collision/safe_margin<class_KinematicBody2D_property_collision/safe_margin>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:40
#: ../classes/class_kinematicbody2d.rst:84
msgid "``0.08``"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:42
#: ../classes/class_kinematicbody2d.rst:61
#: ../classes/class_kinematicbody2d.rst:63
#: ../classes/class_kinematicbody2d.rst:65
#: ../classes/class_kinematicbody2d.rst:73
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:42
msgid ":ref:`motion/sync_to_physics<class_KinematicBody2D_property_motion/sync_to_physics>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:42
#: ../classes/class_kinematicbody2d.rst:106
msgid "``false``"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:46
msgid "方法"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:49
msgid ":ref:`get_floor_angle<class_KinematicBody2D_method_get_floor_angle>` **(** :ref:`Vector2<class_Vector2>` up_direction=Vector2( 0, -1 ) **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:51
#: ../classes/class_kinematicbody2d.rst:53
#: ../classes/class_kinematicbody2d.rst:69
#: ../classes/class_kinematicbody2d.rst:71
msgid ":ref:`Vector2<class_Vector2>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:51
msgid ":ref:`get_floor_normal<class_KinematicBody2D_method_get_floor_normal>` **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:53
msgid ":ref:`get_floor_velocity<class_KinematicBody2D_method_get_floor_velocity>` **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:55
#: ../classes/class_kinematicbody2d.rst:57
#: ../classes/class_kinematicbody2d.rst:67
msgid ":ref:`KinematicCollision2D<class_KinematicCollision2D>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:55
msgid ":ref:`get_last_slide_collision<class_KinematicBody2D_method_get_last_slide_collision>` **(** **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:57
msgid ":ref:`get_slide_collision<class_KinematicBody2D_method_get_slide_collision>` **(** :ref:`int<class_int>` slide_idx **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:59
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:59
msgid ":ref:`get_slide_count<class_KinematicBody2D_method_get_slide_count>` **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:61
msgid ":ref:`is_on_ceiling<class_KinematicBody2D_method_is_on_ceiling>` **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:63
msgid ":ref:`is_on_floor<class_KinematicBody2D_method_is_on_floor>` **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:65
msgid ":ref:`is_on_wall<class_KinematicBody2D_method_is_on_wall>` **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:67
msgid ":ref:`move_and_collide<class_KinematicBody2D_method_move_and_collide>` **(** :ref:`Vector2<class_Vector2>` rel_vec, :ref:`bool<class_bool>` infinite_inertia=true, :ref:`bool<class_bool>` exclude_raycast_shapes=true, :ref:`bool<class_bool>` test_only=false **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:69
msgid ":ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` **(** :ref:`Vector2<class_Vector2>` linear_velocity, :ref:`Vector2<class_Vector2>` up_direction=Vector2( 0, 0 ), :ref:`bool<class_bool>` stop_on_slope=false, :ref:`int<class_int>` max_slides=4, :ref:`float<class_float>` floor_max_angle=0.785398, :ref:`bool<class_bool>` infinite_inertia=true **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:71
msgid ":ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` **(** :ref:`Vector2<class_Vector2>` linear_velocity, :ref:`Vector2<class_Vector2>` snap, :ref:`Vector2<class_Vector2>` up_direction=Vector2( 0, 0 ), :ref:`bool<class_bool>` stop_on_slope=false, :ref:`int<class_int>` max_slides=4, :ref:`float<class_float>` floor_max_angle=0.785398, :ref:`bool<class_bool>` infinite_inertia=true **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:73
msgid ":ref:`test_move<class_KinematicBody2D_method_test_move>` **(** :ref:`Transform2D<class_Transform2D>` from, :ref:`Vector2<class_Vector2>` rel_vec, :ref:`bool<class_bool>` infinite_inertia=true **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:77
msgid "属性说明"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:81
msgid ":ref:`float<class_float>` **collision/safe_margin**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:84
#: ../classes/class_kinematicbody2d.rst:106
msgid "*Default*"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:86
#: ../classes/class_kinematicbody2d.rst:108
msgid "*Setter*"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:86
msgid "set_safe_margin(value)"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:88
#: ../classes/class_kinematicbody2d.rst:110
msgid "*Getter*"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:88
msgid "get_safe_margin()"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:91
msgid "在运动函数中用于碰撞恢复的额外边距，参阅\\ :ref:`move_and_collide<class_KinematicBody2D_method_move_and_collide>`, :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>`, :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>`\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:93
msgid "如果物体离另一个物体至少这么近，它就会认为它们正在发生碰撞，并在执行实际运动之前被推开。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:95
msgid "一个较高的值意味着它在检测碰撞时更加灵活，这有助于持续检测墙壁和地板。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:97
msgid "一个较低的值迫使碰撞算法使用更精确的检测，所以它可以用于特别需要精确性的情况，例如在非常低的比例下避免可见的抖动，或者用于运动体堆叠的稳定性。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:103
msgid ":ref:`bool<class_bool>` **motion/sync_to_physics**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:108
msgid "set_sync_to_physics(value)"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:110
msgid "is_sync_to_physics_enabled()"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:113
msgid "如果为\\ ``true``\\ ，则物体的运动将与物理帧同步。当通过\\ :ref:`AnimationPlayer<class_AnimationPlayer>`\\ 为运动设置动画时，例如在移动平台上，这个功能很有用。请\\ **不要**\\ 与 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_collide<class_KinematicBody2D_method_move_and_collide>` 函数一起使用。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:116
msgid "方法说明"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:120
msgid ":ref:`float<class_float>` **get_floor_angle** **(** :ref:`Vector2<class_Vector2>` up_direction=Vector2( 0, -1 ) **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:122
msgid "根据\\ ``up_direction``\\ 返回最后一个碰撞点的地板碰撞角度，默认为\\ ``Vector2.UP``\\ 。此值始终为正值，并且仅在调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 后且当 :ref:`is_on_floor<class_KinematicBody2D_method_is_on_floor>` 返回 ``true`` 时有效。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:128
msgid ":ref:`Vector2<class_Vector2>` **get_floor_normal** **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:130
msgid "返回最后一个碰撞点的地板的表面法线。只有在调用\\ :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>`\\ 或\\ :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>`\\ 后，以及\\ :ref:`is_on_floor<class_KinematicBody2D_method_is_on_floor>`\\ 返回\\ ``true``\\ 时才有效。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:136
msgid ":ref:`Vector2<class_Vector2>` **get_floor_velocity** **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:138
msgid "返回最后一个碰撞点地板的线速度。仅在调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` 且 :ref:`is_on_floor<class_KinematicBody2D_method_is_on_floor>` 返回 ``true`` 后有效。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:144
msgid ":ref:`KinematicCollision2D<class_KinematicCollision2D>` **get_last_slide_collision** **(** **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:146
msgid "返回\\ :ref:`KinematicCollision2D<class_KinematicCollision2D>`\\ ，它包含在最后一次调用\\ :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>`\\ 时发生的最新碰撞信息。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:152
msgid ":ref:`KinematicCollision2D<class_KinematicCollision2D>` **get_slide_collision** **(** :ref:`int<class_int>` slide_idx **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:154
msgid "返回 :ref:`KinematicCollision2D<class_KinematicCollision2D>`\\ ，其中包含有关上次调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` 期间发生的碰撞的信息。由于物体可以在一次调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 时发生多次碰撞，因此你必须在 0 到 (:ref:`get_slide_count<class_KinematicBody2D_method_get_slide_count>` - 1) 范围内指定碰撞的索引。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:156
msgid "\\ **用法示例：**\\"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:168
msgid ":ref:`int<class_int>` **get_slide_count** **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:170
msgid "返回上次调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` 期间物体发生碰撞和改变方向的次数。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:176
msgid ":ref:`bool<class_bool>` **is_on_ceiling** **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:178
msgid "如果在最后一次调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` 时物体与天花板发生碰撞，则返回 ``true``\\ 。否则，返回 ``false``\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:184
msgid ":ref:`bool<class_bool>` **is_on_floor** **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:186
msgid "如果在最后一次调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` 时物体与地板发生碰撞，则返回 ``true``\\ 。否则，返回 ``false``\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:192
msgid ":ref:`bool<class_bool>` **is_on_wall** **(** **)** |const|"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:194
msgid "如果在最后一次调用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>` 或 :ref:`move_and_slide_with_snap<class_KinematicBody2D_method_move_and_slide_with_snap>` 时物体与墙壁发生碰撞，则返回 ``true``\\ 。否则，返回 ``false``\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:200
msgid ":ref:`KinematicCollision2D<class_KinematicCollision2D>` **move_and_collide** **(** :ref:`Vector2<class_Vector2>` rel_vec, :ref:`bool<class_bool>` infinite_inertia=true, :ref:`bool<class_bool>` exclude_raycast_shapes=true, :ref:`bool<class_bool>` test_only=false **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:202
msgid "沿着向量 ``rel_vec`` 移动物体。如果发生碰撞，物体将停止。停止或在运动时与另一物体相接触时，返回包含碰撞相关信息的 :ref:`KinematicCollision<class_KinematicCollision>`\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:204
msgid "如果 ``test_only`` 为 ``true``\\ ，则物体不会移动，但会给出可能发生的碰撞信息。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:210
msgid ":ref:`Vector2<class_Vector2>` **move_and_slide** **(** :ref:`Vector2<class_Vector2>` linear_velocity, :ref:`Vector2<class_Vector2>` up_direction=Vector2( 0, 0 ), :ref:`bool<class_bool>` stop_on_slope=false, :ref:`int<class_int>` max_slides=4, :ref:`float<class_float>` floor_max_angle=0.785398, :ref:`bool<class_bool>` infinite_inertia=true **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:212
msgid "沿着向量移动物体。如果这个物体与另一个物体相撞，它将沿着另一个物体滑动，而不是立即停止。如果另一个物体是\\ ``KinematicBody2D``\\ 或\\ :ref:`RigidBody2D<class_RigidBody2D>`\\ ，它也会被另一个物体的运动所影响。你可以用它来制作移动和旋转的平台，或者让节点推动其他节点。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:214
msgid "这个方法应该在\\ :ref:`Node._physics_process<class_Node_method__physics_process>`\\ 中使用，或者在被\\ :ref:`Node._physics_process<class_Node_method__physics_process>`\\ 调用的方法中使用，因为它在计算时自动使用物理步骤的\\ ``delta``\\ 值。否则，模拟将以不正确的速度运行。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:216
msgid "\\ ``linear_velocity``\\ 是速度向量，单位是像素每秒。与\\ :ref:`move_and_collide<class_KinematicBody2D_method_move_and_collide>`\\ 不同的是，你\\ *不应该*\\ 将它乘以\\ ``delta``--物理引擎会处理应用速度。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:218
msgid "\\ ``up_direction`` 是向上的方向，用来确定什么是墙，什么是地板或天花板。如果设置为默认值\\ ``Vector2(0, 0)``\\ ，一切都被认为是墙。这对于自上而下的游戏很有用。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:220
msgid "如果\\ ``stop_on_slope``\\ 是\\ ``true``\\ ，当你在\\ ``linear_velocity``\\ 中包含重力并且物体静止时，物体就不会在斜坡上滑动。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:222
msgid "如果物体发生碰撞，它最多会改变方向\\ ``max_slides``\\ 次才会停止。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:224
msgid "\\ ``floor_max_angle``\\ 是一个最大的角度（弧度），在这个角度下，一个斜坡仍然被认为是地板或天花板，而不是墙。默认值等于45度。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:226
msgid "如果\\ ``infinite_inertia``\\ 是\\ ``true``\\ ，物体将能够推动\\ :ref:`RigidBody2D<class_RigidBody2D>`\\ 节点，但它也不会检测到任何与它们的碰撞。如果\\ ``false``\\ ，它将与\\ :ref:`RigidBody2D<class_RigidBody2D>`\\ 节点像\\ :ref:`StaticBody2D<class_StaticBody2D>`\\ 一样交互。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:228
msgid "返回\\ ``linear_velocity``\\ 向量，如果发生滑动碰撞，则旋转和/或缩放。要获得发生碰撞的详细信息，请使用\\ :ref:`get_slide_collision<class_KinematicBody2D_method_get_slide_collision>`\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:230
msgid "当物体接触到一个移动的平台时，平台的速度会自动加入到物体的运动中。如果由于平台的运动而发生碰撞，它将始终是滑动碰撞中的第一个。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:236
msgid ":ref:`Vector2<class_Vector2>` **move_and_slide_with_snap** **(** :ref:`Vector2<class_Vector2>` linear_velocity, :ref:`Vector2<class_Vector2>` snap, :ref:`Vector2<class_Vector2>` up_direction=Vector2( 0, 0 ), :ref:`bool<class_bool>` stop_on_slope=false, :ref:`int<class_int>` max_slides=4, :ref:`float<class_float>` floor_max_angle=0.785398, :ref:`bool<class_bool>` infinite_inertia=true **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:238
msgid "移动物体，同时使其保持附着在斜坡上。类似于 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>`\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:240
msgid "只要\\ ``snap``\\ 向量与地面接触，物体就会保持附着在表面上。例如，这意味着您必须禁用吸附才能跳转。您可以通过将\\ ``snap``\\ 设置为\\ ``(0,0)``\\ 或使用 :ref:`move_and_slide<class_KinematicBody2D_method_move_and_slide>`\\ 来做到这一点。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:246
msgid ":ref:`bool<class_bool>` **test_move** **(** :ref:`Transform2D<class_Transform2D>` from, :ref:`Vector2<class_Vector2>` rel_vec, :ref:`bool<class_bool>` infinite_inertia=true **)**"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:248
msgid "在不移动物体的情况下检查碰撞情况。假装将节点的位置、缩放和旋转设置为给定的 :ref:`Transform2D<class_Transform2D>`\\ ，然后尝试沿着向量 ``rel_vec`` 移动物体。如果物体在沿着完整路径移动过程中会发生碰撞停止，则返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_kinematicbody2d.rst:250
msgid "要检测物体接触而产生的碰撞，请使用 :ref:`move_and_collide<class_KinematicBody2D_method_move_and_collide>`\\ 。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
