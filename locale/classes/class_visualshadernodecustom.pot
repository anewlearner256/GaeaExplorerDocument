# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_visualshadernodecustom.rst:10
msgid "VisualShaderNodeCustom"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:12
msgid "**Inherits:** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:14
msgid "用于定义自定义\\ :ref:`VisualShaderNode<class_VisualShaderNode>`\\ 的虚拟类，以便在可视化着色器编辑器中使用。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:19
msgid "通过继承这个类，你可以创建一个自定义的\\ :ref:`VisualShader<class_VisualShader>`\\ 脚本插件，它将被自动添加到可视化着色器编辑器中。\\ :ref:`VisualShaderNode<class_VisualShaderNode>`\\ 的行为是通过重写所提供的虚方法来定义的。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:21
msgid "为了使节点被注册为编辑器插件，你必须使用\\ ``tool``\\ 关键字，并为自定义脚本提供一个\\ ``class_name``\\ 。例如:"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:30
msgid "教程"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:32
msgid ":doc:`../tutorials/plugins/editor/visual_shader_plugins`"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:35
msgid "方法"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:38
#: ../classes/class_visualshadernodecustom.rst:40
#: ../classes/class_visualshadernodecustom.rst:42
#: ../classes/class_visualshadernodecustom.rst:44
#: ../classes/class_visualshadernodecustom.rst:48
#: ../classes/class_visualshadernodecustom.rst:52
#: ../classes/class_visualshadernodecustom.rst:56
#: ../classes/class_visualshadernodecustom.rst:62
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:38
msgid ":ref:`_get_category<class_VisualShaderNodeCustom_method__get_category>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:40
msgid ":ref:`_get_code<class_VisualShaderNodeCustom_method__get_code>` **(** :ref:`Array<class_Array>` input_vars, :ref:`Array<class_Array>` output_vars, :ref:`int<class_int>` mode, :ref:`int<class_int>` type **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:42
msgid ":ref:`_get_description<class_VisualShaderNodeCustom_method__get_description>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:44
msgid ":ref:`_get_global_code<class_VisualShaderNodeCustom_method__get_global_code>` **(** :ref:`int<class_int>` mode **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:46
#: ../classes/class_visualshadernodecustom.rst:50
#: ../classes/class_visualshadernodecustom.rst:54
#: ../classes/class_visualshadernodecustom.rst:58
#: ../classes/class_visualshadernodecustom.rst:60
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:46
msgid ":ref:`_get_input_port_count<class_VisualShaderNodeCustom_method__get_input_port_count>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:48
msgid ":ref:`_get_input_port_name<class_VisualShaderNodeCustom_method__get_input_port_name>` **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:50
msgid ":ref:`_get_input_port_type<class_VisualShaderNodeCustom_method__get_input_port_type>` **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:52
msgid ":ref:`_get_name<class_VisualShaderNodeCustom_method__get_name>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:54
msgid ":ref:`_get_output_port_count<class_VisualShaderNodeCustom_method__get_output_port_count>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:56
msgid ":ref:`_get_output_port_name<class_VisualShaderNodeCustom_method__get_output_port_name>` **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:58
msgid ":ref:`_get_output_port_type<class_VisualShaderNodeCustom_method__get_output_port_type>` **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:60
msgid ":ref:`_get_return_icon_type<class_VisualShaderNodeCustom_method__get_return_icon_type>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:62
msgid ":ref:`_get_subcategory<class_VisualShaderNodeCustom_method__get_subcategory>` **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:66
msgid "方法说明"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:70
msgid ":ref:`String<class_String>` **_get_category** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:72
msgid "重写此方法，在可视化着色器编辑器的成员对话框中定义相关自定义节点的类别。路径可能看起来像 ``\"MyGame/MyFunctions/Noise\"``\\ 这样。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:74
msgid "定义这个方法是\\ **可选的**\\ 。如果未重写，该节点将被归入 \"Custom\" 自定义类别。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:80
msgid ":ref:`String<class_String>` **_get_code** **(** :ref:`Array<class_Array>` input_vars, :ref:`Array<class_Array>` output_vars, :ref:`int<class_int>` mode, :ref:`int<class_int>` type **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:82
msgid "重写此方法来定义相关自定义节点的实际着色器代码。着色器代码应该以字符串的形式返回，可以有多行，为了方便，可以使用\\ ``\"\"``\\ 多行字符串结构。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:84
msgid "\\ ``input_vars``\\ 和\\ ``output_vars``\\ 数组包含各种输入和输出变量的字符串名称，正如本类中\\ ``_get_input_*``\\ 和\\ ``_get_output_*``\\ 虚方法所定义的。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:86
msgid "输出端口可以在着色器代码中被分配值。例如，\\ ``return output_vars[0] + \" = \" + input_vars[0] + \";\"``\\ 。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:88
msgid "你可以根据着色器\\ ``mode``\\ （参阅\\ :ref:`Mode<enum_Shader_Mode>`\\ ）和/或\\ ``type``\\ （参阅\\ :ref:`Type<enum_VisualShader_Type>`\\ ）来定制生成的代码。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:90
msgid "定义这个方法是\\ **required**\\ 必须的。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:96
msgid ":ref:`String<class_String>` **_get_description** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:98
msgid "重写此方法来定义可视化着色器编辑器的成员对话框中的相关自定义节点的描述。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:100
#: ../classes/class_visualshadernodecustom.rst:114
msgid "定义这个方法是\\ **optional**\\ 可选的。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:106
msgid ":ref:`String<class_String>` **_get_global_code** **(** :ref:`int<class_int>` mode **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:108
msgid "重写此方法，在全局着色器之上添加着色器代码，以定义你自己的可重用方法、变量、常量、uniform等的标准库。着色器代码应以字符串的形式返回，可以有多行，为了方便，可以使用\\ ``\"\"``\\ 多行字符串结构。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:110
msgid "要小心使用这个功能，因为它可能导致与其他自定义节点的名称冲突，所以一定要给定义的实体起唯一的名字。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:112
msgid "你可以根据着色器\\ ``mode``\\ 来定制生成的代码，参阅\\ :ref:`Mode<enum_Shader_Mode>`\\ 。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:120
msgid ":ref:`int<class_int>` **_get_input_port_count** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:122
msgid "重写此方法来定义相关自定义节点的输入端口数量。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:124
msgid "定义这个方法是\\ **required**\\ 必须的。如果没有被重写，节点就没有输入端口。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:130
msgid ":ref:`String<class_String>` **_get_input_port_name** **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:132
msgid "重写此方法来定义相关自定义节点的输入端口的名称。这些名称既用于编辑器中的输入槽，也作为着色器代码中的标识符，并在\\ :ref:`_get_code<class_VisualShaderNodeCustom_method__get_code>`\\ 中的\\ ``input_vars``\\ 数组中传递。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:134
msgid "定义这个方法是\\ **可选的**\\ ，但推荐使用。如果没有被重写，输入端口被命名为\\ ``\"in\"+str(port)``\\ 。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:140
msgid ":ref:`int<class_int>` **_get_input_port_type** **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:142
msgid "重写此方法以定义相关自定义节点的每个输入端口的返回类型，参阅\\ :ref:`PortType<enum_VisualShaderNode_PortType>`\\ 的可能类型。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:144
msgid "定义这个方法是\\ **可选的**\\ ，但推荐使用。如果没有被重写，输入端口将返回 :ref:`VisualShaderNode.PORT_TYPE_SCALAR<class_VisualShaderNode_constant_PORT_TYPE_SCALAR>` 类型。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:150
msgid ":ref:`String<class_String>` **_get_name** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:152
msgid "重写此方法来定义可视化着色器编辑器的成员对话框和图中的相关自定义节点的名称。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:154
msgid "定义这个方法是\\ **可选的**\\ ，但推荐使用。如果不重写，节点将被命名为 \"Unnamed\"。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:160
msgid ":ref:`int<class_int>` **_get_output_port_count** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:162
msgid "重写此方法来定义相关自定义节点的输出端口数量。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:164
msgid "定义这个方法是\\ **必须的**\\ 。如果不重写，节点就没有输出端口。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:170
msgid ":ref:`String<class_String>` **_get_output_port_name** **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:172
msgid "重写此方法来定义相关自定义节点的输出端口的名称。这些名字既用于编辑器中的输出槽，也作为着色器代码中的标识符，并在\\ :ref:`_get_code<class_VisualShaderNodeCustom_method__get_code>`\\ 中的\\ ``output_vars``\\ 数组中传递。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:174
msgid "定义这个方法是\\ **可选的**\\ ，但推荐使用。如果没有被重写，输出端口被命名为\\ ``\"out\" + str(port)``\\ 。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:180
msgid ":ref:`int<class_int>` **_get_output_port_type** **(** :ref:`int<class_int>` port **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:182
msgid "重写此方法以定义相关自定义节点的每个输出端口的返回类型，参阅\\ :ref:`PortType<enum_VisualShaderNode_PortType>`\\ 的可能类型。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:184
msgid "定义这个方法是\\ **可选的**\\ ，但推荐使用。如果没有被重写，输出端口将返回\\ :ref:`VisualShaderNode.PORT_TYPE_SCALAR<class_VisualShaderNode_constant_PORT_TYPE_SCALAR>`\\ 类型。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:190
msgid ":ref:`int<class_int>` **_get_return_icon_type** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:192
msgid "重写此方法来定义可视化着色器编辑器的成员对话框中相关自定义节点的返回图标。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:194
msgid "定义这个方法是\\ **可选的**\\ 。如果不重写，就不会显示返回图标。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:200
msgid ":ref:`String<class_String>` **_get_subcategory** **(** **)** |virtual|"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:202
msgid "重写此方法来定义可视化着色器编辑器的成员对话框中相关自定义节点的子类别。"
msgstr ""

#: ../classes/class_visualshadernodecustom.rst:204
msgid "定义这个方法是\\ **可选的**\\ 。如果不重写，节点将被归入主类别的根下，参阅\\ :ref:`_get_category<class_VisualShaderNodeCustom_method__get_category>`\\ 。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
