# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_randomnumbergenerator.rst:10
msgid "RandomNumberGenerator"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:12
msgid "**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:14
msgid "一个用于生成伪随机数的类。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:19
msgid "RandomNumberGenerator 是一个用于生成伪随机数的类。它目前使用 `PCG32 <http://www.pcg-random.org/>`__\\ 。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:21
msgid "\\ **注:**\\ 底层算法是实现细节。因此，跨 GaaeExplorer 版本的可重复随机流不应该依赖于此。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:23
msgid "要根据时间相关种子生成随机浮点数，在给定范围内："
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:32
msgid "\\ **注:** :ref:`seed<class_RandomNumberGenerator_property_seed>` 和 :ref:`state<class_RandomNumberGenerator_property_state>` 属性的默认值是伪随机的，在调用\\ :ref:`randomize<class_RandomNumberGenerator_method_randomize>` 时会发生变化。此处记录的 ``0`` 值是一个占位符，而不是实际的默认种子。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:35
msgid "教程"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:37
msgid ":doc:`Random number generation <../tutorials/math/random_number_generation>`"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:40
msgid "属性"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:43
#: ../classes/class_randomnumbergenerator.rst:45
#: ../classes/class_randomnumbergenerator.rst:58
#: ../classes/class_randomnumbergenerator.rst:60
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:43
msgid ":ref:`seed<class_RandomNumberGenerator_property_seed>`"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:43
#: ../classes/class_randomnumbergenerator.rst:45
#: ../classes/class_randomnumbergenerator.rst:73
#: ../classes/class_randomnumbergenerator.rst:101
msgid "``0``"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:45
msgid ":ref:`state<class_RandomNumberGenerator_property_state>`"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:49
msgid "方法"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:52
#: ../classes/class_randomnumbergenerator.rst:54
#: ../classes/class_randomnumbergenerator.rst:56
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:52
msgid ":ref:`randf<class_RandomNumberGenerator_method_randf>` **(** **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:54
msgid ":ref:`randf_range<class_RandomNumberGenerator_method_randf_range>` **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:56
msgid ":ref:`randfn<class_RandomNumberGenerator_method_randfn>` **(** :ref:`float<class_float>` mean=0.0, :ref:`float<class_float>` deviation=1.0 **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:58
msgid ":ref:`randi<class_RandomNumberGenerator_method_randi>` **(** **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:60
msgid ":ref:`randi_range<class_RandomNumberGenerator_method_randi_range>` **(** :ref:`int<class_int>` from, :ref:`int<class_int>` to **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:62
msgid "void"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:62
msgid ":ref:`randomize<class_RandomNumberGenerator_method_randomize>` **(** **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:66
msgid "属性说明"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:70
msgid ":ref:`int<class_int>` **seed**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:73
#: ../classes/class_randomnumbergenerator.rst:101
msgid "*Default*"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:75
#: ../classes/class_randomnumbergenerator.rst:103
msgid "*Setter*"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:75
msgid "set_seed(value)"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:77
#: ../classes/class_randomnumbergenerator.rst:105
msgid "*Getter*"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:77
msgid "get_seed()"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:80
msgid "根据给定的种子值初始化随机数生成器状态。给定的种子将提供可重复的伪随机数序列。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:82
msgid "\\ **注：** RNG 没有雪崩效应，可以输出相似的随机流给定相似的种子。如果种子来自外部，请考虑使用哈希函数来提高种子质量。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:84
msgid "\\ **注：**\\ 设置这个属性会产生改变内部\\ :ref:`state<class_RandomNumberGenerator_property_state>`\\ 的副作用，所以一定要在修改\\ :ref:`state<class_RandomNumberGenerator_property_state>`\\ *之前*\\ 初始化种子："
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:92
msgid "\\ **警告：**\\ 该属性的getter返回之前的\\ :ref:`state<class_RandomNumberGenerator_property_state>`\\ ，而不是初始种子值，这将在GaaeExplorer 4.0中修复。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:98
msgid ":ref:`int<class_int>` **state**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:103
msgid "set_state(value)"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:105
msgid "get_state()"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:108
msgid "随机数生成器的当前状态。保存并恢复此属性，以将生成器恢复到之前的状态："
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:119
msgid "\\ **注意：** 不要将状态设置为任意值，因为随机数生成器要求状态具有某些特性才能正常运行。它应该只设置为来自状态属性本身的值。要使用任意输入初始化随机数生成器，请改用 :ref:`seed<class_RandomNumberGenerator_property_seed>`\\ 。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:122
msgid "方法说明"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:126
msgid ":ref:`float<class_float>` **randf** **(** **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:128
msgid "产生一个\\ ``0.0``\\ 和\\ ``1.0``\\ （包括端点）之间的伪随机浮点数。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:134
msgid ":ref:`float<class_float>` **randf_range** **(** :ref:`float<class_float>` from, :ref:`float<class_float>` to **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:136
msgid "产生一个\\ ``from``\\ 和\\ ``to``\\ （包括端点）之间的伪随机浮点数。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:142
msgid ":ref:`float<class_float>` **randfn** **(** :ref:`float<class_float>` mean=0.0, :ref:`float<class_float>` deviation=1.0 **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:144
msgid "产生一个\\ `正态分布 <https://en.wikipedia.org/wiki/Normal_distribution>`__\\ 的伪随机数，使用Box-Muller变换，具有指定的\\ ``mean``\\ 和标准\\ ``deviation``\\ 。这也被称为高斯分布。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:150
msgid ":ref:`int<class_int>` **randi** **(** **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:152
msgid "产生一个\\ ``0``\\ 和\\ ``4294967295``\\ （含端点）之间的伪随机32位无符号整数。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:158
msgid ":ref:`int<class_int>` **randi_range** **(** :ref:`int<class_int>` from, :ref:`int<class_int>` to **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:160
msgid "产生一个\\ ``to``\\ 和\\ ``from``\\ （含端点）之间的伪随机32位有符号整数。"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:166
msgid "void **randomize** **(** **)**"
msgstr ""

#: ../classes/class_randomnumbergenerator.rst:168
msgid "为生成器设置一个基于时间的种子。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
