# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_astar2d.rst:10
msgid "AStar2D"
msgstr ""

#: ../classes/class_astar2d.rst:12
msgid "**Inherits:** :ref:`Reference<class_Reference>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_astar2d.rst:14
msgid "使用二维向量作为边缘的AStar类表示。"
msgstr ""

#: ../classes/class_astar2d.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_astar2d.rst:19
msgid "这是\\ :ref:`AStar<class_AStar>`\\ 类的包装，该类使用2D向量而不是3D向量。"
msgstr ""

#: ../classes/class_astar2d.rst:22
msgid "方法"
msgstr ""

#: ../classes/class_astar2d.rst:25
#: ../classes/class_astar2d.rst:27
#: ../classes/class_astar2d.rst:57
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_astar2d.rst:25
msgid ":ref:`_compute_cost<class_AStar2D_method__compute_cost>` **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)** |virtual|"
msgstr ""

#: ../classes/class_astar2d.rst:27
msgid ":ref:`_estimate_cost<class_AStar2D_method__estimate_cost>` **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)** |virtual|"
msgstr ""

#: ../classes/class_astar2d.rst:29
#: ../classes/class_astar2d.rst:33
#: ../classes/class_astar2d.rst:35
#: ../classes/class_astar2d.rst:37
#: ../classes/class_astar2d.rst:65
#: ../classes/class_astar2d.rst:67
#: ../classes/class_astar2d.rst:69
#: ../classes/class_astar2d.rst:71
#: ../classes/class_astar2d.rst:73
msgid "void"
msgstr ""

#: ../classes/class_astar2d.rst:29
msgid ":ref:`add_point<class_AStar2D_method_add_point>` **(** :ref:`int<class_int>` id, :ref:`Vector2<class_Vector2>` position, :ref:`float<class_float>` weight_scale=1.0 **)**"
msgstr ""

#: ../classes/class_astar2d.rst:31
#: ../classes/class_astar2d.rst:61
#: ../classes/class_astar2d.rst:63
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_astar2d.rst:31
msgid ":ref:`are_points_connected<class_AStar2D_method_are_points_connected>` **(** :ref:`int<class_int>` id, :ref:`int<class_int>` to_id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:33
msgid ":ref:`clear<class_AStar2D_method_clear>` **(** **)**"
msgstr ""

#: ../classes/class_astar2d.rst:35
msgid ":ref:`connect_points<class_AStar2D_method_connect_points>` **(** :ref:`int<class_int>` id, :ref:`int<class_int>` to_id, :ref:`bool<class_bool>` bidirectional=true **)**"
msgstr ""

#: ../classes/class_astar2d.rst:37
msgid ":ref:`disconnect_points<class_AStar2D_method_disconnect_points>` **(** :ref:`int<class_int>` id, :ref:`int<class_int>` to_id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:39
#: ../classes/class_astar2d.rst:41
#: ../classes/class_astar2d.rst:47
#: ../classes/class_astar2d.rst:51
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_astar2d.rst:39
msgid ":ref:`get_available_point_id<class_AStar2D_method_get_available_point_id>` **(** **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:41
msgid ":ref:`get_closest_point<class_AStar2D_method_get_closest_point>` **(** :ref:`Vector2<class_Vector2>` to_position, :ref:`bool<class_bool>` include_disabled=false **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:43
#: ../classes/class_astar2d.rst:55
msgid ":ref:`Vector2<class_Vector2>`"
msgstr ""

#: ../classes/class_astar2d.rst:43
msgid ":ref:`get_closest_position_in_segment<class_AStar2D_method_get_closest_position_in_segment>` **(** :ref:`Vector2<class_Vector2>` to_position **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:45
#: ../classes/class_astar2d.rst:49
msgid ":ref:`PoolIntArray<class_PoolIntArray>`"
msgstr ""

#: ../classes/class_astar2d.rst:45
msgid ":ref:`get_id_path<class_AStar2D_method_get_id_path>` **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:47
msgid ":ref:`get_point_capacity<class_AStar2D_method_get_point_capacity>` **(** **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:49
msgid ":ref:`get_point_connections<class_AStar2D_method_get_point_connections>` **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:51
msgid ":ref:`get_point_count<class_AStar2D_method_get_point_count>` **(** **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:53
msgid ":ref:`PoolVector2Array<class_PoolVector2Array>`"
msgstr ""

#: ../classes/class_astar2d.rst:53
msgid ":ref:`get_point_path<class_AStar2D_method_get_point_path>` **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:55
msgid ":ref:`get_point_position<class_AStar2D_method_get_point_position>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:57
msgid ":ref:`get_point_weight_scale<class_AStar2D_method_get_point_weight_scale>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:59
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_astar2d.rst:59
msgid ":ref:`get_points<class_AStar2D_method_get_points>` **(** **)**"
msgstr ""

#: ../classes/class_astar2d.rst:61
msgid ":ref:`has_point<class_AStar2D_method_has_point>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:63
msgid ":ref:`is_point_disabled<class_AStar2D_method_is_point_disabled>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:65
msgid ":ref:`remove_point<class_AStar2D_method_remove_point>` **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:67
msgid ":ref:`reserve_space<class_AStar2D_method_reserve_space>` **(** :ref:`int<class_int>` num_nodes **)**"
msgstr ""

#: ../classes/class_astar2d.rst:69
msgid ":ref:`set_point_disabled<class_AStar2D_method_set_point_disabled>` **(** :ref:`int<class_int>` id, :ref:`bool<class_bool>` disabled=true **)**"
msgstr ""

#: ../classes/class_astar2d.rst:71
msgid ":ref:`set_point_position<class_AStar2D_method_set_point_position>` **(** :ref:`int<class_int>` id, :ref:`Vector2<class_Vector2>` position **)**"
msgstr ""

#: ../classes/class_astar2d.rst:73
msgid ":ref:`set_point_weight_scale<class_AStar2D_method_set_point_weight_scale>` **(** :ref:`int<class_int>` id, :ref:`float<class_float>` weight_scale **)**"
msgstr ""

#: ../classes/class_astar2d.rst:77
msgid "方法说明"
msgstr ""

#: ../classes/class_astar2d.rst:81
msgid ":ref:`float<class_float>` **_compute_cost** **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)** |virtual|"
msgstr ""

#: ../classes/class_astar2d.rst:83
msgid "计算两个连接点之间的成本时调用。"
msgstr ""

#: ../classes/class_astar2d.rst:85
msgid "注意这个函数隐藏在默认的\\ ``AStar2D``\\ 类中。"
msgstr ""

#: ../classes/class_astar2d.rst:91
msgid ":ref:`float<class_float>` **_estimate_cost** **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)** |virtual|"
msgstr ""

#: ../classes/class_astar2d.rst:93
msgid "当估计一个点和路径终点之间的成本时调用。"
msgstr ""

#: ../classes/class_astar2d.rst:95
msgid "请注意，这个函数隐藏在默认的 ``AStar2D`` 类中。"
msgstr ""

#: ../classes/class_astar2d.rst:101
msgid "void **add_point** **(** :ref:`int<class_int>` id, :ref:`Vector2<class_Vector2>` position, :ref:`float<class_float>` weight_scale=1.0 **)**"
msgstr ""

#: ../classes/class_astar2d.rst:103
msgid "在给定的位置添加一个新的点，并使用给定的标识符。\\ ``id``\\ 必须是0或者更大，\\ ``weight_scale``\\ 必须是1或者更大。"
msgstr ""

#: ../classes/class_astar2d.rst:105
msgid "在确定从相邻点到此点的一段路程的总成本时，\\ ``weight_scale``\\ 要乘以\\ :ref:`_compute_cost<class_AStar2D_method__compute_cost>`\\ 的结果。因此，在其他条件相同的情况下，算法优先选择\\ ``weight_scale``\\ 较低的点来形成路径。"
msgstr ""

#: ../classes/class_astar2d.rst:112
msgid "如果已经存在一个给定\\ ``id``\\ 的点，它的位置和权重将被更新为给定值。"
msgstr ""

#: ../classes/class_astar2d.rst:118
msgid ":ref:`bool<class_bool>` **are_points_connected** **(** :ref:`int<class_int>` id, :ref:`int<class_int>` to_id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:120
msgid "返回给定点之间是否有连接/分割。"
msgstr ""

#: ../classes/class_astar2d.rst:126
msgid "void **clear** **(** **)**"
msgstr ""

#: ../classes/class_astar2d.rst:128
msgid "清除所有点和线段。"
msgstr ""

#: ../classes/class_astar2d.rst:134
msgid "void **connect_points** **(** :ref:`int<class_int>` id, :ref:`int<class_int>` to_id, :ref:`bool<class_bool>` bidirectional=true **)**"
msgstr ""

#: ../classes/class_astar2d.rst:136
msgid "在给定的点之间创建一个分段。如果 ``bidirectional`` 为 ``false``\\ ，则只允许从 ``id`` 到 ``to_id`` 之间的移动，不允许反方向移动。"
msgstr ""

#: ../classes/class_astar2d.rst:138
msgid "(codeblock)"
msgstr ""

#: ../classes/class_astar2d.rst:140
msgid "var astar = AStar2D.new()"
msgstr ""

#: ../classes/class_astar2d.rst:142
msgid "astar.add_point(1, Vector2(1, 1))"
msgstr ""

#: ../classes/class_astar2d.rst:144
msgid "astar.add_point(2, Vector2(0, 5))"
msgstr ""

#: ../classes/class_astar2d.rst:146
msgid "astar.connect_points(1, 2, false)"
msgstr ""

#: ../classes/class_astar2d.rst:153
msgid "void **disconnect_points** **(** :ref:`int<class_int>` id, :ref:`int<class_int>` to_id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:155
msgid "删除给定点之间的线段。"
msgstr ""

#: ../classes/class_astar2d.rst:161
msgid ":ref:`int<class_int>` **get_available_point_id** **(** **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:163
msgid "返回没有关联的下一个可用点的ID。"
msgstr ""

#: ../classes/class_astar2d.rst:169
msgid ":ref:`int<class_int>` **get_closest_point** **(** :ref:`Vector2<class_Vector2>` to_position, :ref:`bool<class_bool>` include_disabled=false **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:171
msgid "返回离\\ ``to_position``\\ 最近的点的ID，可以选择将禁用的点考虑在内。如果点池中没有点，返回\\ ``-1``\\ 。"
msgstr ""

#: ../classes/class_astar2d.rst:173
msgid "\\ **注意:** 如果几个点都是离\\ ``to_position``\\ 最近的点，将返回ID最小的那个点，以保证结果的确定性。"
msgstr ""

#: ../classes/class_astar2d.rst:179
msgid ":ref:`Vector2<class_Vector2>` **get_closest_position_in_segment** **(** :ref:`Vector2<class_Vector2>` to_position **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:181
msgid "返回位于两个连接点之间的线段中离 ``to_position`` 最近的位置。"
msgstr ""

#: ../classes/class_astar2d.rst:191
msgid "结果是在从 ``y=0`` 到 ``y=5`` 的线段中。它是该段中离给定点最近的位置。"
msgstr ""

#: ../classes/class_astar2d.rst:197
msgid ":ref:`PoolIntArray<class_PoolIntArray>` **get_id_path** **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:199
msgid "返回一个数组，该数组中包含了由 AStar2D 在给定点之间找到的路径的点的 ID。数组从路径的起点到终点排序。"
msgstr ""

#: ../classes/class_astar2d.rst:216
msgid "如果你把第 2 点的权重改为3，那么结果就会变成 ``[1, 4, 3]``\\ ，因为现在虽然距离长了，但通过第 4 点比通过第 2 点“容易”。"
msgstr ""

#: ../classes/class_astar2d.rst:222
msgid ":ref:`int<class_int>` **get_point_capacity** **(** **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:224
msgid "返回支持点的结构的容量，与 ``reserve_space`` 配合使用。"
msgstr ""

#: ../classes/class_astar2d.rst:230
msgid ":ref:`PoolIntArray<class_PoolIntArray>` **get_point_connections** **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:232
msgid "返回一个数组，其中包含与给定点形成连接的点的 ID。"
msgstr ""

#: ../classes/class_astar2d.rst:251
msgid ":ref:`int<class_int>` **get_point_count** **(** **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:253
msgid "返回当前积分池中的积分数量。"
msgstr ""

#: ../classes/class_astar2d.rst:259
msgid ":ref:`PoolVector2Array<class_PoolVector2Array>` **get_point_path** **(** :ref:`int<class_int>` from_id, :ref:`int<class_int>` to_id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:261
msgid "返回一个数组，该数组包含了AStar2D在给定点之间找到的路径中的点。该数组从路径的起点到终点排序。"
msgstr ""

#: ../classes/class_astar2d.rst:263
msgid "\\ **注意：** 这个方法不是线程安全的。如果从一个\\ :ref:`Thread<class_Thread>`\\ 线程中调用，它将返回一个空的\\ :ref:`PoolVector2Array<class_PoolVector2Array>`\\ ，并打印一个错误信息。"
msgstr ""

#: ../classes/class_astar2d.rst:269
msgid ":ref:`Vector2<class_Vector2>` **get_point_position** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:271
msgid "返回与给定\\ ``id``\\ 相关联的点的位置。"
msgstr ""

#: ../classes/class_astar2d.rst:277
msgid ":ref:`float<class_float>` **get_point_weight_scale** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:279
msgid "返回与给定\\ ``id``\\ 关联的点的权重比例。"
msgstr ""

#: ../classes/class_astar2d.rst:285
msgid ":ref:`Array<class_Array>` **get_points** **(** **)**"
msgstr ""

#: ../classes/class_astar2d.rst:287
msgid "返回所有点的数组。"
msgstr ""

#: ../classes/class_astar2d.rst:293
msgid ":ref:`bool<class_bool>` **has_point** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:295
msgid "返回与给定\\ ``id``\\ 相关联的点是否存在。"
msgstr ""

#: ../classes/class_astar2d.rst:301
msgid ":ref:`bool<class_bool>` **is_point_disabled** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_astar2d.rst:303
msgid "返回是否禁用点以进行寻路。默认情况下，所有点均处于启用状态。"
msgstr ""

#: ../classes/class_astar2d.rst:309
msgid "void **remove_point** **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_astar2d.rst:311
msgid "从积分池中删除与给定\\ ``id``\\ 关联的积分。"
msgstr ""

#: ../classes/class_astar2d.rst:317
msgid "void **reserve_space** **(** :ref:`int<class_int>` num_nodes **)**"
msgstr ""

#: ../classes/class_astar2d.rst:319
msgid "在内部为\\ ``num_nodes``\\ 个点保留空间，如果您一次要添加一个已知的大量点（例如对于一个网格），则很有用。新容量必须大于或等于旧容量。"
msgstr ""

#: ../classes/class_astar2d.rst:325
msgid "void **set_point_disabled** **(** :ref:`int<class_int>` id, :ref:`bool<class_bool>` disabled=true **)**"
msgstr ""

#: ../classes/class_astar2d.rst:327
msgid "禁用或启用指定点的寻路功能。用于制作临时障碍物。"
msgstr ""

#: ../classes/class_astar2d.rst:333
msgid "void **set_point_position** **(** :ref:`int<class_int>` id, :ref:`Vector2<class_Vector2>` position **)**"
msgstr ""

#: ../classes/class_astar2d.rst:335
msgid "为具有给定\\ ``id``\\ 的点设置\\ ``position``\\ 。"
msgstr ""

#: ../classes/class_astar2d.rst:341
msgid "void **set_point_weight_scale** **(** :ref:`int<class_int>` id, :ref:`float<class_float>` weight_scale **)**"
msgstr ""

#: ../classes/class_astar2d.rst:343
msgid "为给定的\\ ``id``\\ 的点设置\\ ``weight_scale``\\ 。在确定从邻接点到这个点的一段路程的总成本时，\\ ``weight_scale``\\ 要乘以\\ :ref:`_compute_cost<class_AStar2D_method__compute_cost>`\\ 的结果。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
