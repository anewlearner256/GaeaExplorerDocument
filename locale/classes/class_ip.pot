# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_ip.rst:10
msgid "IP"
msgstr ""

#: ../classes/class_ip.rst:12
msgid "**Inherits:** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_ip.rst:14
msgid "互联网协议（IP）支持功能，如DNS解析。"
msgstr ""

#: ../classes/class_ip.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_ip.rst:19
msgid "IP包含对互联网协议（IP）的支持功能。TCP/IP支持在不同的类别中（见\\ :ref:`StreamPeerTCP<class_StreamPeerTCP>`\\ 和\\ :ref:`TCP_Server<class_TCP_Server>`\\ ）。IP提供DNS主机名解析支持，包括阻塞式和线程式。"
msgstr ""

#: ../classes/class_ip.rst:22
msgid "方法"
msgstr ""

#: ../classes/class_ip.rst:25
#: ../classes/class_ip.rst:27
msgid "void"
msgstr ""

#: ../classes/class_ip.rst:25
msgid ":ref:`clear_cache<class_IP_method_clear_cache>` **(** :ref:`String<class_String>` hostname=\"\" **)**"
msgstr ""

#: ../classes/class_ip.rst:27
msgid ":ref:`erase_resolve_item<class_IP_method_erase_resolve_item>` **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_ip.rst:29
#: ../classes/class_ip.rst:31
#: ../classes/class_ip.rst:35
#: ../classes/class_ip.rst:41
msgid ":ref:`Array<class_Array>`"
msgstr ""

#: ../classes/class_ip.rst:29
msgid ":ref:`get_local_addresses<class_IP_method_get_local_addresses>` **(** **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:31
msgid ":ref:`get_local_interfaces<class_IP_method_get_local_interfaces>` **(** **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:33
#: ../classes/class_ip.rst:39
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_ip.rst:33
msgid ":ref:`get_resolve_item_address<class_IP_method_get_resolve_item_address>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:35
msgid ":ref:`get_resolve_item_addresses<class_IP_method_get_resolve_item_addresses>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:37
msgid ":ref:`ResolverStatus<enum_IP_ResolverStatus>`"
msgstr ""

#: ../classes/class_ip.rst:37
msgid ":ref:`get_resolve_item_status<class_IP_method_get_resolve_item_status>` **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:39
msgid ":ref:`resolve_hostname<class_IP_method_resolve_hostname>` **(** :ref:`String<class_String>` host, :ref:`Type<enum_IP_Type>` ip_type=3 **)**"
msgstr ""

#: ../classes/class_ip.rst:41
msgid ":ref:`resolve_hostname_addresses<class_IP_method_resolve_hostname_addresses>` **(** :ref:`String<class_String>` host, :ref:`Type<enum_IP_Type>` ip_type=3 **)**"
msgstr ""

#: ../classes/class_ip.rst:43
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_ip.rst:43
msgid ":ref:`resolve_hostname_queue_item<class_IP_method_resolve_hostname_queue_item>` **(** :ref:`String<class_String>` host, :ref:`Type<enum_IP_Type>` ip_type=3 **)**"
msgstr ""

#: ../classes/class_ip.rst:47
msgid "枚举"
msgstr ""

#: ../classes/class_ip.rst:59
msgid "enum **ResolverStatus**:"
msgstr ""

#: ../classes/class_ip.rst:61
msgid "**RESOLVER_STATUS_NONE** = **0** --- DNS 主机名解析器状态：无状态。"
msgstr ""

#: ../classes/class_ip.rst:63
msgid "**RESOLVER_STATUS_WAITING** = **1** --- DNS 主机名解析器状态：正在等待。"
msgstr ""

#: ../classes/class_ip.rst:65
msgid "**RESOLVER_STATUS_DONE** = **2** --- DNS 主机名解析器状态：完成。"
msgstr ""

#: ../classes/class_ip.rst:67
msgid "**RESOLVER_STATUS_ERROR** = **3** --- DNS 主机名解析器状态：错误。"
msgstr ""

#: ../classes/class_ip.rst:81
msgid "enum **Type**:"
msgstr ""

#: ../classes/class_ip.rst:83
msgid "**TYPE_NONE** = **0** --- 地址类型：无。"
msgstr ""

#: ../classes/class_ip.rst:85
msgid "**TYPE_IPV4** = **1** --- 地址类型：互联网协议版本4（IPv4）。"
msgstr ""

#: ../classes/class_ip.rst:87
msgid "**TYPE_IPV6** = **2** --- 地址类型：互联网协议版本6（IPv6）。"
msgstr ""

#: ../classes/class_ip.rst:89
msgid "**TYPE_ANY** = **3** --- 地址类型：任意。"
msgstr ""

#: ../classes/class_ip.rst:92
msgid "常量"
msgstr ""

#: ../classes/class_ip.rst:98
msgid "**RESOLVER_MAX_QUERIES** = **32** --- 允许的最大并发DNS解析器查询数量，如果超过，则返回\\ :ref:`RESOLVER_INVALID_ID<class_IP_constant_RESOLVER_INVALID_ID>`\\ 。"
msgstr ""

#: ../classes/class_ip.rst:100
msgid "**RESOLVER_INVALID_ID** = **-1** --- 无效的ID常数。如果超过了\\ :ref:`RESOLVER_MAX_QUERIES<class_IP_constant_RESOLVER_MAX_QUERIES>`\\ ，则返回。"
msgstr ""

#: ../classes/class_ip.rst:103
msgid "方法说明"
msgstr ""

#: ../classes/class_ip.rst:107
msgid "void **clear_cache** **(** :ref:`String<class_String>` hostname=\"\" **)**"
msgstr ""

#: ../classes/class_ip.rst:109
msgid "移除所有\\ ``hostname``\\ 主机名的缓存引用。如果没有给出\\ ``hostname``\\ ，所有缓存的IP地址将被删除。"
msgstr ""

#: ../classes/class_ip.rst:115
msgid "void **erase_resolve_item** **(** :ref:`int<class_int>` id **)**"
msgstr ""

#: ../classes/class_ip.rst:117
msgid "从队列中删除一个给定的项目\\ ``id``\\ 。这应该被用来在队列完成后释放队列，以便进行更多的查询。"
msgstr ""

#: ../classes/class_ip.rst:123
msgid ":ref:`Array<class_Array>` **get_local_addresses** **(** **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:125
msgid "以数组形式返回所有用户的当前IPv4和IPv6地址。"
msgstr ""

#: ../classes/class_ip.rst:131
msgid ":ref:`Array<class_Array>` **get_local_interfaces** **(** **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:133
msgid "以数组形式返回所有网络适配器(network adapters)。"
msgstr ""

#: ../classes/class_ip.rst:135
msgid "每个适配器是一个形式的字典。"
msgstr ""

#: ../classes/class_ip.rst:150
msgid ":ref:`String<class_String>` **get_resolve_item_address** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:152
msgid "给定队列 ``id``\\ ，返回排队主机名的 IP 地址。出现错误或解析尚未发生时返回一个空字符串（参阅 :ref:`get_resolve_item_status<class_IP_method_get_resolve_item_status>`\\ ）。"
msgstr ""

#: ../classes/class_ip.rst:158
msgid ":ref:`Array<class_Array>` **get_resolve_item_addresses** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:160
msgid "如果发生错误或尚未发生解析，则返回已解析的地址或空数组（请参阅 :ref:`get_resolve_item_status<class_IP_method_get_resolve_item_status>`\\ ）。"
msgstr ""

#: ../classes/class_ip.rst:166
msgid ":ref:`ResolverStatus<enum_IP_ResolverStatus>` **get_resolve_item_status** **(** :ref:`int<class_int>` id **)** |const|"
msgstr ""

#: ../classes/class_ip.rst:168
msgid "给定队列 ``id``\\ ，以 :ref:`ResolverStatus<enum_IP_ResolverStatus>` 常量的形式返回排队主机名的状态。"
msgstr ""

#: ../classes/class_ip.rst:174
msgid ":ref:`String<class_String>` **resolve_hostname** **(** :ref:`String<class_String>` host, :ref:`Type<enum_IP_Type>` ip_type=3 **)**"
msgstr ""

#: ../classes/class_ip.rst:176
msgid "在解析时返回一个给定的主机名的IPv4或IPv6地址（阻塞类型方法）。返回的地址类型取决于作为\\ ``ip_type``\\ 的\\ :ref:`Type<enum_IP_Type>`\\ 常量。"
msgstr ""

#: ../classes/class_ip.rst:182
msgid ":ref:`Array<class_Array>` **resolve_hostname_addresses** **(** :ref:`String<class_String>` host, :ref:`Type<enum_IP_Type>` ip_type=3 **)**"
msgstr ""

#: ../classes/class_ip.rst:184
msgid "以阻塞方式解析给定的主机名。地址作为 IPv4 或 IPv6 的 :ref:`Array<class_Array>` 数组返回，具体取决于 ``ip_type``\\ 。"
msgstr ""

#: ../classes/class_ip.rst:190
msgid ":ref:`int<class_int>` **resolve_hostname_queue_item** **(** :ref:`String<class_String>` host, :ref:`Type<enum_IP_Type>` ip_type=3 **)**"
msgstr ""

#: ../classes/class_ip.rst:192
msgid "创建一个队列项目，根据\\ :ref:`Type<enum_IP_Type>`\\ 常数\\ ``ip_type``\\ ，将主机名解析为IPv4或IPv6地址。如果成功，返回队列ID，否则返回\\ :ref:`RESOLVER_INVALID_ID<class_IP_constant_RESOLVER_INVALID_ID>`\\ 。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
