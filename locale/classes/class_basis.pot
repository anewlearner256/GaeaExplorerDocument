# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_basis.rst:10
msgid "Basis"
msgstr ""

#: ../classes/class_basis.rst:12
msgid "3×3矩阵数据类型。"
msgstr ""

#: ../classes/class_basis.rst:15
msgid "描述"
msgstr ""

#: ../classes/class_basis.rst:17
msgid "用于三维旋转和缩放的 3×3 矩阵。几乎总是用作变换的正交基础。"
msgstr ""

#: ../classes/class_basis.rst:19
msgid "包含 3 个向量字段 X、Y 和 Z 作为其列，通常被解释为变换的局部基础向量。对于这种用途，它由一个缩放矩阵和一个旋转矩阵组成，依次为 (M=R.S)。"
msgstr ""

#: ../classes/class_basis.rst:21
msgid "也可以作为三维向量的数组来访问。这些向量通常是相互正交的，但不一定是归一化的（由于缩放）。"
msgstr ""

#: ../classes/class_basis.rst:23
msgid "更多信息请阅读文档中的《矩阵和变换》一文。"
msgstr ""

#: ../classes/class_basis.rst:26
msgid "教程"
msgstr ""

#: ../classes/class_basis.rst:28
msgid ":doc:`Math tutorial index <../tutorials/math/index>`"
msgstr ""

#: ../classes/class_basis.rst:30
msgid ":doc:`Matrices and transforms <../tutorials/math/matrices_and_transforms>`"
msgstr ""

#: ../classes/class_basis.rst:32
msgid ":doc:`Using 3D transforms <../tutorials/3d/using_transforms>`"
msgstr ""

#: ../classes/class_basis.rst:34
msgid "`Matrix Transform Demo <https://godotengine.org/asset-library/asset/584>`__"
msgstr ""

#: ../classes/class_basis.rst:36
msgid "`3D Platformer Demo <https://godotengine.org/asset-library/asset/125>`__"
msgstr ""

#: ../classes/class_basis.rst:38
msgid "`3D Voxel Demo <https://godotengine.org/asset-library/asset/676>`__"
msgstr ""

#: ../classes/class_basis.rst:40
msgid "`2.5D Demo <https://godotengine.org/asset-library/asset/583>`__"
msgstr ""

#: ../classes/class_basis.rst:43
msgid "属性"
msgstr ""

#: ../classes/class_basis.rst:46
#: ../classes/class_basis.rst:48
#: ../classes/class_basis.rst:50
#: ../classes/class_basis.rst:67
#: ../classes/class_basis.rst:73
#: ../classes/class_basis.rst:95
#: ../classes/class_basis.rst:97
msgid ":ref:`Vector3<class_Vector3>`"
msgstr ""

#: ../classes/class_basis.rst:46
msgid ":ref:`x<class_Basis_property_x>`"
msgstr ""

#: ../classes/class_basis.rst:46
#: ../classes/class_basis.rst:129
msgid "``Vector3( 1, 0, 0 )``"
msgstr ""

#: ../classes/class_basis.rst:48
msgid ":ref:`y<class_Basis_property_y>`"
msgstr ""

#: ../classes/class_basis.rst:48
#: ../classes/class_basis.rst:141
msgid "``Vector3( 0, 1, 0 )``"
msgstr ""

#: ../classes/class_basis.rst:50
msgid ":ref:`z<class_Basis_property_z>`"
msgstr ""

#: ../classes/class_basis.rst:50
#: ../classes/class_basis.rst:153
msgid "``Vector3( 0, 0, 1 )``"
msgstr ""

#: ../classes/class_basis.rst:54
msgid "方法"
msgstr ""

#: ../classes/class_basis.rst:57
#: ../classes/class_basis.rst:59
#: ../classes/class_basis.rst:61
#: ../classes/class_basis.rst:63
#: ../classes/class_basis.rst:75
#: ../classes/class_basis.rst:79
#: ../classes/class_basis.rst:81
#: ../classes/class_basis.rst:83
#: ../classes/class_basis.rst:85
#: ../classes/class_basis.rst:93
msgid ":ref:`Basis<class_Basis>`"
msgstr ""

#: ../classes/class_basis.rst:57
msgid ":ref:`Basis<class_Basis_method_Basis>` **(** :ref:`Quat<class_Quat>` from **)**"
msgstr ""

#: ../classes/class_basis.rst:59
msgid ":ref:`Basis<class_Basis_method_Basis>` **(** :ref:`Vector3<class_Vector3>` from **)**"
msgstr ""

#: ../classes/class_basis.rst:61
msgid ":ref:`Basis<class_Basis_method_Basis>` **(** :ref:`Vector3<class_Vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../classes/class_basis.rst:63
msgid ":ref:`Basis<class_Basis_method_Basis>` **(** :ref:`Vector3<class_Vector3>` x_axis, :ref:`Vector3<class_Vector3>` y_axis, :ref:`Vector3<class_Vector3>` z_axis **)**"
msgstr ""

#: ../classes/class_basis.rst:65
#: ../classes/class_basis.rst:87
#: ../classes/class_basis.rst:89
#: ../classes/class_basis.rst:91
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_basis.rst:65
msgid ":ref:`determinant<class_Basis_method_determinant>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:67
msgid ":ref:`get_euler<class_Basis_method_get_euler>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:69
msgid ":ref:`int<class_int>`"
msgstr ""

#: ../classes/class_basis.rst:69
msgid ":ref:`get_orthogonal_index<class_Basis_method_get_orthogonal_index>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:71
msgid ":ref:`Quat<class_Quat>`"
msgstr ""

#: ../classes/class_basis.rst:71
msgid ":ref:`get_rotation_quat<class_Basis_method_get_rotation_quat>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:73
msgid ":ref:`get_scale<class_Basis_method_get_scale>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:75
msgid ":ref:`inverse<class_Basis_method_inverse>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:77
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_basis.rst:77
msgid ":ref:`is_equal_approx<class_Basis_method_is_equal_approx>` **(** :ref:`Basis<class_Basis>` b, :ref:`float<class_float>` epsilon=1e-05 **)**"
msgstr ""

#: ../classes/class_basis.rst:79
msgid ":ref:`orthonormalized<class_Basis_method_orthonormalized>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:81
msgid ":ref:`rotated<class_Basis_method_rotated>` **(** :ref:`Vector3<class_Vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../classes/class_basis.rst:83
msgid ":ref:`scaled<class_Basis_method_scaled>` **(** :ref:`Vector3<class_Vector3>` scale **)**"
msgstr ""

#: ../classes/class_basis.rst:85
msgid ":ref:`slerp<class_Basis_method_slerp>` **(** :ref:`Basis<class_Basis>` to, :ref:`float<class_float>` weight **)**"
msgstr ""

#: ../classes/class_basis.rst:87
msgid ":ref:`tdotx<class_Basis_method_tdotx>` **(** :ref:`Vector3<class_Vector3>` with **)**"
msgstr ""

#: ../classes/class_basis.rst:89
msgid ":ref:`tdoty<class_Basis_method_tdoty>` **(** :ref:`Vector3<class_Vector3>` with **)**"
msgstr ""

#: ../classes/class_basis.rst:91
msgid ":ref:`tdotz<class_Basis_method_tdotz>` **(** :ref:`Vector3<class_Vector3>` with **)**"
msgstr ""

#: ../classes/class_basis.rst:93
msgid ":ref:`transposed<class_Basis_method_transposed>` **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:95
msgid ":ref:`xform<class_Basis_method_xform>` **(** :ref:`Vector3<class_Vector3>` v **)**"
msgstr ""

#: ../classes/class_basis.rst:97
msgid ":ref:`xform_inv<class_Basis_method_xform_inv>` **(** :ref:`Vector3<class_Vector3>` v **)**"
msgstr ""

#: ../classes/class_basis.rst:101
msgid "常量"
msgstr ""

#: ../classes/class_basis.rst:111
msgid "**IDENTITY** = **Basis( 1, 0, 0, 0, 1, 0, 0, 0, 1 )** --- 无旋转或缩放的单位基底。"
msgstr ""

#: ../classes/class_basis.rst:113
msgid "这与调用\\ ``Basis()``\\ 而不使用任何参数是一样的。这个常量可以用来让你的代码更清晰，并与C#保持一致。"
msgstr ""

#: ../classes/class_basis.rst:115
msgid "**FLIP_X** = **Basis( -1, 0, 0, 0, 1, 0, 0, 0, 1 )** --- 在变换中使用时，会沿 X 轴翻转某物的基础。"
msgstr ""

#: ../classes/class_basis.rst:117
msgid "**FLIP_Y** = **Basis( 1, 0, 0, 0, -1, 0, 0, 0, 1 )** --- 在变换中使用时，会沿 Y 轴翻转某物的基础。"
msgstr ""

#: ../classes/class_basis.rst:119
msgid "**FLIP_Z** = **Basis( 1, 0, 0, 0, 1, 0, 0, 0, -1 )** --- 在变换中使用时，会沿 Z 轴翻转某物的基础。"
msgstr ""

#: ../classes/class_basis.rst:122
msgid "属性说明"
msgstr ""

#: ../classes/class_basis.rst:126
msgid ":ref:`Vector3<class_Vector3>` **x**"
msgstr ""

#: ../classes/class_basis.rst:129
#: ../classes/class_basis.rst:141
#: ../classes/class_basis.rst:153
msgid "*Default*"
msgstr ""

#: ../classes/class_basis.rst:132
msgid "基本矩阵的X向量（第0列）。等效于数组索引\\ ``0``\\ 。"
msgstr ""

#: ../classes/class_basis.rst:138
msgid ":ref:`Vector3<class_Vector3>` **y**"
msgstr ""

#: ../classes/class_basis.rst:144
msgid "基础矩阵的Y向量（第1列）。相当于数组索引\\ ``1``\\ 。"
msgstr ""

#: ../classes/class_basis.rst:150
msgid ":ref:`Vector3<class_Vector3>` **z**"
msgstr ""

#: ../classes/class_basis.rst:156
msgid "基础矩阵的Z向量（第2列）。相当于数组索引\\ ``2``\\ 。"
msgstr ""

#: ../classes/class_basis.rst:159
msgid "方法说明"
msgstr ""

#: ../classes/class_basis.rst:163
msgid ":ref:`Basis<class_Basis>` **Basis** **(** :ref:`Quat<class_Quat>` from **)**"
msgstr ""

#: ../classes/class_basis.rst:165
msgid "根据给定的四元数构造一个纯旋转基矩阵。"
msgstr ""

#: ../classes/class_basis.rst:169
msgid ":ref:`Basis<class_Basis>` **Basis** **(** :ref:`Vector3<class_Vector3>` from **)**"
msgstr ""

#: ../classes/class_basis.rst:171
msgid "根据给定的欧拉角构造一个纯旋转基础矩阵（按照 YXZ 惯例：当\\*合成时，先 Y，然后 X，最后 Z），向量格式为（X 角，Y 角，Z 角）。"
msgstr ""

#: ../classes/class_basis.rst:173
msgid "可以考虑使用\\ :ref:`Quat<class_Quat>`\\ 构造函数代替，它使用四元组代替欧拉角。"
msgstr ""

#: ../classes/class_basis.rst:177
msgid ":ref:`Basis<class_Basis>` **Basis** **(** :ref:`Vector3<class_Vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../classes/class_basis.rst:179
msgid "构造一个纯旋转基阵，以弧度为单位，围绕给定的 ``axis`` 旋转 ``phi`` 个弧度。轴必须是归一化向量。"
msgstr ""

#: ../classes/class_basis.rst:183
msgid ":ref:`Basis<class_Basis>` **Basis** **(** :ref:`Vector3<class_Vector3>` x_axis, :ref:`Vector3<class_Vector3>` y_axis, :ref:`Vector3<class_Vector3>` z_axis **)**"
msgstr ""

#: ../classes/class_basis.rst:185
msgid "从 3 个轴向量（矩阵列）构造一个基础矩阵。"
msgstr ""

#: ../classes/class_basis.rst:191
msgid ":ref:`float<class_float>` **determinant** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:193
msgid "返回基数矩阵的行列式。如果基数是均匀缩放的，它的行列式是缩放的平方。"
msgstr ""

#: ../classes/class_basis.rst:195
msgid "负的行列式意味着基数的比例是负的。负的行列式意味着基数不可逆，通常被认为无效。"
msgstr ""

#: ../classes/class_basis.rst:201
msgid ":ref:`Vector3<class_Vector3>` **get_euler** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:203
msgid "以欧拉角的形式返回基础的旋转角度（按照 YXZ 惯例：分解时，先 Z、再 X、最后 Y）。返回的向量包含格式为（X角、Y角、Z角）的旋转角。"
msgstr ""

#: ../classes/class_basis.rst:205
msgid "可以考虑使用 :ref:`get_rotation_quat<class_Basis_method_get_rotation_quat>` 代替，该方法返回的是\\ :ref:`Quat<class_Quat>`\\ 四元组而不是欧拉角。"
msgstr ""

#: ../classes/class_basis.rst:211
msgid ":ref:`int<class_int>` **get_orthogonal_index** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:213
msgid "这个函数考虑将单位球面上的旋转分解成24个点，沿向量(x,y,z)放置，每个分量为-1、0或1，并返回最能代表物体方向的点的索引。它主要由 :ref:`GridMap<class_GridMap>` 编辑器使用。更多细节请参考GaaeExplorer源码。"
msgstr ""

#: ../classes/class_basis.rst:219
msgid ":ref:`Quat<class_Quat>` **get_rotation_quat** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:221
msgid "以四元数的形式返回基础的旋转。如果你需要欧拉角，请参阅 :ref:`get_euler<class_Basis_method_get_euler>` 方法，但通常首选四元数而不是欧拉角。"
msgstr ""

#: ../classes/class_basis.rst:227
msgid ":ref:`Vector3<class_Vector3>` **get_scale** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:229
msgid "假设矩阵是旋转和缩放的组合，返回沿各轴缩放系数的绝对值。"
msgstr ""

#: ../classes/class_basis.rst:235
msgid ":ref:`Basis<class_Basis>` **inverse** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:237
msgid "返回矩阵的逆值。"
msgstr ""

#: ../classes/class_basis.rst:243
msgid ":ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Basis<class_Basis>` b, :ref:`float<class_float>` epsilon=1e-05 **)**"
msgstr ""

#: ../classes/class_basis.rst:245
msgid "如果这个 basis 和\\ ``b``\\ 近似相等，返回\\ ``true``\\ ，是通过对每个分量调用\\ ``is_equal_approx``\\ 。"
msgstr ""

#: ../classes/class_basis.rst:247
msgid "\\ **注意：** 由于复杂的原因，epsilon参数总是被丢弃，不要使用它，它没有任何作用。"
msgstr ""

#: ../classes/class_basis.rst:253
msgid ":ref:`Basis<class_Basis>` **orthonormalized** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:255
msgid "返回矩阵的正交归一化版本（对于正交矩阵来说，偶尔调用以避免四舍五入错误是有用的）。这将在矩阵的基础上执行 Gram-Schmidt 正交化。"
msgstr ""

#: ../classes/class_basis.rst:261
msgid ":ref:`Basis<class_Basis>` **rotated** **(** :ref:`Vector3<class_Vector3>` axis, :ref:`float<class_float>` phi **)**"
msgstr ""

#: ../classes/class_basis.rst:263
msgid "围绕给定轴线引入一个额外的旋转phi（弧度）。该轴必须是一个归一化的向量。"
msgstr ""

#: ../classes/class_basis.rst:269
msgid ":ref:`Basis<class_Basis>` **scaled** **(** :ref:`Vector3<class_Vector3>` scale **)**"
msgstr ""

#: ../classes/class_basis.rst:271
msgid "引入一个由给定的3D缩放因子指定的附加缩放。"
msgstr ""

#: ../classes/class_basis.rst:277
msgid ":ref:`Basis<class_Basis>` **slerp** **(** :ref:`Basis<class_Basis>` to, :ref:`float<class_float>` weight **)**"
msgstr ""

#: ../classes/class_basis.rst:279
msgid "假设该矩阵是一个合适的旋转矩阵，slerp与另一个旋转矩阵进行球面直线插值。"
msgstr ""

#: ../classes/class_basis.rst:285
msgid ":ref:`float<class_float>` **tdotx** **(** :ref:`Vector3<class_Vector3>` with **)**"
msgstr ""

#: ../classes/class_basis.rst:287
msgid "矩阵X轴的转置点积。"
msgstr ""

#: ../classes/class_basis.rst:293
msgid ":ref:`float<class_float>` **tdoty** **(** :ref:`Vector3<class_Vector3>` with **)**"
msgstr ""

#: ../classes/class_basis.rst:295
msgid "与矩阵Y轴的转置点积。"
msgstr ""

#: ../classes/class_basis.rst:301
msgid ":ref:`float<class_float>` **tdotz** **(** :ref:`Vector3<class_Vector3>` with **)**"
msgstr ""

#: ../classes/class_basis.rst:303
msgid "与矩阵Z轴的转置点积。"
msgstr ""

#: ../classes/class_basis.rst:309
msgid ":ref:`Basis<class_Basis>` **transposed** **(** **)**"
msgstr ""

#: ../classes/class_basis.rst:311
msgid "返回矩阵的转置版本。"
msgstr ""

#: ../classes/class_basis.rst:317
msgid ":ref:`Vector3<class_Vector3>` **xform** **(** :ref:`Vector3<class_Vector3>` v **)**"
msgstr ""

#: ../classes/class_basis.rst:319
msgid "返回一个被矩阵转换（乘法）的向量。"
msgstr ""

#: ../classes/class_basis.rst:325
msgid ":ref:`Vector3<class_Vector3>` **xform_inv** **(** :ref:`Vector3<class_Vector3>` v **)**"
msgstr ""

#: ../classes/class_basis.rst:327
msgid "返回一个由转置基数矩阵变换（乘法）的向量。"
msgstr ""

#: ../classes/class_basis.rst:329
msgid "\\ **注意:**\\ 只有当矩阵代表旋转反射时，才会产生矩阵的反相乘法。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
