# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_tween.rst:10
msgid "Tween"
msgstr ""

#: ../classes/class_tween.rst:12
msgid "**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_tween.rst:14
msgid "使节点的属性随时间平滑地变化。"
msgstr ""

#: ../classes/class_tween.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_tween.rst:19
msgid "需要让数值属性在一定范围内做插值的动画可以使用 Tween。\\ *Tween* 这个名字来自动画技术 *in-betweening*\\ （补间动画）：你指定\\ *关键帧*\\ ，而计算机则在关键帧之间插补出其他帧。"
msgstr ""

#: ../classes/class_tween.rst:21
msgid "\\ ``Tween`` 比 :ref:`AnimationPlayer<class_AnimationPlayer>` 更适合于事先不知道最终数值的动画。例如，插值动态选择的相机变焦值最好用 ``Tween`` 节点完成；用 :ref:`AnimationPlayer<class_AnimationPlayer>` 节点做同样的事情会很困难。"
msgstr ""

#: ../classes/class_tween.rst:23
msgid "下面是一个简短的使用例子，让一个 2D 节点在两个位置之间平滑移动："
msgstr ""

#: ../classes/class_tween.rst:33
msgid "许多方法都需要提供属性名称，比如上面的 ``\"position\"``\\ 。你可以通过在检查器中将鼠标悬停在该属性上找到正确的属性名称。你也可以通过使用 ``\"property:component\"`` 直接提供一个属性的分量（例如 ``position:x``\\ ），动画就只会对这个分量起效。"
msgstr ""

#: ../classes/class_tween.rst:35
msgid "许多方法接受过渡类型 ``trans_type`` 和缓动类型 ``easy_type``\\ 。前者接受 :ref:`TransitionType<enum_Tween_TransitionType>` 常量，指的是处理动画时间的方式（请参阅 `easings.net <https://easings.net/>`__ 的一些例子）。后者接受 :ref:`EaseType<enum_Tween_EaseType>` 常量，控制 ``trans_type`` 应用于插值的位置（开头、结尾、或两处都是）。如果你不知道该选哪个过渡和缓动，你可以用 :ref:`EASE_IN_OUT<class_Tween_constant_EASE_IN_OUT>` 尝试不同的 :ref:`TransitionType<enum_Tween_TransitionType>` 常数，然后使用看起来最好的那个。"
msgstr ""

#: ../classes/class_tween.rst:37
msgid "\\ `Tween 缓动与过渡类型速查表 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/tween_cheatsheet.png>`__"
msgstr ""

#: ../classes/class_tween.rst:40
msgid "属性"
msgstr ""

#: ../classes/class_tween.rst:43
msgid ":ref:`TweenProcessMode<enum_Tween_TweenProcessMode>`"
msgstr ""

#: ../classes/class_tween.rst:43
msgid ":ref:`playback_process_mode<class_Tween_property_playback_process_mode>`"
msgstr ""

#: ../classes/class_tween.rst:43
#: ../classes/class_tween.rst:227
msgid "``1``"
msgstr ""

#: ../classes/class_tween.rst:45
#: ../classes/class_tween.rst:58
#: ../classes/class_tween.rst:96
msgid ":ref:`float<class_float>`"
msgstr ""

#: ../classes/class_tween.rst:45
msgid ":ref:`playback_speed<class_Tween_property_playback_speed>`"
msgstr ""

#: ../classes/class_tween.rst:45
#: ../classes/class_tween.rst:243
msgid "``1.0``"
msgstr ""

#: ../classes/class_tween.rst:47
#: ../classes/class_tween.rst:54
#: ../classes/class_tween.rst:56
#: ../classes/class_tween.rst:60
#: ../classes/class_tween.rst:62
#: ../classes/class_tween.rst:64
#: ../classes/class_tween.rst:66
#: ../classes/class_tween.rst:68
#: ../classes/class_tween.rst:70
#: ../classes/class_tween.rst:72
#: ../classes/class_tween.rst:74
#: ../classes/class_tween.rst:76
#: ../classes/class_tween.rst:78
#: ../classes/class_tween.rst:80
#: ../classes/class_tween.rst:82
#: ../classes/class_tween.rst:86
#: ../classes/class_tween.rst:88
#: ../classes/class_tween.rst:90
#: ../classes/class_tween.rst:92
#: ../classes/class_tween.rst:94
msgid ":ref:`bool<class_bool>`"
msgstr ""

#: ../classes/class_tween.rst:47
msgid ":ref:`repeat<class_Tween_property_repeat>`"
msgstr ""

#: ../classes/class_tween.rst:47
#: ../classes/class_tween.rst:259
msgid "``false``"
msgstr ""

#: ../classes/class_tween.rst:51
msgid "方法"
msgstr ""

#: ../classes/class_tween.rst:54
msgid ":ref:`follow_method<class_Tween_method_follow_method>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` initial_val, :ref:`Object<class_Object>` target, :ref:`String<class_String>` target_method, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:56
msgid ":ref:`follow_property<class_Tween_method_follow_property>` **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` property, :ref:`Variant<class_Variant>` initial_val, :ref:`Object<class_Object>` target, :ref:`NodePath<class_NodePath>` target_property, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:58
msgid ":ref:`get_runtime<class_Tween_method_get_runtime>` **(** **)** |const|"
msgstr ""

#: ../classes/class_tween.rst:60
msgid ":ref:`interpolate_callback<class_Tween_method_interpolate_callback>` **(** :ref:`Object<class_Object>` object, :ref:`float<class_float>` duration, :ref:`String<class_String>` callback, :ref:`Variant<class_Variant>` arg1=null, :ref:`Variant<class_Variant>` arg2=null, :ref:`Variant<class_Variant>` arg3=null, :ref:`Variant<class_Variant>` arg4=null, :ref:`Variant<class_Variant>` arg5=null **)**"
msgstr ""

#: ../classes/class_tween.rst:62
msgid ":ref:`interpolate_deferred_callback<class_Tween_method_interpolate_deferred_callback>` **(** :ref:`Object<class_Object>` object, :ref:`float<class_float>` duration, :ref:`String<class_String>` callback, :ref:`Variant<class_Variant>` arg1=null, :ref:`Variant<class_Variant>` arg2=null, :ref:`Variant<class_Variant>` arg3=null, :ref:`Variant<class_Variant>` arg4=null, :ref:`Variant<class_Variant>` arg5=null **)**"
msgstr ""

#: ../classes/class_tween.rst:64
msgid ":ref:`interpolate_method<class_Tween_method_interpolate_method>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` initial_val, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:66
msgid ":ref:`interpolate_property<class_Tween_method_interpolate_property>` **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` property, :ref:`Variant<class_Variant>` initial_val, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:68
msgid ":ref:`is_active<class_Tween_method_is_active>` **(** **)** |const|"
msgstr ""

#: ../classes/class_tween.rst:70
msgid ":ref:`remove<class_Tween_method_remove>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:72
msgid ":ref:`remove_all<class_Tween_method_remove_all>` **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:74
msgid ":ref:`reset<class_Tween_method_reset>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:76
msgid ":ref:`reset_all<class_Tween_method_reset_all>` **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:78
msgid ":ref:`resume<class_Tween_method_resume>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:80
msgid ":ref:`resume_all<class_Tween_method_resume_all>` **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:82
msgid ":ref:`seek<class_Tween_method_seek>` **(** :ref:`float<class_float>` time **)**"
msgstr ""

#: ../classes/class_tween.rst:84
msgid "void"
msgstr ""

#: ../classes/class_tween.rst:84
msgid ":ref:`set_active<class_Tween_method_set_active>` **(** :ref:`bool<class_bool>` active **)**"
msgstr ""

#: ../classes/class_tween.rst:86
msgid ":ref:`start<class_Tween_method_start>` **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:88
msgid ":ref:`stop<class_Tween_method_stop>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:90
msgid ":ref:`stop_all<class_Tween_method_stop_all>` **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:92
msgid ":ref:`targeting_method<class_Tween_method_targeting_method>` **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` method, :ref:`Object<class_Object>` initial, :ref:`String<class_String>` initial_method, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:94
msgid ":ref:`targeting_property<class_Tween_method_targeting_property>` **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` property, :ref:`Object<class_Object>` initial, :ref:`NodePath<class_NodePath>` initial_val, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:96
msgid ":ref:`tell<class_Tween_method_tell>` **(** **)** |const|"
msgstr ""

#: ../classes/class_tween.rst:100
msgid "信号"
msgstr ""

#: ../classes/class_tween.rst:104
msgid "**tween_all_completed** **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:106
msgid "当补间中的所有进程结束时触发。"
msgstr ""

#: ../classes/class_tween.rst:112
msgid "**tween_completed** **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` key **)**"
msgstr ""

#: ../classes/class_tween.rst:114
msgid "补间结束时触发。"
msgstr ""

#: ../classes/class_tween.rst:120
msgid "**tween_started** **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` key **)**"
msgstr ""

#: ../classes/class_tween.rst:122
msgid "当补间开始时触发。"
msgstr ""

#: ../classes/class_tween.rst:128
msgid "**tween_step** **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` key, :ref:`float<class_float>` elapsed, :ref:`Object<class_Object>` value **)**"
msgstr ""

#: ../classes/class_tween.rst:130
msgid "动画的每一步都触发。"
msgstr ""

#: ../classes/class_tween.rst:133
msgid "枚举"
msgstr ""

#: ../classes/class_tween.rst:141
msgid "enum **TweenProcessMode**:"
msgstr ""

#: ../classes/class_tween.rst:143
msgid "**TWEEN_PROCESS_PHYSICS** = **0** --- 补间通过 ``_physics_process`` 回调进行更新。"
msgstr ""

#: ../classes/class_tween.rst:145
msgid "**TWEEN_PROCESS_IDLE** = **1** --- 补间通过\\ ``_process``\\ 回调进行更新。"
msgstr ""

#: ../classes/class_tween.rst:173
msgid "enum **TransitionType**:"
msgstr ""

#: ../classes/class_tween.rst:175
msgid "**TRANS_LINEAR** = **0** --- 动画是线性插值的。"
msgstr ""

#: ../classes/class_tween.rst:177
msgid "**TRANS_SINE** = **1** --- 动画使用正弦函数进行插值。"
msgstr ""

#: ../classes/class_tween.rst:179
msgid "**TRANS_QUINT** = **2** --- 动画是用五次方，即5的幂函数进行插值的。"
msgstr ""

#: ../classes/class_tween.rst:181
msgid "**TRANS_QUART** = **3** --- 动画是用一个四次方，即4的幂函数插值的。"
msgstr ""

#: ../classes/class_tween.rst:183
msgid "**TRANS_QUAD** = **4** --- 动画是用二次方，即2的幂函数插值的。"
msgstr ""

#: ../classes/class_tween.rst:185
msgid "**TRANS_EXPO** = **5** --- 动画是用一个指数，即x的幂函数插值的。"
msgstr ""

#: ../classes/class_tween.rst:187
msgid "**TRANS_ELASTIC** = **6** --- 动画弹性插值，在边缘摆动。"
msgstr ""

#: ../classes/class_tween.rst:189
msgid "**TRANS_CUBIC** = **7** --- 动画是用一个立方，即3的幂函数插值的。"
msgstr ""

#: ../classes/class_tween.rst:191
msgid "**TRANS_CIRC** = **8** --- 动画使用平方根的函数进行插值。"
msgstr ""

#: ../classes/class_tween.rst:193
msgid "**TRANS_BOUNCE** = **9** --- 动画通过在末尾弹跳插值。"
msgstr ""

#: ../classes/class_tween.rst:195
msgid "**TRANS_BACK** = **10** --- 动画在末端回放插值。"
msgstr ""

#: ../classes/class_tween.rst:209
msgid "enum **EaseType**:"
msgstr ""

#: ../classes/class_tween.rst:211
msgid "**EASE_IN** = **0** --- 插值开始缓慢，并加速接近结束。"
msgstr ""

#: ../classes/class_tween.rst:213
msgid "**EASE_OUT** = **1** --- 插值开始快速，接近结束时减慢。"
msgstr ""

#: ../classes/class_tween.rst:215
msgid "**EASE_IN_OUT** = **2** --- :ref:`EASE_IN<class_Tween_constant_EASE_IN>` 和 :ref:`EASE_OUT<class_Tween_constant_EASE_OUT>` 的组合。两端的插值最慢。"
msgstr ""

#: ../classes/class_tween.rst:217
msgid "**EASE_OUT_IN** = **3** --- :ref:`EASE_IN<class_Tween_constant_EASE_IN>` and :ref:`EASE_OUT<class_Tween_constant_EASE_OUT>`\\ 的组合。两端的插值最快。"
msgstr ""

#: ../classes/class_tween.rst:220
msgid "属性说明"
msgstr ""

#: ../classes/class_tween.rst:224
msgid ":ref:`TweenProcessMode<enum_Tween_TweenProcessMode>` **playback_process_mode**"
msgstr ""

#: ../classes/class_tween.rst:227
#: ../classes/class_tween.rst:243
#: ../classes/class_tween.rst:259
msgid "*Default*"
msgstr ""

#: ../classes/class_tween.rst:229
#: ../classes/class_tween.rst:245
#: ../classes/class_tween.rst:261
msgid "*Setter*"
msgstr ""

#: ../classes/class_tween.rst:229
msgid "set_tween_process_mode(value)"
msgstr ""

#: ../classes/class_tween.rst:231
#: ../classes/class_tween.rst:247
#: ../classes/class_tween.rst:263
msgid "*Getter*"
msgstr ""

#: ../classes/class_tween.rst:231
msgid "get_tween_process_mode()"
msgstr ""

#: ../classes/class_tween.rst:234
msgid "补间动画处理线程。参阅\\ :ref:`TweenProcessMode<enum_Tween_TweenProcessMode>`\\ 。"
msgstr ""

#: ../classes/class_tween.rst:240
msgid ":ref:`float<class_float>` **playback_speed**"
msgstr ""

#: ../classes/class_tween.rst:245
msgid "set_speed_scale(value)"
msgstr ""

#: ../classes/class_tween.rst:247
msgid "get_speed_scale()"
msgstr ""

#: ../classes/class_tween.rst:250
msgid "补间的速度乘数。例如，设置为\\ ``1.0``\\ 为正常速度，\\ ``2.0``\\ 为正常速度的2倍，或者\\ ``0.5``\\ 为正常速度的一半。值为\\ ``0``\\ 时，动画会暂停，另请参阅\\ :ref:`set_active<class_Tween_method_set_active>`\\ 或\\ :ref:`stop_all<class_Tween_method_stop_all>`\\ 。"
msgstr ""

#: ../classes/class_tween.rst:256
msgid ":ref:`bool<class_bool>` **repeat**"
msgstr ""

#: ../classes/class_tween.rst:261
msgid "set_repeat(value)"
msgstr ""

#: ../classes/class_tween.rst:263
msgid "is_repeat()"
msgstr ""

#: ../classes/class_tween.rst:266
msgid "如果\\ ``true``\\ ，补间循环。"
msgstr ""

#: ../classes/class_tween.rst:269
msgid "方法说明"
msgstr ""

#: ../classes/class_tween.rst:273
msgid ":ref:`bool<class_bool>` **follow_method** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` initial_val, :ref:`Object<class_Object>` target, :ref:`String<class_String>` target_method, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:275
msgid "跟随 ``object`` 的 ``method`` 方法，将其返回值应用于 ``target`` 的 ``target_method`` 方法。从 ``initial_val`` 开始，持续时间为 ``duration`` 秒，延迟为 ``delay`` 秒。方法是用连续的值来调用的。"
msgstr ""

#: ../classes/class_tween.rst:277
#: ../classes/class_tween.rst:287
#: ../classes/class_tween.rst:321
#: ../classes/class_tween.rst:331
#: ../classes/class_tween.rst:439
#: ../classes/class_tween.rst:449
msgid "对 ``trans_type`` 使用 :ref:`TransitionType<enum_Tween_TransitionType>` 类型的值，对 ``ease_type`` 使用 :ref:`EaseType<enum_Tween_EaseType>` 类型的值。这些值控制的是插值的时间和方向。更多信息请参阅类描述。"
msgstr ""

#: ../classes/class_tween.rst:283
msgid ":ref:`bool<class_bool>` **follow_property** **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` property, :ref:`Variant<class_Variant>` initial_val, :ref:`Object<class_Object>` target, :ref:`NodePath<class_NodePath>` target_property, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:285
msgid "跟随 ``object`` 的 ``property`` 属性，将其应用于 ``target`` 的 ``target_property`` 属性。从 ``initial_val`` 开始，持续时间为 ``duration`` 秒，延迟为 ``delay`` 秒。方法是用连续的值来调用的。"
msgstr ""

#: ../classes/class_tween.rst:293
msgid ":ref:`float<class_float>` **get_runtime** **(** **)** |const|"
msgstr ""

#: ../classes/class_tween.rst:295
msgid "返回所有补间结束所需的总时间。如果你有两个补间，一个持续 10 秒，另一个 20 秒，它会返回 20 秒，因为到那个时候，所有的补间都会完成。"
msgstr ""

#: ../classes/class_tween.rst:301
msgid ":ref:`bool<class_bool>` **interpolate_callback** **(** :ref:`Object<class_Object>` object, :ref:`float<class_float>` duration, :ref:`String<class_String>` callback, :ref:`Variant<class_Variant>` arg1=null, :ref:`Variant<class_Variant>` arg2=null, :ref:`Variant<class_Variant>` arg3=null, :ref:`Variant<class_Variant>` arg4=null, :ref:`Variant<class_Variant>` arg5=null **)**"
msgstr ""

#: ../classes/class_tween.rst:303
msgid "在 ``duration`` 持续时间后，调用 ``object`` 的 ``callback`` 回调。\\ ``arg1``-``arg5`` 是要传递给回调的参数。"
msgstr ""

#: ../classes/class_tween.rst:309
msgid ":ref:`bool<class_bool>` **interpolate_deferred_callback** **(** :ref:`Object<class_Object>` object, :ref:`float<class_float>` duration, :ref:`String<class_String>` callback, :ref:`Variant<class_Variant>` arg1=null, :ref:`Variant<class_Variant>` arg2=null, :ref:`Variant<class_Variant>` arg3=null, :ref:`Variant<class_Variant>` arg4=null, :ref:`Variant<class_Variant>` arg5=null **)**"
msgstr ""

#: ../classes/class_tween.rst:311
msgid "在 ``duration`` 持续时间后，在主线程上调用 ``object`` 的 ``callback`` 回调（类似 :ref:`Object.call_deferred<class_Object_method_call_deferred>`\\ ）。\\ ``arg1``-``arg5`` 是要传递给回调的参数。"
msgstr ""

#: ../classes/class_tween.rst:317
msgid ":ref:`bool<class_bool>` **interpolate_method** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` initial_val, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:319
msgid "将 ``object`` 的 ``method`` 方法从起始值 ``initial_val`` 动画到最终值 ``final_val``\\ ，持续时间为 ``duration`` 秒，延迟为 ``delay`` 秒。方法是用连续的值来调用的。"
msgstr ""

#: ../classes/class_tween.rst:327
msgid ":ref:`bool<class_bool>` **interpolate_property** **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` property, :ref:`Variant<class_Variant>` initial_val, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:329
msgid "将 ``object`` 的 ``property`` 属性从起始值 ``initial_val`` 动画到最终值 ``final_val``\\ ，持续时间为 ``duration`` 秒，延迟为 ``delay`` 秒。将起始值设置为 ``null`` 会使用该属性的当前值。"
msgstr ""

#: ../classes/class_tween.rst:337
msgid ":ref:`bool<class_bool>` **is_active** **(** **)** |const|"
msgstr ""

#: ../classes/class_tween.rst:339
msgid "如果当前有补间正在运行，则返回 ``true``\\ 。"
msgstr ""

#: ../classes/class_tween.rst:341
msgid "\\ **注意：**\\ 这个方法不考虑已经结束的补间。"
msgstr ""

#: ../classes/class_tween.rst:347
msgid ":ref:`bool<class_bool>` **remove** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:349
msgid "停止动画并移除补间，指定其对象和属性或方法的对。默认情况下，除非指定\\ ``key``\\ ，否则所有的补间都会被移除。"
msgstr ""

#: ../classes/class_tween.rst:355
msgid ":ref:`bool<class_bool>` **remove_all** **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:357
msgid "停止动画，并删除所有补间。"
msgstr ""

#: ../classes/class_tween.rst:363
msgid ":ref:`bool<class_bool>` **reset** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:365
msgid "将补间重置到它的初始值，即给定的值，而不是补间之前的值，指定其对象和属性或方法的对。默认情况下，除非指定了\\ ``key``\\ ，否则所有的补间都被移除。"
msgstr ""

#: ../classes/class_tween.rst:371
msgid ":ref:`bool<class_bool>` **reset_all** **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:373
msgid "将所有的补间重置为它们的初始值，即给出的值，而不是补间之前的值。"
msgstr ""

#: ../classes/class_tween.rst:379
msgid ":ref:`bool<class_bool>` **resume** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:381
msgid "继续停止的补间制作动画，指定其对象和属性或方法的对。默认情况下，除非指定了\\ ``key``\\ ，否则所有的补间都恢复。"
msgstr ""

#: ../classes/class_tween.rst:387
msgid ":ref:`bool<class_bool>` **resume_all** **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:389
msgid "继续动画所有停止补间。"
msgstr ""

#: ../classes/class_tween.rst:395
msgid ":ref:`bool<class_bool>` **seek** **(** :ref:`float<class_float>` time **)**"
msgstr ""

#: ../classes/class_tween.rst:397
msgid "设置插值为指定的\\ ``time``\\ ，单位秒。"
msgstr ""

#: ../classes/class_tween.rst:403
msgid "void **set_active** **(** :ref:`bool<class_bool>` active **)**"
msgstr ""

#: ../classes/class_tween.rst:405
msgid "激活或停用补间。别请参阅\\ :ref:`stop_all<class_Tween_method_stop_all>`\\ 和\\ :ref:`resume_all<class_Tween_method_resume_all>`\\ 。"
msgstr ""

#: ../classes/class_tween.rst:411
msgid ":ref:`bool<class_bool>` **start** **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:413
msgid "开始补间。您可以在此之前和之后定义动画。"
msgstr ""

#: ../classes/class_tween.rst:419
msgid ":ref:`bool<class_bool>` **stop** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` key=\"\" **)**"
msgstr ""

#: ../classes/class_tween.rst:421
msgid "停止补间，指定其对象和属性或方法的对。除非指定了 ``key``\\ ，默认情况下，所有补间都会停止。"
msgstr ""

#: ../classes/class_tween.rst:427
msgid ":ref:`bool<class_bool>` **stop_all** **(** **)**"
msgstr ""

#: ../classes/class_tween.rst:429
msgid "停止动画所有补间。"
msgstr ""

#: ../classes/class_tween.rst:435
msgid ":ref:`bool<class_bool>` **targeting_method** **(** :ref:`Object<class_Object>` object, :ref:`String<class_String>` method, :ref:`Object<class_Object>` initial, :ref:`String<class_String>` initial_method, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:437
msgid "将 ``object`` 的 ``method`` 方法做动画。以 ``initial_method`` 方法的返回值作为起始值，最终值为 ``final_val``\\ ，持续时间为 ``duration`` 秒，延迟为 ``delay`` 秒。方法是用连续的值来调用的。"
msgstr ""

#: ../classes/class_tween.rst:445
msgid ":ref:`bool<class_bool>` **targeting_property** **(** :ref:`Object<class_Object>` object, :ref:`NodePath<class_NodePath>` property, :ref:`Object<class_Object>` initial, :ref:`NodePath<class_NodePath>` initial_val, :ref:`Variant<class_Variant>` final_val, :ref:`float<class_float>` duration, :ref:`TransitionType<enum_Tween_TransitionType>` trans_type=0, :ref:`EaseType<enum_Tween_EaseType>` ease_type=2, :ref:`float<class_float>` delay=0 **)**"
msgstr ""

#: ../classes/class_tween.rst:447
msgid "将 ``object`` 的 ``property`` 属性做动画。以 ``initial`` 对象的 ``initial_val`` 属性的当前做作为起始值，最终值为 ``final_val``\\ ，持续时间为 ``duration`` 秒，延迟为 ``delay`` 秒。"
msgstr ""

#: ../classes/class_tween.rst:455
msgid ":ref:`float<class_float>` **tell** **(** **)** |const|"
msgstr ""

#: ../classes/class_tween.rst:457
msgid "返回补间的当前时间。"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
