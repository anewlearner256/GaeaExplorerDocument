# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../classes/class_jsonrpc.rst:10
msgid "JSONRPC"
msgstr ""

#: ../classes/class_jsonrpc.rst:12
msgid "**Inherits:** :ref:`Object<class_Object>`"
msgstr ""

#: ../classes/class_jsonrpc.rst:14
msgid "用于处理看起来像JSONRPC文档的字典的助手。"
msgstr ""

#: ../classes/class_jsonrpc.rst:17
msgid "描述"
msgstr ""

#: ../classes/class_jsonrpc.rst:19
msgid "`JSON-RPC <https://www.jsonrpc.org/>`__\\ 是一个标准，它将一个方法调用包装在一个\\ :ref:`JSON<class_JSON>`\\ 对象中。该对象有一个特定的结构，并标识出哪个方法被调用，该函数的参数，并携带一个ID来跟踪响应。这个类在\\ :ref:`Dictionary<class_Dictionary>`\\ 之上实现了该标准；你必须用其他函数在\\ :ref:`Dictionary<class_Dictionary>`\\ 和\\ :ref:`JSON<class_JSON>`\\ 之间进行转换。"
msgstr ""

#: ../classes/class_jsonrpc.rst:22
msgid "方法"
msgstr ""

#: ../classes/class_jsonrpc.rst:25
#: ../classes/class_jsonrpc.rst:27
#: ../classes/class_jsonrpc.rst:29
#: ../classes/class_jsonrpc.rst:31
msgid ":ref:`Dictionary<class_Dictionary>`"
msgstr ""

#: ../classes/class_jsonrpc.rst:25
msgid ":ref:`make_notification<class_JSONRPC_method_make_notification>` **(** :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` params **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:27
msgid ":ref:`make_request<class_JSONRPC_method_make_request>` **(** :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` params, :ref:`Variant<class_Variant>` id **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:29
msgid ":ref:`make_response<class_JSONRPC_method_make_response>` **(** :ref:`Variant<class_Variant>` result, :ref:`Variant<class_Variant>` id **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:31
msgid ":ref:`make_response_error<class_JSONRPC_method_make_response_error>` **(** :ref:`int<class_int>` code, :ref:`String<class_String>` message, :ref:`Variant<class_Variant>` id=null **)** |const|"
msgstr ""

#: ../classes/class_jsonrpc.rst:33
msgid ":ref:`Variant<class_Variant>`"
msgstr ""

#: ../classes/class_jsonrpc.rst:33
msgid ":ref:`process_action<class_JSONRPC_method_process_action>` **(** :ref:`Variant<class_Variant>` action, :ref:`bool<class_bool>` recurse=false **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:35
msgid ":ref:`String<class_String>`"
msgstr ""

#: ../classes/class_jsonrpc.rst:35
msgid ":ref:`process_string<class_JSONRPC_method_process_string>` **(** :ref:`String<class_String>` action **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:37
msgid "void"
msgstr ""

#: ../classes/class_jsonrpc.rst:37
msgid ":ref:`set_scope<class_JSONRPC_method_set_scope>` **(** :ref:`String<class_String>` scope, :ref:`Object<class_Object>` target **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:41
msgid "枚举"
msgstr ""

#: ../classes/class_jsonrpc.rst:55
msgid "enum **ErrorCode**:"
msgstr ""

#: ../classes/class_jsonrpc.rst:57
msgid "**PARSE_ERROR** = **-32700**"
msgstr ""

#: ../classes/class_jsonrpc.rst:59
msgid "**INVALID_REQUEST** = **-32600**"
msgstr ""

#: ../classes/class_jsonrpc.rst:61
msgid "**METHOD_NOT_FOUND** = **-32601** --- 请求了方法调用，但 JSONRPC 子类中不存在该名称的函数。"
msgstr ""

#: ../classes/class_jsonrpc.rst:63
msgid "**INVALID_PARAMS** = **-32602**"
msgstr ""

#: ../classes/class_jsonrpc.rst:65
msgid "**INTERNAL_ERROR** = **-32603**"
msgstr ""

#: ../classes/class_jsonrpc.rst:68
msgid "方法说明"
msgstr ""

#: ../classes/class_jsonrpc.rst:72
msgid ":ref:`Dictionary<class_Dictionary>` **make_notification** **(** :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` params **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:74
msgid "返回JSON-RPC通知形式的字典。通知是一次性的信息，不需要有响应。"
msgstr ""

#: ../classes/class_jsonrpc.rst:76
#: ../classes/class_jsonrpc.rst:88
msgid "``method``:被调用的方法的名称。"
msgstr ""

#: ../classes/class_jsonrpc.rst:78
#: ../classes/class_jsonrpc.rst:90
msgid "``params``:传递给该方法的参数的数组或字典。"
msgstr ""

#: ../classes/class_jsonrpc.rst:84
msgid ":ref:`Dictionary<class_Dictionary>` **make_request** **(** :ref:`String<class_String>` method, :ref:`Variant<class_Variant>` params, :ref:`Variant<class_Variant>` id **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:86
msgid "以JSON-RPC请求的形式返回字典。请求被发送到服务器，并期望得到响应。ID 字段用于服务器指定它正在响应的确切请求。"
msgstr ""

#: ../classes/class_jsonrpc.rst:92
msgid "``id``:唯一标识此请求。服务器应发送具有相同 ID 的响应。"
msgstr ""

#: ../classes/class_jsonrpc.rst:98
msgid ":ref:`Dictionary<class_Dictionary>` **make_response** **(** :ref:`Variant<class_Variant>` result, :ref:`Variant<class_Variant>` id **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:100
msgid "当服务器接收并处理请求时，它应该发送响应。如果你不想要回复，那么你需要发送通知。"
msgstr ""

#: ../classes/class_jsonrpc.rst:102
msgid "``result``\\ ：被调用函数的返回值。"
msgstr ""

#: ../classes/class_jsonrpc.rst:104
msgid "``id``\\ ：此响应针对的请求的 ID。"
msgstr ""

#: ../classes/class_jsonrpc.rst:110
msgid ":ref:`Dictionary<class_Dictionary>` **make_response_error** **(** :ref:`int<class_int>` code, :ref:`String<class_String>` message, :ref:`Variant<class_Variant>` id=null **)** |const|"
msgstr ""

#: ../classes/class_jsonrpc.rst:112
msgid "创建响应，指示先前的回复以某种方式失败。"
msgstr ""

#: ../classes/class_jsonrpc.rst:114
msgid "``code``\\ ：这是哪种错误对应的错误代码。参阅 :ref:`ErrorCode<enum_JSONRPC_ErrorCode>` 常量。"
msgstr ""

#: ../classes/class_jsonrpc.rst:116
msgid "``message``\\ ：关于此错误的自定义消息。"
msgstr ""

#: ../classes/class_jsonrpc.rst:118
msgid "``id``\\ ：这个错误是对请求的响应。"
msgstr ""

#: ../classes/class_jsonrpc.rst:124
msgid ":ref:`Variant<class_Variant>` **process_action** **(** :ref:`Variant<class_Variant>` action, :ref:`bool<class_bool>` recurse=false **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:126
msgid "给定采用 JSON-RPC 请求形式的字典：解压请求并运行它。通过查看名为 \"method\" 的字段并在 JSONRPC 对象中查找等效命名的函数来解析方法。如果找到，则调用该方法。"
msgstr ""

#: ../classes/class_jsonrpc.rst:128
msgid "要添加新的受支持方法，请扩展 JSONRPC 类并在你的子类上调用 :ref:`process_action<class_JSONRPC_method_process_action>`\\ 。"
msgstr ""

#: ../classes/class_jsonrpc.rst:130
msgid "\\ ``action``\\ ：要运行的动作，作为 JSON-RPC 请求或通知形式的字典。"
msgstr ""

#: ../classes/class_jsonrpc.rst:136
msgid ":ref:`String<class_String>` **process_string** **(** :ref:`String<class_String>` action **)**"
msgstr ""

#: ../classes/class_jsonrpc.rst:142
msgid "void **set_scope** **(** :ref:`String<class_String>` scope, :ref:`Object<class_Object>` target **)**"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
