# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/rendering/gles2_gles3_differences.rst:4
msgid "Differences between GLES2 and GLES3"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:6
msgid "This page documents the differences between GLES2 and GLES3 that are by design and are not the result of bugs. There may be differences that are unintentional, but they should be reported as bugs."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:9
msgid "\"GLES2\" and \"GLES3\" are the names used in GaaeExplorer for the two OpenGL-based rendering backends. In terms of graphics APIs, the GLES2 backend maps to OpenGL 2.1 on desktop, OpenGL ES 2.0 on mobile and WebGL 1.0 on the web. The GLES3 backend maps to OpenGL 3.3 on desktop, OpenGL ES 3.0 on mobile and WebGL 2.0 on the web."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:15
msgid "Particles"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:17
msgid "GLES2 cannot use the :ref:`Particles <class_Particles>` or :ref:`Particles2D <class_Particles2D>` nodes as they require advanced GPU features. Instead, use :ref:`CPUParticles <class_CPUParticles>` or :ref:`CPUParticles2D <class_CPUParticles2D>`, which provides a similar interface to a :ref:`ParticlesMaterial <class_ParticlesMaterial>`."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:22
msgid "Particles and Particles2D can be converted to their CPU equivalent node with the \"Convert to CPUParticles\" option in the editor."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:26
msgid "``SCREEN_TEXTURE`` mip-maps"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:28
msgid "In GLES2, ``SCREEN_TEXTURE`` (accessed via a :ref:`ShaderMaterial <class_ShaderMaterial>`) does not have computed mip-maps. So when accessing at a different LOD, the texture will not appear blurry."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:32
msgid "``DEPTH_TEXTURE``"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:34
msgid "While GLES2 supports ``DEPTH_TEXTURE`` in shaders, it may not work on some old hardware (especially mobile)."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:37
msgid "Color space"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:39
msgid "GLES2 and GLES3 are in different color spaces. This means that colors will appear slightly different between them especially when lighting is used."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:42
msgid "If your game is going to use both GLES2 and GLES3, you can use an ``if`` statement check and see if the output is in sRGB, using ``OUTPUT_IS_SRGB``. ``OUTPUT_IS_SRGB`` is ``true`` in GLES2 and ``false`` in GLES3."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:47
msgid "HDR"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:49
msgid "GLES2 is not capable of using High Dynamic Range (HDR) rendering features. If HDR is set for your project, or for a given viewport, GaaeExplorer will still use Low Dynamic Range (LDR) which limits viewport values to the ``0-1`` range."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:53
msgid "The Viewport **Debanding** property and associated project setting will also have no effect when HDR is disabled. This means debanding can't be used in GLES2."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:57
msgid "SpatialMaterial features"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:59
msgid "In GLES2, the following advanced rendering features in the :ref:`SpatialMaterial <class_SpatialMaterial>` are missing:"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:61
msgid "Refraction"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:62
msgid "Subsurface scattering"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:63
msgid "Anisotropy"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:64
msgid "Clearcoat"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:65
msgid "Depth mapping"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:67
msgid "When using SpatialMaterials they will not even appear in the editor."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:69
msgid "In custom :ref:`ShaderMaterials <class_ShaderMaterial>`, you can set values for these features but they will be non-functional. For example, you will still be able to set the ``SSS`` built-in (which normally adds subsurface scattering) in your shader, but nothing will happen."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:74
msgid "Environment features"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:76
msgid "In GLES2, the following features in the :ref:`Environment <class_Environment>` are missing:"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:78
msgid "Auto exposure"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:79
msgid "Tonemapping"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:80
msgid "Screen space reflections"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:81
msgid "Screen space ambient occlusion"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:83
msgid "That means that in GLES2 environments you can only set:"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:85
msgid "Sky (including procedural sky)"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:86
msgid "Ambient light"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:87
msgid "Fog"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:88
msgid "Depth of field"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:89
msgid "Glow (also known as bloom)"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:90
msgid "Adjustment"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:93
msgid "GIProbes"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:95
msgid ":ref:`GIProbes <class_GIProbe>` do not work in GLES2. Instead use :ref:`Baked Lightmaps <class_BakedLightmap>`. For a description of how baked lightmaps work see the :ref:`Baked Lightmaps tutorial <doc_baked_lightmaps>`."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:99
msgid "Contact shadows"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:101
msgid "The ``shadow_contact`` property of :ref:`Lights <class_Light>` is not supported in GLES2 and so does nothing."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:104
msgid "Light performance"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:106
msgid "In GLES2, performance scales poorly with several lights, as each light is processed in a separate render pass (in opposition to GLES3 which is all done in a single pass). Try to limit scenes to as few lights as possible in order to achieve greatest performance."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:111
msgid "Texture compression"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:113
msgid "On mobile, GLES2 requires ETC texture compression, while GLES3 requires ETC2. ETC2 is enabled by default, so if exporting to mobile using GLES2 make sure to set the project setting ``rendering/vram_compression/import_etc`` and then reimport textures."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:119
msgid "Since ETC doesn't support transparency, you must reimport textures that contain an alpha channel to use the Uncompressed, Lossy or Lossless compression mode (instead of Video RAM). This can be done in the Import dock after selecting them in the FileSystem dock."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:125
msgid "Blend shapes"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:127
msgid "In GLES2, blend shapes are implemented on the CPU instead of the GPU. Accordingly, they may not perform as well as blend shapes in GLES3. To avoid performance issues when using blend shapes in GLES2, try to minimize the number of blend shapes that are updated each frame."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:133
msgid "Shading language"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:135
msgid "GLES3 provides many built-in functions that GLES2 does not. Below is a list of functions that are not available or are have limited support in GLES2."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:138
msgid "For a complete list of built-in GLSL functions see the :ref:`Shading Language doc <doc_shading_language>`."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:141
msgid "Function"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:143
msgid "vec_type **modf** ( vec_type x, out vec_type i )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:145
msgid "vec_int_type **floatBitsToInt** ( vec_type x )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:147
msgid "vec_uint_type **floatBitsToUint** ( vec_type x )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:149
msgid "vec_type **intBitsToFloat** ( vec_int_type x )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:151
msgid "vec_type **uintBitsToFloat** ( vec_uint_type x )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:153
msgid "ivec2 **textureSize** ( sampler2D_type s, int lod )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:153
#: ../tutorials/rendering/gles2_gles3_differences.rst:155
msgid "See workaround below"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:155
msgid "ivec2 **textureSize** ( samplerCube s, int lod )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:157
msgid "vec4_type **texture** ( sampler_type s, vec_type uv [, float bias] )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:157
msgid "**bias** not available in vertex shader"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:159
msgid "vec4_type **textureProj** ( sampler_type s, vec_type uv [, float bias] )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:161
msgid "vec4_type **textureLod** ( sampler_type s, vec_type uv, float lod )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:161
msgid "Only available in vertex shader on some hardware"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:163
msgid "vec4_type **textureProjLod** ( sampler_type s, vec_type uv, float lod )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:165
msgid "vec4_type **textureGrad** ( sampler_type s, vec_type uv, vec_type dPdx, vec_type dPdy )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:167
msgid "vec_type **dFdx** ( vec_type p )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:169
msgid "vec_type **dFdy** ( vec_type p )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:171
msgid "vec_type **fwidth** ( vec_type p )"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:174
msgid "Functions not in GLES2's GLSL were added with GaaeExplorers own shader standard library. These functions may perform worse in GLES2 compared to GLES3."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:177
msgid "``textureSize()`` workaround"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:179
msgid "GLES2 does not support ``textureSize()``. You can get the size of a texture the old fashioned way by passing in a uniform with the texture size yourself."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:195
msgid "Built in variables and render modes"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:197
msgid "GaaeExplorer also provides many built-in variables and render modes. Some cannot be supported in GLES2. Below is a list of built-in variables and render modes that, when written to, will have no effect or could even cause issues when using the GLES2 backend."
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:202
msgid "Variable / Render Mode"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:204
msgid "``ensure_correct_normals``"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:206
msgid "``INSTANCE_ID``"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:208
msgid "``DEPTH``"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:210
msgid "``ANISOTROPY``"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:212
msgid "``ANISOTROPY_FLOW``"
msgstr ""

#: ../tutorials/rendering/gles2_gles3_differences.rst:214
msgid "``SSS_STRENGTH``"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
