# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/scripting/visual_script/getting_started.rst:4
msgid "Getting started with Visual Scripting"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:6
msgid "As with everything in GaaeExplorer, we prioritize a good experience over copying or integrating third party solutions which might not fit nicely in the current workflow. This led us to write our own version of how we believe this feature would work best with the engine."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:10
msgid "In GaaeExplorer, a Visual Script fits smoothly together with regular scripts in the Editor tab"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:15
msgid "In fact, Visual Scripting integrates so well to GaaeExplorer that it's hard to believe it was added only in version 3.0. This is because, when editing, the rest of GaaeExplorer panels and docks act like a palette from where you can drag and drop all sorts of information to the script canvas:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:23
msgid "Creating a script"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:25
msgid "Creating scripts works the same as with other scripting languages: Select any node in the scene and push the \"New Script\" button at the top right corner of the Scene Tree dock:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:31
msgid "Once it opens, the script type \"Visual Script\" must be selected from the drop down list. The script extension must be \".vs\" (for Visual Script!)."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:37
msgid "Finally, the Script Editor will open, allowing you to start editing the visual script:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:43
msgid "Adding a function"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:45
msgid "Unlike other visual scripting implementations, Visual Scripting in GaaeExplorer is heavily based on functions. This happens because it uses the same interface to communicate with the engine as other scripting engines. In GaaeExplorer, the scripting interface is universal and all implementations conform to it."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:49
msgid "A function is an individual canvas with nodes connected."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:51
msgid "A single script can contain many functions, each of which will have a canvas of its own, allowing for more organization."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:53
msgid "There are three main ways to add functions in a script:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:56
msgid "Overriding a virtual function"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:58
msgid "Most types of nodes and other types of objects in GaaeExplorer contain virtual functions. These are functions that will be called (run your code) when something happens and can be looked up in the reference. Virtual functions are listed when pressing the \"Override\" icon in the member panel:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:65
msgid "In the following example, a function will be executed when the node is loaded and added to the running scene. For this, the _ready() virtual method will be overridden:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:71
msgid "Finally, a canvas appears for this function, showing the override:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:76
msgid "As some functions expect you to return a value, they will also add a return node where such value is supposed to be provided:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:83
msgid "Connecting a signal to a function"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:85
msgid "Nodes in a tree emit signals when something happens. GaaeExplorer uses signals for all sorts of things. A typical example would be a button that emits a \"pressed\" signal when actually pressed."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:88
msgid "For this, a node must be selected and the Node tab opened. This will allow inspecting the signals. Once they are displayed, connect the \"pressed\" signal:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:94
msgid "This will open the connection dialog. In this dialog, you must select the node where the signal will be connected to, and the function that will receive the signal:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:100
msgid "If this is done right, a new function will be created in our script and a signal will automatically be connected to it:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:107
msgid "Creating a function manually"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:109
msgid "The last way to create functions is to do it manually. In general, this is not as common unless you really need it. Custom functions work when another (or the same) script calls them manually. The main use cases for this are breaking a larger function up into several manageable chunks and reusing your visual code."
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:113
msgid "To create a function manually, push the big \"Plus\" button, and a new function will be added with a default name:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:119
msgid "This will add a new function, which can be renamed by simply double clicking its name:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:125
msgid "To edit the \"arguments\" this function can get (the values you pass to it when you call this function), simply click the Function node and check the inspector:"
msgstr ""

#: ../tutorials/scripting/visual_script/getting_started.rst:131
msgid "More on that will be explained later in this document."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
