# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/scripting/idle_and_physics_processing.rst:4
msgid "Idle and Physics Processing"
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:6
msgid "Games run in a loop. Each frame, you need to update the state of your game world before drawing it on screen. GaaeExplorer provides two virtual methods in the Node class to do so: :ref:`Node._process() <class_Node_method__process>` and :ref:`Node._physics_process() <class_Node_method__physics_process>`. If you define either or both in a script, the engine will call them automatically."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:12
msgid "There are two types of processing available to you:"
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:14
msgid "**Idle processing** allows you to run code that updates a node every frame, as often as possible."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:16
msgid "**Physics processing** happens at a fixed rate, 60 times per second by default. This is independent of your game's actual framerate, and keeps physics running smoothly. You should use it for anything that involves the physics engine, like moving a body that collides with the environment."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:21
msgid "You can activate idle processing by defining the ``_process()`` method in a script. You can turn it off and back on by calling :ref:`Node.set_process() <class_Node_method_set_process>`."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:25
#: ../tutorials/scripting/idle_and_physics_processing.rst:57
msgid "The engine calls this method every time it draws a frame:"
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:41
msgid "Keep in mind that the frequency at which the engine calls ``_process()`` depends on your application's framerate, which varies over time and across devices."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:44
msgid "The function's ``delta`` parameter is the time elapsed in seconds since the previous call to ``_process()``. Use this parameter to make calculations independent of the framerate. For example, you should always multiply a speed value by ``delta`` to animate a moving object."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:49
msgid "Physics processing works with a similar virtual function: ``_physics_process()``. Use it for calculations that must happen before each physics step, like moving a character that collides with the game world. As mentioned above, ``_physics_process()`` runs at fixed time intervals as much as possible to keep the physics interactions stable. You can change the interval between physics steps in the Project Settings, under Physics -> Common -> Physics Fps. By default, it's set to run 60 times per second."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:73
msgid "The function ``_process()`` is not synchronized with physics. Its rate depends on hardware and game optimization. It also runs after the physics step in single-threaded games."
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:77
msgid "You can see the ``_process()`` function at work by creating a scene with a single Label node, with the following script attached to it:"
msgstr ""

#: ../tutorials/scripting/idle_and_physics_processing.rst:104
msgid "When you run the scene, you should see a counter increasing each frame."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
