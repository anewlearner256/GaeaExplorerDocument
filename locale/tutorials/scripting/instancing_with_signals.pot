# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/scripting/instancing_with_signals.rst:1
msgid "Signal"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:7
msgid "Instancing with signals"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:9
msgid "Signals provide a way to decouple game objects, allowing you to avoid forcing a fixed arrangement of nodes. One sign that a signal might be called for is when you find yourself using ``get_parent()``. Referring directly to a node's parent means that you can't easily move that node to another location in the scene tree. This can be especially problematic when you are instancing objects at runtime and may want to place them in an arbitrary location in the running scene tree."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:16
msgid "Below we'll consider an example of such a situation: firing bullets."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:19
msgid "Shooting example"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:21
msgid "Consider a player character that can rotate and shoot towards the mouse. Every time the mouse button is clicked, we create an instance of the bullet at the player's location. See :ref:`doc_instancing` for details."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:25
msgid "We'll use an ``Area2D`` for the bullet, which moves in a straight line at a given velocity:"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:50
msgid "However, if the bullets are added as children of the player, then they will remain \"attached\" to the player as it rotates:"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:55
msgid "Instead, we need the bullets to be independent of the player's movement - once fired, they should continue traveling in a straight line and the player can no longer affect them. Instead of being added to the scene tree as a child of the player, it makes more sense to add the bullet as a child of the \"main\" game scene, which may be the player's parent or even further up the tree."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:61
msgid "You could do this by adding the bullet to the main scene directly:"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:74
msgid "However, this will lead to a different problem. Now if you try to test your \"Player\" scene independently, it will crash on shooting, because there is no parent node to access. This makes it a lot harder to test your player code independently and also means that if you decide to change your main scene's node structure, the player's parent may no longer be the appropriate node to receive the bullets."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:81
msgid "The solution to this is to use a signal to \"emit\" the bullets from the player. The player then has no need to \"know\" what happens to the bullets after that - whatever node is connected to the signal can \"receive\" the bullets and take the appropriate action to spawn them."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:86
msgid "Here is the code for the player using signals to emit the bullet:"
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:131
msgid "In the main scene, we then connect the player's signal (it will appear in the \"Node\" tab)."
msgstr ""

#: ../tutorials/scripting/instancing_with_signals.rst:155
msgid "Now the bullets will maintain their own movement independent of the player's rotation:"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
