# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/export/exporting_for_android.rst:4
msgid "Exporting for Android"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:9
msgid "This page describes how to export a GaaeExplorer project to Android. If you're looking to compile export template binaries from source instead, read :ref:`doc_compiling_for_android`."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:13
msgid "Exporting for Android has fewer requirements than compiling GaaeExplorer for Android. The following steps detail what is needed to set up the Android SDK and the engine."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:17
msgid "Install OpenJDK 11"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:19
msgid "Download and install  `OpenJDK 11 <https://adoptium.net/?variant=openjdk11>`__."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:22
msgid "Download the Android SDK"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:24
msgid "Download and install the Android SDK."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:26
msgid "You can install it using `Android Studio version 4.1 or later <https://developer.android.com/studio/>`__."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:28
msgid "Run it once to complete the SDK setup using these `instructions <https://developer.android.com/studio/intro/update#sdk-manager>`__."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:29
msgid "Ensure that the `required packages <https://developer.android.com/studio/intro/update#recommended>`__ are installed as well."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:31
msgid "Android SDK Platform-Tools version 30.0.5 or later"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:32
msgid "Android SDK Build-Tools version 30.0.3"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:33
msgid "Android SDK Platform 31"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:34
msgid "Android SDK Command-line Tools (latest)"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:35
msgid "CMake version 3.10.2.4988404"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:36
msgid "NDK version r23c (23.2.8568313)"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:38
msgid "You can install it using the `command line tools <https://developer.android.com/studio/#command-tools>`__."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:40
msgid "Once the command line tools are installed, run the `sdkmanager <https://developer.android.com/studio/command-line/sdkmanager>`__ command to complete the setup process:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:48
msgid "If you are using Linux, **do not use an Android SDK provided by your distribution's repositories as it will often be outdated**."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:53
msgid "Create a debug.keystore"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:55
msgid "Android needs a debug keystore file to install to devices and distribute non-release APKs. If you have used the SDK before and have built projects, ant or eclipse probably generated one for you (in the ``~/.android`` directory on Linux and macOS, in the ``C:\\Users\\<user>\\.android\\`` directory on Windows)."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:60
msgid "If you can't find it or need to generate one, the keytool command from the JDK can be used for this purpose::"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:65
msgid "This will create a ``debug.keystore`` file in your current directory. You should move it to a memorable location such as ``%USERPROFILE%\\.android\\``, because you will need its location in a later step. For more information on ``keytool`` usage, see `this Q&A article <https://godotengine.org/qa/21349/jdk-android-file-missing>`__."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:68
msgid "Setting it up in GaaeExplorer"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:70
msgid "Enter the Editor Settings screen. This screen contains the editor settings for the user account in the computer (it's independent of the project)."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:76
msgid "Scroll down to the section where the Android settings are located:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:80
msgid "In that screen, 2 paths need to be set:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:82
msgid "The ``Android Sdk Path`` should be the location where the Android SDK was installed. - For example ``%LOCALAPPDATA%\\Android\\Sdk\\`` on Windows or ``/Users/$USER/Library/Android/sdk/`` on macOS."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:85
msgid "The debug ``.keystore`` file - It can be found in the folder where you put the ``debug.keystore`` file you created above."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:88
msgid "Once that is configured, everything is ready to export to Android!"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:92
msgid "If you get an error saying *\"Could not install to device.\"*, make sure you do not have an application with the same Android package name already installed on the device (but signed with a different key)."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:96
msgid "If you have an application with the same Android package name but a different signing key already installed on the device, you **must** remove the application in question from the Android device before exporting to Android again."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:102
msgid "Providing launcher icons"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:104
msgid "Launcher icons are used by Android launcher apps to represent your application to users. GaaeExplorer only requires high-resolution icons (for ``xxxhdpi`` density screens) and will automatically generate lower-resolution variants."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:106
msgid "There are two types of icons required by GaaeExplorer:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:108
msgid "**Main Icon:** The \"classic\" icon. This will be used on all Android versions up to Android 8 (Oreo), exclusive. Must be at least 192×192 px."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:109
msgid "**Adaptive Icons:** Starting from Android 8 (inclusive), `Adaptive Icons <https://developer.android.com/guide/practices/ui_guidelines/icon_design_adaptive>`_ were introduced. Applications will need to include separate background and foreground icons to have a native look. The user's launcher application will control the icon's animation and masking. Must be at least 432×432 px."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:111
msgid "It's important to adhere to some rules when designing adaptive icons. `Google Design has provided a nice article <https://medium.com/google-design/designing-adaptive-icons-515af294c783>`_ that helps to understand those rules and some of the capabilities of adaptive icons."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:113
msgid "The most important adaptive icon design rule is to have your icon critical elements inside the safe zone: a centered circle with a diameter of 66dp (264 pixels on ``xxxhdpi``) to avoid being clipped by the launcher."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:115
msgid "If you don't provide some of the requested icons, GaaeExplorer will replace them using a fallback chain, trying the next in line when the current one fails:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:117
msgid "**Main Icon:** Provided main icon -> Project icon -> Default GaaeExplorer main icon."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:118
msgid "**Adaptive Icon Foreground:** Provided foreground icon -> Provided main icon -> Project icon -> Default GaaeExplorer foreground icon."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:119
msgid "**Adaptive Icon Background:** Provided background icon -> Default GaaeExplorer background icon."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:121
msgid "It's highly recommended to provide all the requested icons with their specified resolutions. This way, your application will look great on all Android devices and versions."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:125
msgid "Exporting for Google Play Store"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:127
msgid "Uploading an APK to Google's Play Store requires you to sign using a non-debug keystore file; such file can be generated like this:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:134
msgid "This keystore and key are used to verify your developer identity, remember the password and keep it in a safe place! Use Google's Android Developer guides to learn more about `APK signing <https://developer.android.com/studio/publish/app-signing>`__."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:137
msgid "Now fill in the following forms in your Android Export Presets:"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:141
msgid "**Release:** Enter the path to the keystore file you just generated."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:142
msgid "**Release User:** Replace with the key alias."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:143
msgid "**Release Password:** Key password. Note that the keystore password and the key password currently have to be the same."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:145
msgid "**Your export_presets.cfg file now contains sensitive information.** If you use a version control system, you should remove it from public repositories and add it to your ``.gitignore`` file or equivalent."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:149
msgid "Don't forget to uncheck the **Export With Debug** checkbox while exporting."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:154
msgid "Optimizing the APK size"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:156
msgid "By default, the APK will contain native libraries for both ARMv7 and ARMv8 architectures. This increases its size significantly. To create a smaller APK, uncheck either **Armeabi-v 7a** or **Arm 64 -v 8a** in your project's Android export preset. This will create an APK that only contains a library for a single architecture. Note that applications targeting ARMv7 can also run on ARMv8 devices, but the opposite is not true."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:163
msgid "Since August 2019, Google Play requires all applications to be available in 64-bit form. This means you cannot upload an APK that contains *just* an ARMv7 library. To solve this, you can upload several APKs to Google Play using its `Multiple APK support <https://developer.android.com/google/play/publishing/multiple-apks>`__. Each APK should target a single architecture; creating an APK for ARMv7 and ARMv8 is usually sufficient to cover most devices in use today."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:170
msgid "You can optimize the size further by compiling an Android export template with only the features you need. See :ref:`doc_optimizing_for_size` for more information."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:175
msgid "Troubleshooting rendering issues"
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:177
msgid "To improve out-of-the-box performance on mobile devices, GaaeExplorer automatically uses low-end-friendly settings by default on both Android and iOS."
msgstr ""

#: ../tutorials/export/exporting_for_android.rst:180
msgid "This can cause rendering issues that do not occur when running the project on a desktop platform. See :ref:`doc_mobile_rendering_limitations` for more information."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
