# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/export/exporting_for_web.rst:4
msgid "Exporting for the Web"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:8
msgid "This page describes how to export a GaaeExplorer project to HTML5. If you're looking to compile editor or export template binaries from source instead, read :ref:`doc_compiling_for_web`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:12
msgid "HTML5 export allows publishing games made in GaaeExplorer Engine to the browser. This requires support for `WebAssembly <https://webassembly.org/>`__ and `WebGL <https://www.khronos.org/webgl/>`__ in the user's browser."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:17
msgid "Use the browser-integrated developer console, usually opened with :kbd:`F12`, to view **debug information** like JavaScript, engine, and WebGL errors."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:21
msgid "`There are significant bugs when running HTML5 projects on iOS <https://github.com/godotengine/godot/issues?q=is:issue+is:open+label:platform:html5+ios>`__ (regardless of the browser). We recommend using :ref:`iOS' native export functionality <doc_exporting_for_ios>` instead, as it will also result in better performance."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:28
msgid "WebGL version"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:30
msgid "Depending on your choice of renderer, GaaeExplorer can target WebGL 1.0 (*GLES2*) or WebGL 2.0 (*GLES3*)."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:33
msgid "WebGL 1.0 is the recommended option if you want your project to be supported on all browsers with the best performance."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:36
msgid "GaaeExplorer's GLES3 renderer targets high end devices, and the performance using WebGL 2.0 can be subpar. Some features are also not supported in WebGL 2.0 specifically."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:40
msgid "Additionally, while most browsers support WebGL 2.0, this is not yet the case for **Safari**. WebGL 2.0 support is coming in Safari 15 for macOS, and is not available yet for any **iOS** browser (all WebKit-based like Safari). See `Can I use WebGL 2.0 <https://caniuse.com/webgl2>`__ for details."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:48
msgid "Export options"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:50
msgid "If a runnable web export template is available, a button appears between the *Stop scene* and *Play edited Scene* buttons in the editor to quickly open the game in the default browser for testing."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:54
msgid "You can choose the **Export Type** to select which features will be available:"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:56
msgid "*Regular*: is the most compatible across browsers, will not support threads, nor GDNative."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:58
msgid "*Threads*: will require the browser to support `SharedArrayBuffer <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer>`__. See `Can I use SharedArrayBuffer <https://caniuse.com/sharedarraybuffer>`__ for details."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:62
msgid "*GDNative*: enables GDNative support but makes the binary bigger and slower to load."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:65
msgid "If you plan to use :ref:`VRAM compression <doc_import_images>` make sure that **Vram Texture Compression** is enabled for the targeted platforms (enabling both **For Desktop** and **For Mobile** will result in a bigger, but more compatible export)."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:70
msgid "If a path to a **Custom HTML shell** file is given, it will be used instead of the default HTML page. See :ref:`doc_customizing_html5_shell`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:73
msgid "**Head Include** is appended into the ``<head>`` element of the generated HTML page. This allows to, for example, load webfonts and third-party JavaScript APIs, include CSS, or run JavaScript code."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:77
msgid "Each project must generate their own HTML file. On export, several text placeholders are replaced in the generated HTML file specifically for the given export options. Any direct modifications to that HTML file will be lost in future exports. To customize the generated file, use the **Custom HTML shell** option."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:84
msgid "**Export types** other than *Regular* are not yet supported by the C# version."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:88
msgid "Limitations"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:90
msgid "For security and privacy reasons, many features that work effortlessly on native platforms are more complicated on the web platform. Following is a list of limitations you should be aware of when porting a GaaeExplorer game to the web."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:96
msgid "Browser vendors are making more and more functionalities only available in `secure contexts <https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts>`_, this means that such features are only be available if the web page is served via a secure HTTPS connection (localhost is usually exempt from such requirement)."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:102
msgid "Check the `list of open HTML5 issues on GitHub <https://github.com/godotengine/godot/issues?q=is:open+is:issue+label:platform:html5>`__ to see if the functionality you're interested in has an issue yet. If not, open one to communicate your interest."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:108
msgid "Using cookies for data persistence"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:110
msgid "Users must **allow cookies** (specifically IndexedDB) if persistence of the ``user://`` file system is desired. When playing a game presented in an ``iframe``, **third-party** cookies must also be enabled. Incognito/private browsing mode also prevents persistence."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:115
msgid "The method ``OS.is_userfs_persistent()`` can be used to check if the ``user://`` file system is persistent, but can give false positives in some cases."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:120
msgid "Background processing"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:122
msgid "The project will be paused by the browser when the tab is no longer the active tab in the user's browser. This means functions such as ``_process()`` and ``_physics_process()`` will no longer run until the tab is made active again by the user (by switching back to the tab). This can cause networked games to disconnect if the user switches tabs for a long duration."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:128
msgid "This limitation does not apply to unfocused browser *windows*. Therefore, on the user's side, this can be worked around by running the project in a separate *window* instead of a separate tab."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:133
msgid "Threads"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:135
msgid "As mentioned :ref:`above <doc_javascript_export_options>` multi-threading is only available if the appropriate **Export Type** is set and support for it across browsers is still limited."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:139
msgid "Requires a :ref:`secure context <doc_javascript_secure_contexts>`. Browsers also require that the web page is served with specific `cross-origin isolation headers <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy>`__."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:144
msgid "GDNative"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:146
msgid "As mentioned :ref:`above <doc_javascript_export_options>` GDNative is only available if the appropriate **Export Type** is set."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:149
msgid "The export will also copy the required GDNative ``.wasm`` files to the output folder (and must be uploaded to your server along with your game)."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:153
msgid "Full screen and mouse capture"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:155
msgid "Browsers do not allow arbitrarily **entering full screen**. The same goes for **capturing the cursor**. Instead, these actions have to occur as a response to a JavaScript input event. In GaaeExplorer, this means entering full screen from within a pressed input event callback such as ``_input`` or ``_unhandled_input``. Querying the :ref:`class_Input` singleton is not sufficient, the relevant input event must currently be active."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:162
msgid "For the same reason, the full screen project setting doesn't work unless the engine is started from within a valid input event handler. This requires :ref:`customization of the HTML page <doc_customizing_html5_shell>`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:167
msgid "Audio"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:169
msgid "Chrome restricts how websites may play audio. It may be necessary for the player to click or tap or press a key to enable audio."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:172
msgid "Google offers additional information about their `Web Audio autoplay policies <https://sites.google.com/a/chromium.org/dev/audio-video/autoplay>`__."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:175
msgid "Access to microphone requires a :ref:`secure context <doc_javascript_secure_contexts>`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:179
msgid "Networking"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:181
msgid "Low level networking is not implemented due to lacking support in browsers."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:183
msgid "Currently, only :ref:`HTTP client <doc_http_client_class>`, :ref:`HTTP requests <doc_http_request_class>`, :ref:`WebSocket (client) <doc_websocket>` and :ref:`WebRTC <doc_webrtc>` are supported."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:188
msgid "The HTTP classes also have several restrictions on the HTML5 platform:"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:190
msgid "Accessing or changing the ``StreamPeer`` is not possible"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:191
msgid "Threaded/Blocking mode is not available"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:192
msgid "Cannot progress more than once per frame, so polling in a loop will freeze"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:193
msgid "No chunked responses"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:194
msgid "Host verification cannot be disabled"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:195
msgid "Subject to `same-origin policy <https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy>`__"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:198
msgid "Clipboard"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:200
msgid "Clipboard synchronization between engine and the operating system requires a browser supporting the `Clipboard API <https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API>`__, additionally, due to the API asynchronous nature might not be reliable when accessed from GDScript."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:205
#: ../tutorials/export/exporting_for_web.rst:216
msgid "Requires a :ref:`secure context <doc_javascript_secure_contexts>`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:208
msgid "Gamepads"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:210
msgid "Gamepads will not be detected until one of their button is pressed. Gamepads might have the wrong mapping depending on the browser/OS/gamepad combination, sadly the `Gamepad API <https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API>`__ does not provide a reliable way to detect the gamepad information necessary to remap them based on model/vendor/OS due to privacy considerations."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:219
msgid "Boot splash is not displayed"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:221
msgid "The default HTML page does not display the boot splash while loading. However, the image is exported as a PNG file, so :ref:`custom HTML pages <doc_customizing_html5_shell>` can display it."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:226
msgid "Shader language limitations"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:228
msgid "When exporting a GLES2 project to HTML5, WebGL 1.0 will be used. WebGL 1.0 doesn't support dynamic loops, so shaders using those won't work there."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:232
msgid "Serving the files"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:234
msgid "Exporting for the web generates several files to be served from a web server, including a default HTML page for presentation. A custom HTML file can be used, see :ref:`doc_customizing_html5_shell`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:238
msgid "The generated ``.html`` file can be used as ``DirectoryIndex`` in Apache servers and can be renamed to e.g. ``index.html`` at any time, its name is never depended on by default."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:242
msgid "The HTML page draws the game at maximum size within the browser window. This way it can be inserted into an ``<iframe>`` with the game's size, as is common on most web game hosting sites."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:246
msgid "The other exported files are served as they are, next to the ``.html`` file, names unchanged. The ``.wasm`` file is a binary WebAssembly module implementing the engine. The ``.pck`` file is the GaaeExplorer main pack containing your game. The ``.js`` file contains start-up code and is used by the ``.html`` file to access the engine. The ``.png`` file contains the boot splash image. It is not used in the default HTML page, but is included for :ref:`custom HTML pages <doc_customizing_html5_shell>`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:254
msgid "The ``.pck`` file is binary, usually delivered with the MIME-type :mimetype:`application/octet-stream`. The ``.wasm`` file is delivered as :mimetype:`application/wasm`."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:258
msgid "Delivering the WebAssembly module (``.wasm``) with a MIME-type other than :mimetype:`application/wasm` can prevent some start-up optimizations."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:262
msgid "Delivering the files with server-side compression is recommended especially for the ``.pck`` and ``.wasm`` files, which are usually large in size. The WebAssembly module compresses particularly well, down to around a quarter of its original size with gzip compression."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:267
msgid "**Hosts that provide on-the-fly compression:** GitHub Pages (gzip)"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:269
msgid "**Hosts that don't provide on-the-fly compression:** itch.io, GitLab Pages (`supports manual gzip precompression <https://webd97.de/post/gitlab-pages-compression/>`__)"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:275
msgid "Calling JavaScript from script"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:277
msgid "In web builds, the ``JavaScript`` singleton is implemented. It offers a single method called ``eval`` that works similarly to the JavaScript function of the same name. It takes a string as an argument and executes it as JavaScript code. This allows interacting with the browser in ways not possible with script languages integrated into GaaeExplorer."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:288
msgid "The value of the last JavaScript statement is converted to a GDScript value and returned by ``eval()`` under certain circumstances:"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:291
msgid "JavaScript ``number`` is returned as GDScript :ref:`class_float`"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:292
msgid "JavaScript ``boolean`` is returned as GDScript :ref:`class_bool`"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:293
msgid "JavaScript ``string`` is returned as GDScript :ref:`class_String`"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:294
msgid "JavaScript ``ArrayBuffer``, ``TypedArray`` and ``DataView`` are returned as GDScript :ref:`class_PoolByteArray`"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:303
msgid "Any other JavaScript value is returned as ``null``."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:305
msgid "HTML5 export templates may be :ref:`built <doc_compiling_for_web>` without support for the singleton to improve security. With such templates, and on platforms other than HTML5, calling ``JavaScript.eval`` will also return ``null``. The availability of the singleton can be checked with the ``JavaScript`` :ref:`feature tag <doc_feature_tags>`::"
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:319
msgid "GDScript's multi-line strings, surrounded by 3 quotes ``\"\"\"`` as in ``my_func3()`` above, are useful to keep JavaScript code readable."
msgstr ""

#: ../tutorials/export/exporting_for_web.rst:322
msgid "The ``eval`` method also accepts a second, optional Boolean argument, which specifies whether to execute the code in the global execution context, defaulting to ``false`` to prevent polluting the global namespace::"
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
