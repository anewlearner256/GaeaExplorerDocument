# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:4
msgid "CanvasItem shaders"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:6
msgid "CanvasItem shaders are used to draw all 2D elements in GaaeExplorer. These include all nodes that inherit from CanvasItems, and all GUI elements."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:9
msgid "CanvasItem shaders contain less built-in variables and functionality than Spatial shaders, but they maintain the same basic structure with vertex, fragment, and light processor functions."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:14
msgid "Render modes"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:17
msgid "Render mode"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:17
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:52
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:114
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:165
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:218
msgid "Description"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:19
msgid "**blend_mix**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:19
msgid "Mix blend mode (alpha is transparency), default."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:21
msgid "**blend_add**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:21
msgid "Additive blend mode."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:23
msgid "**blend_sub**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:23
msgid "Subtractive blend mode."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:25
msgid "**blend_mul**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:25
msgid "Multiplicative blend mode."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:27
msgid "**blend_premul_alpha**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:27
msgid "Pre-multiplied alpha blend mode."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:29
msgid "**blend_disabled**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:29
msgid "Disable blending, values (including alpha) are written as-is."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:31
msgid "**unshaded**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:31
msgid "Result is just albedo. No lighting/shading happens in material."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:33
msgid "**light_only**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:33
msgid "Only draw on light pass."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:35
msgid "**skip_vertex_transform**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:35
msgid "VERTEX/NORMAL/etc need to be transformed manually in vertex function."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:39
msgid "Built-ins"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:41
msgid "Values marked as \"in\" are read-only. Values marked as \"out\" are for optional writing and will not necessarily contain sensible values. Values marked as \"inout\" provide a sensible default value, and can optionally be written to. Samplers are not subjects of writing and they are not marked."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:47
msgid "Global built-ins"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:49
msgid "Global built-ins are available everywhere, including custom functions."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:52
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:114
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:165
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:218
msgid "Built-in"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:54
msgid "in float **TIME**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:54
msgid "Global time since the engine has started, in seconds (always positive). It's subject to the rollover setting (which is 3,600 seconds by default). It's not affected by :ref:`time_scale<class_Engine_property_time_scale>` or pausing, but you can override the ``TIME`` variable's time scale by calling ``VisualServer.set_shader_time_scale()`` with the desired time scale factor as parameter (``1.0`` being the default)."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:63
msgid "Vertex built-ins"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:65
msgid "Vertex data (``VERTEX``) is presented in local space (pixel coordinates, relative to the camera). If not written to, these values will not be modified and be passed through as they came."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:68
msgid "The user can disable the built-in modelview transform (projection will still happen later) and do it manually with the following code:"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:81
msgid "``WORLD_MATRIX`` is actually a modelview matrix. It takes input in local space and transforms it into view space."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:84
msgid "In order to get the world space coordinates of a vertex, you have to pass in a custom uniform like so:"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:91
msgid "Then, in your vertex shader:"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:102
msgid "``world_position`` can then be used in either the vertex or fragment functions."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:104
msgid "Other built-ins, such as UV and COLOR, are also passed through to the fragment function if not modified."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:106
msgid "For instancing, the INSTANCE_CUSTOM variable contains the instance custom data. When using particles, this information is usually:"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:109
msgid "**x**: Rotation angle in radians."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:110
msgid "**y**: Phase during lifetime (0 to 1)."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:111
msgid "**z**: Animation frame."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:116
msgid "in mat4 **WORLD_MATRIX**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:116
msgid "Image space to view space transform."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:118
msgid "in mat4 **EXTRA_MATRIX**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:118
msgid "Extra transform."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:120
msgid "in mat4 **PROJECTION_MATRIX**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:120
msgid "View space to clip space transform."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:122
msgid "in vec4 **INSTANCE_CUSTOM**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:122
msgid "Instance custom data."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:124
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:201
msgid "in bool **AT_LIGHT_PASS**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:124
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:201
msgid "``true`` if this is a light pass."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:126
msgid "inout vec2 **VERTEX**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:126
msgid "Vertex, in image space."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:128
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:191
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:239
msgid "in vec2 **TEXTURE_PIXEL_SIZE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:128
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:191
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:239
msgid "Normalized pixel size of default 2D texture. For a Sprite with a texture of size 64x32px, **TEXTURE_PIXEL_SIZE** = :code:`vec2(1/64, 1/32)`"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:132
msgid "inout vec2 **UV**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:132
msgid "Texture coordinates."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:134
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:180
msgid "inout vec4 **COLOR**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:134
msgid "Color from vertex primitive."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:136
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:183
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:233
msgid "in vec4 **MODULATE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:136
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:183
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:233
msgid "Final modulate color. If used, **COLOR** will not be multiplied by modulate automatically after the fragment function."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:140
msgid "inout float **POINT_SIZE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:140
msgid "Point size for point drawing."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:144
msgid "Fragment built-ins"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:146
msgid "Certain Nodes (for example, :ref:`Sprites <class_Sprite>`) display a texture by default. However, when a custom fragment function is attached to these nodes, the texture lookup needs to be done manually. GaaeExplorer does not provide the texture color in the ``COLOR`` built-in variable; to read the texture color for such nodes, use:"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:155
msgid "This differs from the behavior of the built-in normal map. If a normal map is attached, GaaeExplorer uses it by default and assigns its value to the built-in ``NORMAL`` variable. If you are using a normal map meant for use in 3D, it will appear inverted. In order to use it in your shader, you must assign it to the ``NORMALMAP`` property. GaaeExplorer will handle converting it for use in 2D and overwriting ``NORMAL``."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:167
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:220
msgid "in vec4 **FRAGCOORD**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:167
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:220
msgid "Coordinate of pixel center. In screen space. ``xy`` specifies position in window, ``z`` specifies fragment depth if ``DEPTH`` is not used. Origin is lower-left."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:171
msgid "inout vec3 **NORMAL**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:171
msgid "Normal read from **NORMAL_TEXTURE**. Writable."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:173
msgid "out vec3 **NORMALMAP**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:173
msgid "Configures normal maps meant for 3D for use in 2D. If used, overwrites **NORMAL**."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:176
msgid "inout float **NORMALMAP_DEPTH**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:176
msgid "Normalmap depth for scaling."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:178
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:227
msgid "in vec2 **UV**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:178
msgid "UV from vertex function."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:180
msgid "Color from vertex function and output fragment color. If unused, will be set to **TEXTURE** color."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:187
msgid "in sampler2D **TEXTURE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:187
msgid "Default 2D texture."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:189
msgid "in sampler2D **NORMAL_TEXTURE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:189
msgid "Default 2D normal texture."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:195
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:243
msgid "in vec2 **SCREEN_UV**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:195
msgid "Screen UV for use with **SCREEN_TEXTURE**."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:197
msgid "in vec2 **SCREEN_PIXEL_SIZE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:197
msgid "Size of individual pixels. Equal to inverse of resolution."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:199
#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:245
msgid "in vec2 **POINT_COORD**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:199
msgid "Coordinate for drawing points."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:203
msgid "in sampler2D **SCREEN_TEXTURE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:203
msgid "Screen texture, mipmaps contain gaussian blurred versions."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:207
msgid "Light built-ins"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:209
msgid "Light processor functions work differently in 2D than they do in 3D. In CanvasItem shaders, the shader is called once for the object being drawn, and then once for each light touching that object in the scene. Use render_mode ``unshaded`` if you do not want any light passes to occur for that object. Use render_mode ``light_only`` if you only want light passes to occur for that object; this can be useful when you only want the object visible where it is covered by light."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:215
msgid "When the shader is on a light pass, the ``AT_LIGHT_PASS`` variable will be ``true``."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:224
msgid "in vec3 **NORMAL**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:224
msgid "Input Normal. Although this value is passed in, **normal calculation still happens outside of this function**."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:227
msgid "UV from vertex function, equivalent to the UV in the fragment function."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:229
msgid "in vec4 **COLOR**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:229
msgid "Input Color. This is the output of the fragment function (with final modulation applied, if **MODULATE** is not used in any function of the shader)."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:237
msgid "sampler2D **TEXTURE**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:237
msgid "Current texture in use for CanvasItem."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:243
msgid "**SCREEN_TEXTURE** Coordinate (for using with screen texture)."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:245
msgid "UV for Point Sprite."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:247
msgid "inout vec2 **LIGHT_VEC**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:247
msgid "Vector from light to fragment in local coordinates. It can be modified to alter illumination direction when normal maps are used."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:250
msgid "inout vec2 **SHADOW_VEC**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:250
msgid "Vector from light to fragment in local coordinates. It can be modified to alter shadow computation."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:253
msgid "inout float **LIGHT_HEIGHT**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:253
msgid "Height of Light. Only effective when normals are used."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:255
msgid "inout vec4 **LIGHT_COLOR**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:255
msgid "Color of Light."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:257
msgid "in vec2 **LIGHT_UV**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:257
msgid "UV for Light texture."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:259
msgid "out vec4 **SHADOW_COLOR**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:259
msgid "Shadow Color of Light."
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:261
msgid "inout vec4 **LIGHT**"
msgstr ""

#: ../tutorials/shaders/shader_reference/canvas_item_shader.rst:261
msgid "Value from the Light texture and output color. Can be modified. If not used, the light function is ignored."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
