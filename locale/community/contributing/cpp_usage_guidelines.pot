# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019-2023, the Gaeaway community 
# This file is distributed under the same license as the GaeaExplorer Web4.0 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GaeaExplorer Web4.0 吉嘉时空数字孪生平台\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-27 17:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../community/contributing/cpp_usage_guidelines.rst:4
msgid "C++ usage guidelines"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:7
msgid "Rationale"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:9
msgid "Since GaaeExplorer 4.0, the C++ standard used throughout the codebase is a subset of **C++17**. While modern C++ brings a lot of opportunities to write faster, more readable code, we chose to restrict our usage of C++ to a subset for a few reasons:"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:14
msgid "It makes it easier to review code in online editors. This is because engine contributors don't always have access to a full-featured IDE while reviewing code."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:17
msgid "It makes the code easier to grasp for beginner contributors (who may not be professional C++ programmers). GaaeExplorer's codebase is known to be easy to learn from, and we'd like to keep it that way."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:21
msgid "To get your pull request merged, it needs to follow the C++ usage guidelines outlined here. Of course, you can use features not allowed here in your own C++ modules or GDNative scripts."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:27
msgid "Prior to GaaeExplorer 4.0, the C++ standard used throughout the codebase was C++03, with a handful of C++14 extensions. If you are contributing a pull request to the `3.x` branch rather than `master`, your code can't use C++17 features. Instead, your code must be able to be built with a C++14 compiler."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:32
msgid "The guidelines below don't apply to third-party dependencies, although we generally favor small libraries instead of larger solutions. See also :ref:`doc_best_practices_for_engine_contributors`."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:38
msgid "See :ref:`doc_code_style_guidelines` for formatting guidelines."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:41
msgid "Disallowed features"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:43
msgid "**Any feature not listed below is allowed.** Using features like ``constexpr`` variables and ``nullptr`` is encouraged when possible. Still, try to keep your use of modern C++ features conservative. Their use needs to serve a real purpose, such as improving code readability or performance."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:49
msgid "Standard Template Library"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:51
msgid "We don't allow using the `STL <https://en.wikipedia.org/wiki/Standard_Template_Library>`__ as GaaeExplorer provides its own data types (among other things). See :ref:`doc_faq_why_not_stl` for more information."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:55
msgid "This means that pull requests should **not** use ``std::string``, ``std::vector`` and the like. Instead, use GaaeExplorer's datatypes as described below:"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:58
msgid "Use ``String`` instead of ``std::string``."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:59
msgid "Use ``Vector`` instead of ``std::vector``. In some cases, ``LocalVector`` can be used as an alternative (ask core developers first)."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:61
msgid "Use ``Array`` instead of ``std::array``."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:65
msgid "GaaeExplorer also has a List datatype (which is a linked list). While List is already used in the codebase, it typically performs worse than other datatypes like Vector and Array. Therefore, List should be avoided in new code unless necessary."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:70
msgid "``auto`` keyword"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:72
msgid "Please don't use the ``auto`` keyword for type inference. While it can avoid repetition, it can also lead to confusing code:"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:83
msgid "Keep in mind hover documentation often isn't readily available for pull request reviewers. Most of the time, reviewers will use GitHub's online viewer to review pull requests."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:87
msgid "We chose to forbid ``auto`` instead of allowing it on a case-by-case basis to avoid having to decide on difficult edge cases. Thank you for your understanding."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:91
msgid "Lambdas"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:93
msgid "Lambdas should be used conservatively when they make code effectively faster or simpler, and do not impede readability. Please ask before using lambdas in a pull request."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:98
msgid "``#pragma once`` directive"
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:100
msgid "To follow the existing style, please use standard ``#ifdef``-based include guards instead of ``#pragma once`` in new files."
msgstr ""

#: ../community/contributing/cpp_usage_guidelines.rst:105
msgid "See :ref:`doc_code_style_guidelines_header_includes` for guidelines on sorting includes in C++ and Objective-C files."
msgstr ""

#: ../<rst_epilog>:0
msgid "Translation status"
msgstr ""
